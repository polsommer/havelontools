// ======================================================================
//
// fan_faire_pgc_c3po.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.factions;
include library.groundquests;
include library.pgc_quests;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/fan_faire_pgc_c3po";

// ======================================================================
// Script Conditions
// ======================================================================

boolean fan_faire_pgc_c3po_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean fan_faire_pgc_c3po_condition_needsProfession (obj_id player, obj_id npc)
{
	return !hasSkill(player, "class_chronicles_novice");
}

// ----------------------------------------------------------------------

boolean fan_faire_pgc_c3po_condition_relicEnabled (obj_id player, obj_id npc)
{
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void fan_faire_pgc_c3po_action_grantProfession (obj_id player, obj_id npc)
{
	grantSkill(player, "class_chronicles_novice");
	sendSystemMessage(player, "You are now a Chronicle Apprentice.", "");
	return;
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int fan_faire_pgc_c3po_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello. I am C-3P0, Human-Cyborg relations. May I help you with the Chronicle System?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is the Chronicle System?
	if (response == "s_28")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Chronicle System is a way for you to take storytelling to a whole new level by creating your own quests. These quests can then be enjoyed by others throughout the galaxy.
			string_id message = new string_id (c_stringFile, "s_29");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make a Chronicle Quest?
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Simply use the Chronicle Builder button in the game menu or use the command /chronicleQuestBuilder. Creating a Chronicle Holocron requires that you have Chronicle Relics for each task in your quest.
			string_id message = new string_id (c_stringFile, "s_41");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
	if (response == "s_37")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Currently, you may use the following tasks: Destroy, Destroy and Loot, Go To Location, Comm. Message, Craft Item, Perform, and PvP Objective.
			string_id message = new string_id (c_stringFile, "s_45");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Relic?
	if (response == "s_32")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: By collecting Chronicle Relics, you give yourself more exciting options for your quests. A Chronicle Relic is the essence of a quest task that can be used in your Chronicle Holocrons. When you create a Chronicle Holocron, the Chronicle Relics used in that Holocron are consumed. A Chronicle Relic may be deconstructed into Relic Fragments.
			string_id message = new string_id (c_stringFile, "s_33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Relic Fragment?
	if (response == "s_31")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Relic Fragment is a shard or remnant of a Chronicle Relic. These are formed when you deconstruct a relic and often as a remnant when building a Chronicle Holocron. If you have 10 Relic Fragments, you may reconstruct those into a new,  random Relic.
			string_id message = new string_id (c_stringFile, "s_38");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Draft?
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Chronicle Draft is a template for a Chronicle Holocron that you are building. It can be a work in progress or a finished quest that you may want to save or duplicate. With a Chronicle Draft, you may freely test your quest, edit it, or create Chronicle Holocrons from it. No Chronicle Relics are consumed when you save or edit a Chronicle Draft.
			string_id message = new string_id (c_stringFile, "s_43");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is Chronicle Holocron Sharing?
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chronicle Holocron Sharing allows a single Chronicle Holocron to be shared with others so that you may enjoy the quest together. To share a Chronicle Holocron, you must be in the same group, or guild, or Storyteller Story with whomever you wish to share the quest. Whether or not a Chronicle Holocron can be shared is decided by its creator as well as how many times it may be shared.
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to become a Chronicle Master.
	if (response == "s_66")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			fan_faire_pgc_c3po_action_grantProfession (player, npc);

			//-- NPC: Certainly. I'll happily get you started on the road towards being a Chronicle Master, but you will have to start at the beginning as an Apprentice.  Is there anything else I can help you with?
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fan_faire_pgc_c3po_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Chronicle System is a way for you to take storytelling to a whole new level by creating your own quests. These quests can then be enjoyed by others throughout the galaxy.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is the Chronicle System?
	if (response == "s_28")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Chronicle System is a way for you to take storytelling to a whole new level by creating your own quests. These quests can then be enjoyed by others throughout the galaxy.
			string_id message = new string_id (c_stringFile, "s_29");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make a Chronicle Quest?
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Simply use the Chronicle Builder button in the game menu or use the command /chronicleQuestBuilder. Creating a Chronicle Holocron requires that you have Chronicle Relics for each task in your quest.
			string_id message = new string_id (c_stringFile, "s_41");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
	if (response == "s_37")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Currently, you may use the following tasks: Destroy, Destroy and Loot, Go To Location, Comm. Message, Craft Item, Perform, and PvP Objective.
			string_id message = new string_id (c_stringFile, "s_45");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Relic?
	if (response == "s_32")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: By collecting Chronicle Relics, you give yourself more exciting options for your quests. A Chronicle Relic is the essence of a quest task that can be used in your Chronicle Holocrons. When you create a Chronicle Holocron, the Chronicle Relics used in that Holocron are consumed. A Chronicle Relic may be deconstructed into Relic Fragments.
			string_id message = new string_id (c_stringFile, "s_33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Relic Fragment?
	if (response == "s_31")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Relic Fragment is a shard or remnant of a Chronicle Relic. These are formed when you deconstruct a relic and often as a remnant when building a Chronicle Holocron. If you have 10 Relic Fragments, you may reconstruct those into a new,  random Relic.
			string_id message = new string_id (c_stringFile, "s_38");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Draft?
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Chronicle Draft is a template for a Chronicle Holocron that you are building. It can be a work in progress or a finished quest that you may want to save or duplicate. With a Chronicle Draft, you may freely test your quest, edit it, or create Chronicle Holocrons from it. No Chronicle Relics are consumed when you save or edit a Chronicle Draft.
			string_id message = new string_id (c_stringFile, "s_43");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is Chronicle Holocron Sharing?
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chronicle Holocron Sharing allows a single Chronicle Holocron to be shared with others so that you may enjoy the quest together. To share a Chronicle Holocron, you must be in the same group, or guild, or Storyteller Story with whomever you wish to share the quest. Whether or not a Chronicle Holocron can be shared is decided by its creator as well as how many times it may be shared.
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to become a Chronicle Master.
	if (response == "s_66")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			fan_faire_pgc_c3po_action_grantProfession (player, npc);

			//-- NPC: Certainly. I'll happily get you started on the road towards being a Chronicle Master, but you will have to start at the beginning as an Apprentice.  Is there anything else I can help you with?
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fan_faire_pgc_c3po_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Simply use the Chronicle Builder button in the game menu or use the command /chronicleQuestBuilder. Creating a Chronicle Holocron requires that you have Chronicle Relics for each task in your quest.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is the Chronicle System?
	if (response == "s_28")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Chronicle System is a way for you to take storytelling to a whole new level by creating your own quests. These quests can then be enjoyed by others throughout the galaxy.
			string_id message = new string_id (c_stringFile, "s_29");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make a Chronicle Quest?
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Simply use the Chronicle Builder button in the game menu or use the command /chronicleQuestBuilder. Creating a Chronicle Holocron requires that you have Chronicle Relics for each task in your quest.
			string_id message = new string_id (c_stringFile, "s_41");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
	if (response == "s_37")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Currently, you may use the following tasks: Destroy, Destroy and Loot, Go To Location, Comm. Message, Craft Item, Perform, and PvP Objective.
			string_id message = new string_id (c_stringFile, "s_45");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Relic?
	if (response == "s_32")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: By collecting Chronicle Relics, you give yourself more exciting options for your quests. A Chronicle Relic is the essence of a quest task that can be used in your Chronicle Holocrons. When you create a Chronicle Holocron, the Chronicle Relics used in that Holocron are consumed. A Chronicle Relic may be deconstructed into Relic Fragments.
			string_id message = new string_id (c_stringFile, "s_33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Relic Fragment?
	if (response == "s_31")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Relic Fragment is a shard or remnant of a Chronicle Relic. These are formed when you deconstruct a relic and often as a remnant when building a Chronicle Holocron. If you have 10 Relic Fragments, you may reconstruct those into a new,  random Relic.
			string_id message = new string_id (c_stringFile, "s_38");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Draft?
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Chronicle Draft is a template for a Chronicle Holocron that you are building. It can be a work in progress or a finished quest that you may want to save or duplicate. With a Chronicle Draft, you may freely test your quest, edit it, or create Chronicle Holocrons from it. No Chronicle Relics are consumed when you save or edit a Chronicle Draft.
			string_id message = new string_id (c_stringFile, "s_43");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is Chronicle Holocron Sharing?
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chronicle Holocron Sharing allows a single Chronicle Holocron to be shared with others so that you may enjoy the quest together. To share a Chronicle Holocron, you must be in the same group, or guild, or Storyteller Story with whomever you wish to share the quest. Whether or not a Chronicle Holocron can be shared is decided by its creator as well as how many times it may be shared.
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to become a Chronicle Master.
	if (response == "s_66")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			fan_faire_pgc_c3po_action_grantProfession (player, npc);

			//-- NPC: Certainly. I'll happily get you started on the road towards being a Chronicle Master, but you will have to start at the beginning as an Apprentice.  Is there anything else I can help you with?
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fan_faire_pgc_c3po_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Currently, you may use the following tasks: Destroy, Destroy and Loot, Go To Location, Comm. Message, Craft Item, Perform, and PvP Objective.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Destroy task?
	if (response == "s_47")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Destroy task requires you to defeat a certain number of enemies before it will be completed. For example, a Destroy task may ask you to kill 14 womp rats.
			string_id message = new string_id (c_stringFile, "s_55");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Destroy and Loot task?
	if (response == "s_48")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Destroy and Loot task is one that requires you to defeat a type of enemy while trying to find the ones with the items or information that the task requires. The item or information is purely fictional rather than an actual item that would be taken from a defeated enemy. For example, you might be asked to collect 4 Tusken Raider gaffi sticks.
			string_id message = new string_id (c_stringFile, "s_56");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Go To Location task?
	if (response == "s_49")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Go To Location task simply requires you to travel to a certain location.
			string_id message = new string_id (c_stringFile, "s_57");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Comm. Message task?
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: In a Comm. Message task, you will receive a message from an NPC. A Comm. Message task is used for flavor and storytelling rather than requiring you to do something.
			string_id message = new string_id (c_stringFile, "s_58");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Craft Item task?
	if (response == "s_51")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Craft Item task will require you to craft a certain number of a specific item.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Perform task?
	if (response == "s_52")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Perform task requires you to perform, either music or dance, in a specific location.
			string_id message = new string_id (c_stringFile, "s_60");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a PvP Objective task?
	if (response == "s_53")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A PvP Objective task requires you to complete a specific Player Versus Player objective. This could be as straightforward as defeating a certain number of opposing players of a given rank or as complex as winning a set of battlefields.
			string_id message = new string_id (c_stringFile, "s_61");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have questions about something else.
	if (response == "s_63")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: How may I help you?
			string_id message = new string_id (c_stringFile, "s_64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fan_faire_pgc_c3po_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A Destroy task requires you to defeat a certain number of enemies before it will be completed. For example, a Destroy task may ask you to kill 14 womp rats.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Destroy task?
	if (response == "s_47")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Destroy task requires you to defeat a certain number of enemies before it will be completed. For example, a Destroy task may ask you to kill 14 womp rats.
			string_id message = new string_id (c_stringFile, "s_55");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Destroy and Loot task?
	if (response == "s_48")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Destroy and Loot task is one that requires you to defeat a type of enemy while trying to find the ones with the items or information that the task requires. The item or information is purely fictional rather than an actual item that would be taken from a defeated enemy. For example, you might be asked to collect 4 Tusken Raider gaffi sticks.
			string_id message = new string_id (c_stringFile, "s_56");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Go To Location task?
	if (response == "s_49")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Go To Location task simply requires you to travel to a certain location.
			string_id message = new string_id (c_stringFile, "s_57");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Comm. Message task?
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: In a Comm. Message task, you will receive a message from an NPC. A Comm. Message task is used for flavor and storytelling rather than requiring you to do something.
			string_id message = new string_id (c_stringFile, "s_58");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Craft Item task?
	if (response == "s_51")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Craft Item task will require you to craft a certain number of a specific item.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Perform task?
	if (response == "s_52")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Perform task requires you to perform, either music or dance, in a specific location.
			string_id message = new string_id (c_stringFile, "s_60");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a PvP Objective task?
	if (response == "s_53")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A PvP Objective task requires you to complete a specific Player Versus Player objective. This could be as straightforward as defeating a certain number of opposing players of a given rank or as complex as winning a set of battlefields.
			string_id message = new string_id (c_stringFile, "s_61");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have questions about something else.
	if (response == "s_63")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: How may I help you?
			string_id message = new string_id (c_stringFile, "s_64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fan_faire_pgc_c3po_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A Destroy and Loot task is one that requires you to defeat a type of enemy while trying to find the ones with the items or information that the task requires. The item or information is purely fictional rather than an actual item that would be taken from a defeated enemy. For example, you might be asked to collect 4 Tusken Raider gaffi sticks.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Destroy task?
	if (response == "s_47")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Destroy task requires you to defeat a certain number of enemies before it will be completed. For example, a Destroy task may ask you to kill 14 womp rats.
			string_id message = new string_id (c_stringFile, "s_55");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Destroy and Loot task?
	if (response == "s_48")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Destroy and Loot task is one that requires you to defeat a type of enemy while trying to find the ones with the items or information that the task requires. The item or information is purely fictional rather than an actual item that would be taken from a defeated enemy. For example, you might be asked to collect 4 Tusken Raider gaffi sticks.
			string_id message = new string_id (c_stringFile, "s_56");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Go To Location task?
	if (response == "s_49")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Go To Location task simply requires you to travel to a certain location.
			string_id message = new string_id (c_stringFile, "s_57");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Comm. Message task?
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: In a Comm. Message task, you will receive a message from an NPC. A Comm. Message task is used for flavor and storytelling rather than requiring you to do something.
			string_id message = new string_id (c_stringFile, "s_58");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Craft Item task?
	if (response == "s_51")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Craft Item task will require you to craft a certain number of a specific item.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Perform task?
	if (response == "s_52")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Perform task requires you to perform, either music or dance, in a specific location.
			string_id message = new string_id (c_stringFile, "s_60");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a PvP Objective task?
	if (response == "s_53")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A PvP Objective task requires you to complete a specific Player Versus Player objective. This could be as straightforward as defeating a certain number of opposing players of a given rank or as complex as winning a set of battlefields.
			string_id message = new string_id (c_stringFile, "s_61");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have questions about something else.
	if (response == "s_63")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: How may I help you?
			string_id message = new string_id (c_stringFile, "s_64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fan_faire_pgc_c3po_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A Go To Location task simply requires you to travel to a certain location.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Destroy task?
	if (response == "s_47")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Destroy task requires you to defeat a certain number of enemies before it will be completed. For example, a Destroy task may ask you to kill 14 womp rats.
			string_id message = new string_id (c_stringFile, "s_55");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Destroy and Loot task?
	if (response == "s_48")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Destroy and Loot task is one that requires you to defeat a type of enemy while trying to find the ones with the items or information that the task requires. The item or information is purely fictional rather than an actual item that would be taken from a defeated enemy. For example, you might be asked to collect 4 Tusken Raider gaffi sticks.
			string_id message = new string_id (c_stringFile, "s_56");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Go To Location task?
	if (response == "s_49")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Go To Location task simply requires you to travel to a certain location.
			string_id message = new string_id (c_stringFile, "s_57");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Comm. Message task?
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: In a Comm. Message task, you will receive a message from an NPC. A Comm. Message task is used for flavor and storytelling rather than requiring you to do something.
			string_id message = new string_id (c_stringFile, "s_58");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Craft Item task?
	if (response == "s_51")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Craft Item task will require you to craft a certain number of a specific item.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Perform task?
	if (response == "s_52")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Perform task requires you to perform, either music or dance, in a specific location.
			string_id message = new string_id (c_stringFile, "s_60");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a PvP Objective task?
	if (response == "s_53")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A PvP Objective task requires you to complete a specific Player Versus Player objective. This could be as straightforward as defeating a certain number of opposing players of a given rank or as complex as winning a set of battlefields.
			string_id message = new string_id (c_stringFile, "s_61");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have questions about something else.
	if (response == "s_63")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: How may I help you?
			string_id message = new string_id (c_stringFile, "s_64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fan_faire_pgc_c3po_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: In a Comm. Message task, you will receive a message from an NPC. A Comm. Message task is used for flavor and storytelling rather than requiring you to do something.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Destroy task?
	if (response == "s_47")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Destroy task requires you to defeat a certain number of enemies before it will be completed. For example, a Destroy task may ask you to kill 14 womp rats.
			string_id message = new string_id (c_stringFile, "s_55");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Destroy and Loot task?
	if (response == "s_48")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Destroy and Loot task is one that requires you to defeat a type of enemy while trying to find the ones with the items or information that the task requires. The item or information is purely fictional rather than an actual item that would be taken from a defeated enemy. For example, you might be asked to collect 4 Tusken Raider gaffi sticks.
			string_id message = new string_id (c_stringFile, "s_56");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Go To Location task?
	if (response == "s_49")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Go To Location task simply requires you to travel to a certain location.
			string_id message = new string_id (c_stringFile, "s_57");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Comm. Message task?
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: In a Comm. Message task, you will receive a message from an NPC. A Comm. Message task is used for flavor and storytelling rather than requiring you to do something.
			string_id message = new string_id (c_stringFile, "s_58");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Craft Item task?
	if (response == "s_51")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Craft Item task will require you to craft a certain number of a specific item.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Perform task?
	if (response == "s_52")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Perform task requires you to perform, either music or dance, in a specific location.
			string_id message = new string_id (c_stringFile, "s_60");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a PvP Objective task?
	if (response == "s_53")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A PvP Objective task requires you to complete a specific Player Versus Player objective. This could be as straightforward as defeating a certain number of opposing players of a given rank or as complex as winning a set of battlefields.
			string_id message = new string_id (c_stringFile, "s_61");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have questions about something else.
	if (response == "s_63")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: How may I help you?
			string_id message = new string_id (c_stringFile, "s_64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fan_faire_pgc_c3po_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A Craft Item task will require you to craft a certain number of a specific item.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Destroy task?
	if (response == "s_47")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Destroy task requires you to defeat a certain number of enemies before it will be completed. For example, a Destroy task may ask you to kill 14 womp rats.
			string_id message = new string_id (c_stringFile, "s_55");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Destroy and Loot task?
	if (response == "s_48")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Destroy and Loot task is one that requires you to defeat a type of enemy while trying to find the ones with the items or information that the task requires. The item or information is purely fictional rather than an actual item that would be taken from a defeated enemy. For example, you might be asked to collect 4 Tusken Raider gaffi sticks.
			string_id message = new string_id (c_stringFile, "s_56");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Go To Location task?
	if (response == "s_49")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Go To Location task simply requires you to travel to a certain location.
			string_id message = new string_id (c_stringFile, "s_57");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Comm. Message task?
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: In a Comm. Message task, you will receive a message from an NPC. A Comm. Message task is used for flavor and storytelling rather than requiring you to do something.
			string_id message = new string_id (c_stringFile, "s_58");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Craft Item task?
	if (response == "s_51")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Craft Item task will require you to craft a certain number of a specific item.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Perform task?
	if (response == "s_52")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Perform task requires you to perform, either music or dance, in a specific location.
			string_id message = new string_id (c_stringFile, "s_60");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a PvP Objective task?
	if (response == "s_53")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A PvP Objective task requires you to complete a specific Player Versus Player objective. This could be as straightforward as defeating a certain number of opposing players of a given rank or as complex as winning a set of battlefields.
			string_id message = new string_id (c_stringFile, "s_61");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have questions about something else.
	if (response == "s_63")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: How may I help you?
			string_id message = new string_id (c_stringFile, "s_64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fan_faire_pgc_c3po_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A Perform task requires you to perform, either music or dance, in a specific location.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Destroy task?
	if (response == "s_47")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Destroy task requires you to defeat a certain number of enemies before it will be completed. For example, a Destroy task may ask you to kill 14 womp rats.
			string_id message = new string_id (c_stringFile, "s_55");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Destroy and Loot task?
	if (response == "s_48")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Destroy and Loot task is one that requires you to defeat a type of enemy while trying to find the ones with the items or information that the task requires. The item or information is purely fictional rather than an actual item that would be taken from a defeated enemy. For example, you might be asked to collect 4 Tusken Raider gaffi sticks.
			string_id message = new string_id (c_stringFile, "s_56");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Go To Location task?
	if (response == "s_49")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Go To Location task simply requires you to travel to a certain location.
			string_id message = new string_id (c_stringFile, "s_57");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Comm. Message task?
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: In a Comm. Message task, you will receive a message from an NPC. A Comm. Message task is used for flavor and storytelling rather than requiring you to do something.
			string_id message = new string_id (c_stringFile, "s_58");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Craft Item task?
	if (response == "s_51")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Craft Item task will require you to craft a certain number of a specific item.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Perform task?
	if (response == "s_52")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Perform task requires you to perform, either music or dance, in a specific location.
			string_id message = new string_id (c_stringFile, "s_60");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a PvP Objective task?
	if (response == "s_53")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A PvP Objective task requires you to complete a specific Player Versus Player objective. This could be as straightforward as defeating a certain number of opposing players of a given rank or as complex as winning a set of battlefields.
			string_id message = new string_id (c_stringFile, "s_61");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have questions about something else.
	if (response == "s_63")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: How may I help you?
			string_id message = new string_id (c_stringFile, "s_64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fan_faire_pgc_c3po_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A PvP Objective task requires you to complete a specific Player Versus Player objective. This could be as straightforward as defeating a certain number of opposing players of a given rank or as complex as winning a set of battlefields.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Destroy task?
	if (response == "s_47")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Destroy task requires you to defeat a certain number of enemies before it will be completed. For example, a Destroy task may ask you to kill 14 womp rats.
			string_id message = new string_id (c_stringFile, "s_55");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Destroy and Loot task?
	if (response == "s_48")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Destroy and Loot task is one that requires you to defeat a type of enemy while trying to find the ones with the items or information that the task requires. The item or information is purely fictional rather than an actual item that would be taken from a defeated enemy. For example, you might be asked to collect 4 Tusken Raider gaffi sticks.
			string_id message = new string_id (c_stringFile, "s_56");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Go To Location task?
	if (response == "s_49")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Go To Location task simply requires you to travel to a certain location.
			string_id message = new string_id (c_stringFile, "s_57");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Comm. Message task?
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: In a Comm. Message task, you will receive a message from an NPC. A Comm. Message task is used for flavor and storytelling rather than requiring you to do something.
			string_id message = new string_id (c_stringFile, "s_58");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Craft Item task?
	if (response == "s_51")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Craft Item task will require you to craft a certain number of a specific item.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Perform task?
	if (response == "s_52")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Perform task requires you to perform, either music or dance, in a specific location.
			string_id message = new string_id (c_stringFile, "s_60");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a PvP Objective task?
	if (response == "s_53")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A PvP Objective task requires you to complete a specific Player Versus Player objective. This could be as straightforward as defeating a certain number of opposing players of a given rank or as complex as winning a set of battlefields.
			string_id message = new string_id (c_stringFile, "s_61");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have questions about something else.
	if (response == "s_63")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: How may I help you?
			string_id message = new string_id (c_stringFile, "s_64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fan_faire_pgc_c3po_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: How may I help you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is the Chronicle System?
	if (response == "s_28")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Chronicle System is a way for you to take storytelling to a whole new level by creating your own quests. These quests can then be enjoyed by others throughout the galaxy.
			string_id message = new string_id (c_stringFile, "s_29");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make a Chronicle Quest?
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Simply use the Chronicle Builder button in the game menu or use the command /chronicleQuestBuilder. Creating a Chronicle Holocron requires that you have Chronicle Relics for each task in your quest.
			string_id message = new string_id (c_stringFile, "s_41");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
	if (response == "s_37")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Currently, you may use the following tasks: Destroy, Destroy and Loot, Go To Location, Comm. Message, Craft Item, Perform, and PvP Objective.
			string_id message = new string_id (c_stringFile, "s_45");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Relic?
	if (response == "s_32")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: By collecting Chronicle Relics, you give yourself more exciting options for your quests. A Chronicle Relic is the essence of a quest task that can be used in your Chronicle Holocrons. When you create a Chronicle Holocron, the Chronicle Relics used in that Holocron are consumed. A Chronicle Relic may be deconstructed into Relic Fragments.
			string_id message = new string_id (c_stringFile, "s_33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Relic Fragment?
	if (response == "s_31")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Relic Fragment is a shard or remnant of a Chronicle Relic. These are formed when you deconstruct a relic and often as a remnant when building a Chronicle Holocron. If you have 10 Relic Fragments, you may reconstruct those into a new,  random Relic.
			string_id message = new string_id (c_stringFile, "s_38");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Draft?
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Chronicle Draft is a template for a Chronicle Holocron that you are building. It can be a work in progress or a finished quest that you may want to save or duplicate. With a Chronicle Draft, you may freely test your quest, edit it, or create Chronicle Holocrons from it. No Chronicle Relics are consumed when you save or edit a Chronicle Draft.
			string_id message = new string_id (c_stringFile, "s_43");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is Chronicle Holocron Sharing?
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chronicle Holocron Sharing allows a single Chronicle Holocron to be shared with others so that you may enjoy the quest together. To share a Chronicle Holocron, you must be in the same group, or guild, or Storyteller Story with whomever you wish to share the quest. Whether or not a Chronicle Holocron can be shared is decided by its creator as well as how many times it may be shared.
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to become a Chronicle Master.
	if (response == "s_66")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			fan_faire_pgc_c3po_action_grantProfession (player, npc);

			//-- NPC: Certainly. I'll happily get you started on the road towards being a Chronicle Master, but you will have to start at the beginning as an Apprentice.  Is there anything else I can help you with?
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fan_faire_pgc_c3po_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: By collecting Chronicle Relics, you give yourself more exciting options for your quests. A Chronicle Relic is the essence of a quest task that can be used in your Chronicle Holocrons. When you create a Chronicle Holocron, the Chronicle Relics used in that Holocron are consumed. A Chronicle Relic may be deconstructed into Relic Fragments.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is the Chronicle System?
	if (response == "s_28")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Chronicle System is a way for you to take storytelling to a whole new level by creating your own quests. These quests can then be enjoyed by others throughout the galaxy.
			string_id message = new string_id (c_stringFile, "s_29");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make a Chronicle Quest?
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Simply use the Chronicle Builder button in the game menu or use the command /chronicleQuestBuilder. Creating a Chronicle Holocron requires that you have Chronicle Relics for each task in your quest.
			string_id message = new string_id (c_stringFile, "s_41");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
	if (response == "s_37")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Currently, you may use the following tasks: Destroy, Destroy and Loot, Go To Location, Comm. Message, Craft Item, Perform, and PvP Objective.
			string_id message = new string_id (c_stringFile, "s_45");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Relic?
	if (response == "s_32")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: By collecting Chronicle Relics, you give yourself more exciting options for your quests. A Chronicle Relic is the essence of a quest task that can be used in your Chronicle Holocrons. When you create a Chronicle Holocron, the Chronicle Relics used in that Holocron are consumed. A Chronicle Relic may be deconstructed into Relic Fragments.
			string_id message = new string_id (c_stringFile, "s_33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Relic Fragment?
	if (response == "s_31")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Relic Fragment is a shard or remnant of a Chronicle Relic. These are formed when you deconstruct a relic and often as a remnant when building a Chronicle Holocron. If you have 10 Relic Fragments, you may reconstruct those into a new,  random Relic.
			string_id message = new string_id (c_stringFile, "s_38");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Draft?
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Chronicle Draft is a template for a Chronicle Holocron that you are building. It can be a work in progress or a finished quest that you may want to save or duplicate. With a Chronicle Draft, you may freely test your quest, edit it, or create Chronicle Holocrons from it. No Chronicle Relics are consumed when you save or edit a Chronicle Draft.
			string_id message = new string_id (c_stringFile, "s_43");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is Chronicle Holocron Sharing?
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chronicle Holocron Sharing allows a single Chronicle Holocron to be shared with others so that you may enjoy the quest together. To share a Chronicle Holocron, you must be in the same group, or guild, or Storyteller Story with whomever you wish to share the quest. Whether or not a Chronicle Holocron can be shared is decided by its creator as well as how many times it may be shared.
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to become a Chronicle Master.
	if (response == "s_66")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			fan_faire_pgc_c3po_action_grantProfession (player, npc);

			//-- NPC: Certainly. I'll happily get you started on the road towards being a Chronicle Master, but you will have to start at the beginning as an Apprentice.  Is there anything else I can help you with?
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fan_faire_pgc_c3po_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A Relic Fragment is a shard or remnant of a Chronicle Relic. These are formed when you deconstruct a relic and often as a remnant when building a Chronicle Holocron. If you have 10 Relic Fragments, you may reconstruct those into a new,  random Relic.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is the Chronicle System?
	if (response == "s_28")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Chronicle System is a way for you to take storytelling to a whole new level by creating your own quests. These quests can then be enjoyed by others throughout the galaxy.
			string_id message = new string_id (c_stringFile, "s_29");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make a Chronicle Quest?
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Simply use the Chronicle Builder button in the game menu or use the command /chronicleQuestBuilder. Creating a Chronicle Holocron requires that you have Chronicle Relics for each task in your quest.
			string_id message = new string_id (c_stringFile, "s_41");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
	if (response == "s_37")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Currently, you may use the following tasks: Destroy, Destroy and Loot, Go To Location, Comm. Message, Craft Item, Perform, and PvP Objective.
			string_id message = new string_id (c_stringFile, "s_45");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Relic?
	if (response == "s_32")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: By collecting Chronicle Relics, you give yourself more exciting options for your quests. A Chronicle Relic is the essence of a quest task that can be used in your Chronicle Holocrons. When you create a Chronicle Holocron, the Chronicle Relics used in that Holocron are consumed. A Chronicle Relic may be deconstructed into Relic Fragments.
			string_id message = new string_id (c_stringFile, "s_33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Relic Fragment?
	if (response == "s_31")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Relic Fragment is a shard or remnant of a Chronicle Relic. These are formed when you deconstruct a relic and often as a remnant when building a Chronicle Holocron. If you have 10 Relic Fragments, you may reconstruct those into a new,  random Relic.
			string_id message = new string_id (c_stringFile, "s_38");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Draft?
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Chronicle Draft is a template for a Chronicle Holocron that you are building. It can be a work in progress or a finished quest that you may want to save or duplicate. With a Chronicle Draft, you may freely test your quest, edit it, or create Chronicle Holocrons from it. No Chronicle Relics are consumed when you save or edit a Chronicle Draft.
			string_id message = new string_id (c_stringFile, "s_43");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is Chronicle Holocron Sharing?
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chronicle Holocron Sharing allows a single Chronicle Holocron to be shared with others so that you may enjoy the quest together. To share a Chronicle Holocron, you must be in the same group, or guild, or Storyteller Story with whomever you wish to share the quest. Whether or not a Chronicle Holocron can be shared is decided by its creator as well as how many times it may be shared.
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to become a Chronicle Master.
	if (response == "s_66")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			fan_faire_pgc_c3po_action_grantProfession (player, npc);

			//-- NPC: Certainly. I'll happily get you started on the road towards being a Chronicle Master, but you will have to start at the beginning as an Apprentice.  Is there anything else I can help you with?
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fan_faire_pgc_c3po_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A Chronicle Draft is a template for a Chronicle Holocron that you are building. It can be a work in progress or a finished quest that you may want to save or duplicate. With a Chronicle Draft, you may freely test your quest, edit it, or create Chronicle Holocrons from it. No Chronicle Relics are consumed when you save or edit a Chronicle Draft.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is the Chronicle System?
	if (response == "s_28")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Chronicle System is a way for you to take storytelling to a whole new level by creating your own quests. These quests can then be enjoyed by others throughout the galaxy.
			string_id message = new string_id (c_stringFile, "s_29");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make a Chronicle Quest?
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Simply use the Chronicle Builder button in the game menu or use the command /chronicleQuestBuilder. Creating a Chronicle Holocron requires that you have Chronicle Relics for each task in your quest.
			string_id message = new string_id (c_stringFile, "s_41");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
	if (response == "s_37")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Currently, you may use the following tasks: Destroy, Destroy and Loot, Go To Location, Comm. Message, Craft Item, Perform, and PvP Objective.
			string_id message = new string_id (c_stringFile, "s_45");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Relic?
	if (response == "s_32")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: By collecting Chronicle Relics, you give yourself more exciting options for your quests. A Chronicle Relic is the essence of a quest task that can be used in your Chronicle Holocrons. When you create a Chronicle Holocron, the Chronicle Relics used in that Holocron are consumed. A Chronicle Relic may be deconstructed into Relic Fragments.
			string_id message = new string_id (c_stringFile, "s_33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Relic Fragment?
	if (response == "s_31")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Relic Fragment is a shard or remnant of a Chronicle Relic. These are formed when you deconstruct a relic and often as a remnant when building a Chronicle Holocron. If you have 10 Relic Fragments, you may reconstruct those into a new,  random Relic.
			string_id message = new string_id (c_stringFile, "s_38");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Draft?
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Chronicle Draft is a template for a Chronicle Holocron that you are building. It can be a work in progress or a finished quest that you may want to save or duplicate. With a Chronicle Draft, you may freely test your quest, edit it, or create Chronicle Holocrons from it. No Chronicle Relics are consumed when you save or edit a Chronicle Draft.
			string_id message = new string_id (c_stringFile, "s_43");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is Chronicle Holocron Sharing?
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chronicle Holocron Sharing allows a single Chronicle Holocron to be shared with others so that you may enjoy the quest together. To share a Chronicle Holocron, you must be in the same group, or guild, or Storyteller Story with whomever you wish to share the quest. Whether or not a Chronicle Holocron can be shared is decided by its creator as well as how many times it may be shared.
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to become a Chronicle Master.
	if (response == "s_66")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			fan_faire_pgc_c3po_action_grantProfession (player, npc);

			//-- NPC: Certainly. I'll happily get you started on the road towards being a Chronicle Master, but you will have to start at the beginning as an Apprentice.  Is there anything else I can help you with?
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fan_faire_pgc_c3po_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Chronicle Holocron Sharing allows a single Chronicle Holocron to be shared with others so that you may enjoy the quest together. To share a Chronicle Holocron, you must be in the same group, or guild, or Storyteller Story with whomever you wish to share the quest. Whether or not a Chronicle Holocron can be shared is decided by its creator as well as how many times it may be shared.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is the Chronicle System?
	if (response == "s_28")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Chronicle System is a way for you to take storytelling to a whole new level by creating your own quests. These quests can then be enjoyed by others throughout the galaxy.
			string_id message = new string_id (c_stringFile, "s_29");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make a Chronicle Quest?
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Simply use the Chronicle Builder button in the game menu or use the command /chronicleQuestBuilder. Creating a Chronicle Holocron requires that you have Chronicle Relics for each task in your quest.
			string_id message = new string_id (c_stringFile, "s_41");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
	if (response == "s_37")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Currently, you may use the following tasks: Destroy, Destroy and Loot, Go To Location, Comm. Message, Craft Item, Perform, and PvP Objective.
			string_id message = new string_id (c_stringFile, "s_45");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Relic?
	if (response == "s_32")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: By collecting Chronicle Relics, you give yourself more exciting options for your quests. A Chronicle Relic is the essence of a quest task that can be used in your Chronicle Holocrons. When you create a Chronicle Holocron, the Chronicle Relics used in that Holocron are consumed. A Chronicle Relic may be deconstructed into Relic Fragments.
			string_id message = new string_id (c_stringFile, "s_33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Relic Fragment?
	if (response == "s_31")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Relic Fragment is a shard or remnant of a Chronicle Relic. These are formed when you deconstruct a relic and often as a remnant when building a Chronicle Holocron. If you have 10 Relic Fragments, you may reconstruct those into a new,  random Relic.
			string_id message = new string_id (c_stringFile, "s_38");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Draft?
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Chronicle Draft is a template for a Chronicle Holocron that you are building. It can be a work in progress or a finished quest that you may want to save or duplicate. With a Chronicle Draft, you may freely test your quest, edit it, or create Chronicle Holocrons from it. No Chronicle Relics are consumed when you save or edit a Chronicle Draft.
			string_id message = new string_id (c_stringFile, "s_43");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is Chronicle Holocron Sharing?
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chronicle Holocron Sharing allows a single Chronicle Holocron to be shared with others so that you may enjoy the quest together. To share a Chronicle Holocron, you must be in the same group, or guild, or Storyteller Story with whomever you wish to share the quest. Whether or not a Chronicle Holocron can be shared is decided by its creator as well as how many times it may be shared.
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to become a Chronicle Master.
	if (response == "s_66")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			fan_faire_pgc_c3po_action_grantProfession (player, npc);

			//-- NPC: Certainly. I'll happily get you started on the road towards being a Chronicle Master, but you will have to start at the beginning as an Apprentice.  Is there anything else I can help you with?
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fan_faire_pgc_c3po_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Certainly. I'll happily get you started on the road towards being a Chronicle Master, but you will have to start at the beginning as an Apprentice.  Is there anything else I can help you with?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is the Chronicle System?
	if (response == "s_28")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Chronicle System is a way for you to take storytelling to a whole new level by creating your own quests. These quests can then be enjoyed by others throughout the galaxy.
			string_id message = new string_id (c_stringFile, "s_29");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make a Chronicle Quest?
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Simply use the Chronicle Builder button in the game menu or use the command /chronicleQuestBuilder. Creating a Chronicle Holocron requires that you have Chronicle Relics for each task in your quest.
			string_id message = new string_id (c_stringFile, "s_41");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
	if (response == "s_37")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Currently, you may use the following tasks: Destroy, Destroy and Loot, Go To Location, Comm. Message, Craft Item, Perform, and PvP Objective.
			string_id message = new string_id (c_stringFile, "s_45");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Destroy task?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is a Destroy and Loot task?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is a Go To Location task?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Comm. Message task?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Craft Item task?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Perform task?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition_relicEnabled (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is a PvP Objective task?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I have questions about something else.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Relic?
	if (response == "s_32")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: By collecting Chronicle Relics, you give yourself more exciting options for your quests. A Chronicle Relic is the essence of a quest task that can be used in your Chronicle Holocrons. When you create a Chronicle Holocron, the Chronicle Relics used in that Holocron are consumed. A Chronicle Relic may be deconstructed into Relic Fragments.
			string_id message = new string_id (c_stringFile, "s_33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Relic Fragment?
	if (response == "s_31")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Relic Fragment is a shard or remnant of a Chronicle Relic. These are formed when you deconstruct a relic and often as a remnant when building a Chronicle Holocron. If you have 10 Relic Fragments, you may reconstruct those into a new,  random Relic.
			string_id message = new string_id (c_stringFile, "s_38");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Chronicle Draft?
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: A Chronicle Draft is a template for a Chronicle Holocron that you are building. It can be a work in progress or a finished quest that you may want to save or duplicate. With a Chronicle Draft, you may freely test your quest, edit it, or create Chronicle Holocrons from it. No Chronicle Relics are consumed when you save or edit a Chronicle Draft.
			string_id message = new string_id (c_stringFile, "s_43");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is Chronicle Holocron Sharing?
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chronicle Holocron Sharing allows a single Chronicle Holocron to be shared with others so that you may enjoy the quest together. To share a Chronicle Holocron, you must be in the same group, or guild, or Storyteller Story with whomever you wish to share the quest. Whether or not a Chronicle Holocron can be shared is decided by its creator as well as how many times it may be shared.
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to become a Chronicle Master.
	if (response == "s_66")
	{
		//-- [NOTE] 
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			fan_faire_pgc_c3po_action_grantProfession (player, npc);

			//-- NPC: Certainly. I'll happily get you started on the road towards being a Chronicle Master, but you will have to start at the beginning as an Apprentice.  Is there anything else I can help you with?
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the Chronicle System?
			boolean hasResponse0 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I make a Chronicle Quest?
			boolean hasResponse1 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
			boolean hasResponse2 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is a Chronicle Relic?
			boolean hasResponse3 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What is a Relic Fragment?
			boolean hasResponse4 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: What is a Chronicle Draft?
			boolean hasResponse5 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: What is Chronicle Holocron Sharing?
			boolean hasResponse6 = false;
			if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I would like to become a Chronicle Master.
			boolean hasResponse7 = false;
			if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.fan_faire_pgc_c3po");

	setCondition (self, CONDITION_CONVERSABLE);
	messageTo(self, "handleFanFairec3poSetup", null, 2, false);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	messageTo(self, "handleFanFairec3poSetup", null, 2, false);
	return SCRIPT_CONTINUE;
}

messageHandler handleFanFairec3poSetup()
{
	string scriptName = "conversation";
	scriptName += ".rtp_c3po_main";
	
	if( hasScript(self, scriptName) )
	{
		detachScript(self, scriptName);
	}
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	
	faceTo( self, player );

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.fan_faire_pgc_c3po");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
	{
		//-- NPC: Hello. I am C-3P0, Human-Cyborg relations. May I help you with the Chronicle System?
		string_id message = new string_id (c_stringFile, "s_34");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What is the Chronicle System?
		boolean hasResponse0 = false;
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: How do I make a Chronicle Quest?
		boolean hasResponse1 = false;
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: What kinds of quest tasks can I use with the Chronicle System?
		boolean hasResponse2 = false;
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: What is a Chronicle Relic?
		boolean hasResponse3 = false;
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		//-- PLAYER: What is a Relic Fragment?
		boolean hasResponse4 = false;
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse4 = true;
		}

		//-- PLAYER: What is a Chronicle Draft?
		boolean hasResponse5 = false;
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse5 = true;
		}

		//-- PLAYER: What is Chronicle Holocron Sharing?
		boolean hasResponse6 = false;
		if (fan_faire_pgc_c3po_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse6 = true;
		}

		//-- PLAYER: I would like to become a Chronicle Master.
		boolean hasResponse7 = false;
		if (fan_faire_pgc_c3po_condition_needsProfession (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse7 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_28");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_35");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_37");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_32");

			if (hasResponse4)
				responses [responseIndex++] = new string_id (c_stringFile, "s_31");

			if (hasResponse5)
				responses [responseIndex++] = new string_id (c_stringFile, "s_40");

			if (hasResponse6)
				responses [responseIndex++] = new string_id (c_stringFile, "s_46");

			if (hasResponse7)
				responses [responseIndex++] = new string_id (c_stringFile, "s_66");

			utils.setScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId", 1);

			npcStartConversation (player, npc, "fan_faire_pgc_c3po", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "fan_faire_pgc_c3po")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

	if (branchId == 1 && fan_faire_pgc_c3po_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && fan_faire_pgc_c3po_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && fan_faire_pgc_c3po_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && fan_faire_pgc_c3po_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && fan_faire_pgc_c3po_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && fan_faire_pgc_c3po_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && fan_faire_pgc_c3po_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && fan_faire_pgc_c3po_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && fan_faire_pgc_c3po_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && fan_faire_pgc_c3po_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && fan_faire_pgc_c3po_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && fan_faire_pgc_c3po_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && fan_faire_pgc_c3po_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && fan_faire_pgc_c3po_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && fan_faire_pgc_c3po_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && fan_faire_pgc_c3po_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && fan_faire_pgc_c3po_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.fan_faire_pgc_c3po.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

