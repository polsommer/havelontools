// ======================================================================
//
// collections_ice_cream_part_ten.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/collections_ice_cream_part_ten";

// ======================================================================
// Script Conditions
// ======================================================================

boolean collections_ice_cream_part_ten_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean collections_ice_cream_part_ten_condition_hasActiveTask (obj_id player, obj_id npc)
{
	if(groundquests.isQuestActive(player, "chapter9_ice_cream"))
	{	
		return groundquests.isTaskActive(player, "chapter9_ice_cream", "meet_ice_cream_man");
	}	
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void collections_ice_cream_part_ten_action_signalNextTask (obj_id player, obj_id npc)
{
	modifyCollectionSlotValue(player, "col_fried_icecream_part_10", 1);
	groundquests.sendSignal(player, "meet_ice_cream_man"); 
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int collections_ice_cream_part_ten_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I love Ice Cream.  Don't you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.  Hi.  Can I ask you a question?
	if (response == "s_9")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_ten_condition__defaultCondition (player, npc))
		{
			//-- NPC: Is it about ice cream?
			string_id message = new string_id (c_stringFile, "s_10");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Well no.  It is about a fryer.
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_ten_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_12");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_ten.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_ten.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_ten_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Is it about ice cream?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well no.  It is about a fryer.
	if (response == "s_12")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_ten_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well if it isn't about ice cream...wait. Did you say fryer?
			string_id message = new string_id (c_stringFile, "s_14");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.  Here, see?
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_ten_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_ten.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_ten.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_ten_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well if it isn't about ice cream...wait. Did you say fryer?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.  Here, see?
	if (response == "s_16")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_ten_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh!  It's the X34 model version 3! I have been looking all over for that model.  How much do you want for the fryer?
			string_id message = new string_id (c_stringFile, "s_18");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Uh.  I need the schematic actually.  Would you like to trade?
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_ten_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_ten.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_ten.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_ten_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh!  It's the X34 model version 3! I have been looking all over for that model.  How much do you want for the fryer?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Uh.  I need the schematic actually.  Would you like to trade?
	if (response == "s_19")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_ten_condition__defaultCondition (player, npc))
		{
			//-- NPC: The fryer schematic?  It is worthless to me and I have copies. I would be glad to trade.
			string_id message = new string_id (c_stringFile, "s_20");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: By the way, what do you need the broken fryer for?
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_ten_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_ten.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_ten.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_ten_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The fryer schematic?  It is worthless to me and I have copies. I would be glad to trade.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: By the way, what do you need the broken fryer for?
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_ten_condition__defaultCondition (player, npc))
		{
			//-- NPC: For spare parts.  I have several Corellian Fried Ice Cream Fryers that need extra parts.
			string_id message = new string_id (c_stringFile, "s_36");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So this is a Fried Ice Cream Fryer?
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_ten_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_ten.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_ten.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_ten_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: For spare parts.  I have several Corellian Fried Ice Cream Fryers that need extra parts.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So this is a Fried Ice Cream Fryer?
	if (response == "s_37")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_ten_condition__defaultCondition (player, npc))
		{
			collections_ice_cream_part_ten_action_signalNextTask (player, npc);

			//-- NPC: You didn't even know what you had? Hah!  Here take your silly schematic.
			string_id message = new string_id (c_stringFile, "s_38");
			utils.removeScriptVar (player, "conversation.collections_ice_cream_part_ten.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.collections_ice_cream_part_ten");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.collections_ice_cream_part_ten");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (collections_ice_cream_part_ten_condition_hasActiveTask (player, npc))
	{
		//-- NPC: I love Ice Cream.  Don't you?
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes.  Hi.  Can I ask you a question?
		boolean hasResponse0 = false;
		if (collections_ice_cream_part_ten_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_9");

			utils.setScriptVar (player, "conversation.collections_ice_cream_part_ten.branchId", 1);

			npcStartConversation (player, npc, "collections_ice_cream_part_ten", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (collections_ice_cream_part_ten_condition__defaultCondition (player, npc))
	{
		//-- NPC: Ice cream here...sold by the scoop.
		string_id message = new string_id (c_stringFile, "s_30");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "collections_ice_cream_part_ten")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.collections_ice_cream_part_ten.branchId");

	if (branchId == 1 && collections_ice_cream_part_ten_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && collections_ice_cream_part_ten_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && collections_ice_cream_part_ten_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && collections_ice_cream_part_ten_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && collections_ice_cream_part_ten_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && collections_ice_cream_part_ten_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.collections_ice_cream_part_ten.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

