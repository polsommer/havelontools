// ======================================================================
//
// ep3_forest_perusta.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/ep3_forest_perusta";

// ======================================================================
// Script Conditions
// ======================================================================

boolean ep3_forest_perusta_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean ep3_forest_perusta_condition_isGoodGuy (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "ep3_forest_wirartu_epic_3", 0) ||
	        groundquests.hasCompletedQuest(player, "ep3_forest_wirartu_epic_3") ||
	        groundquests.hasCompletedQuest(player, "ep3_forest_kerritamba_epic_7"));
}

// ----------------------------------------------------------------------

boolean ep3_forest_perusta_condition_isBadGuy (obj_id player, obj_id npc)
{
		return (groundquests.isTaskActive(player, "ep3_forest_wirartu_epic_2", 0) ||
		    	groundquests.hasCompletedQuest(player, "ep3_forest_wirartu_epic_2"));
}

// ----------------------------------------------------------------------

boolean ep3_forest_perusta_condition_isTaskOneActive (obj_id player, obj_id npc)
{	
	if (groundquests.isTaskActive(player, "ep3_forest_perusta_quest_1", 0) ||
	    groundquests.hasCompletedTask(player, "ep3_forest_perusta_quest_1", 0))
	    
	    return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean ep3_forest_perusta_condition_hasCompletedTaskOne (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedTask(player, "ep3_forest_perusta_quest_1", 0) &&
		   !groundquests.hasCompletedQuest(player, "ep3_forest_perusta_quest_1"));
}

// ----------------------------------------------------------------------

boolean ep3_forest_perusta_condition_hasCompletedQuestOne (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "ep3_forest_perusta_quest_1");
}

// ----------------------------------------------------------------------

boolean ep3_forest_perusta_condition_isTaskActiveTwo (obj_id player, obj_id npc)
{	
	if (groundquests.isTaskActive(player, "ep3_forest_perusta_quest_2", 0) ||
	    groundquests.hasCompletedTask(player, "ep3_forest_perusta_quest_2", 0))
	    
	    return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean ep3_forest_perusta_condition_hasCompletedTaskTwo (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedTask(player, "ep3_forest_perusta_quest_2", 0) &&
		   !groundquests.hasCompletedQuest(player, "ep3_forest_perusta_quest_2"));
}

// ----------------------------------------------------------------------

boolean ep3_forest_perusta_condition_hasCompletedQuestTwo (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "ep3_forest_perusta_quest_2");
}

// ----------------------------------------------------------------------

boolean ep3_forest_perusta_condition_hasLanguage (obj_id player, obj_id npc)
{
	return utils.canSpeakWookiee(player, npc);
}

// ======================================================================
// Script Actions
// ======================================================================

void ep3_forest_perusta_action_giveQuestOne (obj_id player, obj_id npc)
{
	// Apply the first quest to the player here
	groundquests.grantQuest(player, "ep3_forest_perusta_quest_1");
}

// ----------------------------------------------------------------------

void ep3_forest_perusta_action_giveSignalOne (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "moss");
}

// ----------------------------------------------------------------------

void ep3_forest_perusta_action_giveQuestTwo (obj_id player, obj_id npc)
{
	// Apply the first quest to the player here
	groundquests.grantQuest(player, "ep3_forest_perusta_quest_2");
}

// ----------------------------------------------------------------------

void ep3_forest_perusta_action_giveSignalTwo (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "mysess");
}

// ----------------------------------------------------------------------

void ep3_forest_perusta_action_Language (obj_id player, obj_id npc)
{
	utils.emoteWookieeConfusion (player, npc);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int ep3_forest_perusta_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Thank you for all the help you've given me. I hope this experiment was a success. I'll have to see in a few days. Until then, you may want to ask around. Others may want your help.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you. I hope it works out.
	if (response == "s_2770")
	{
		//-- [NOTE] 
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			//-- NPC: Me too. I'm sure I'll see you around. [Perusta nods.]
			string_id message = new string_id (c_stringFile, "s_2772");
			utils.removeScriptVar (player, "conversation.ep3_forest_perusta.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_perusta_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Perusta looks at you expectantly.] Were you able to find the blossoms I asked for?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, here they are.
	if (response == "s_2776")
	{
		//-- [NOTE] 
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			ep3_forest_perusta_action_giveSignalTwo (player, npc);

			//-- NPC: Great! Let me plant them. I sure hope this works..
			string_id message = new string_id (c_stringFile, "s_2778");
			utils.removeScriptVar (player, "conversation.ep3_forest_perusta.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_perusta_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Perusta nods.] It doesn't look like you've found the blossoms yet. Go back out there. We can't waste time.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll continue to look.
	if (response == "s_2782")
	{
		//-- [NOTE] 
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good. Be on your way.
			string_id message = new string_id (c_stringFile, "s_2784");
			utils.removeScriptVar (player, "conversation.ep3_forest_perusta.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_perusta_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Perusta sighs.] It didn't work. The Mysess Blossoms that I had didn't live long enough for me to complete the experiment. I'll need more, if you can find them. They're starting to die out, however. Bring me 5 of them. That should be enough to succeed at least once.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on my way.
	if (response == "s_2788")
	{
		//-- [NOTE] 
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			ep3_forest_perusta_action_giveQuestTwo (player, npc);

			//-- NPC: Hurry back! They don't last long... [Perusta calls after you.]
			string_id message = new string_id (c_stringFile, "s_2790");
			utils.removeScriptVar (player, "conversation.ep3_forest_perusta.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm going to skip this one for now.
	if (response == "s_2792")
	{
		//-- [NOTE] 
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			//-- NPC: I'll have to get them myself, then. [Perusta shrugs.]
			string_id message = new string_id (c_stringFile, "s_2794");
			utils.removeScriptVar (player, "conversation.ep3_forest_perusta.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_perusta_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Perusta hums a little tune while she fiddles with her plants.]

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Perusta..? I have the moss you wanted.
	if (response == "s_2798")
	{
		//-- [NOTE] 
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			ep3_forest_perusta_action_giveSignalOne (player, npc);

			//-- NPC: Hmm? Oh! Yes, yes of course. Thank you. Stay here while I place the moss inside the pots.
			string_id message = new string_id (c_stringFile, "s_2800");
			utils.removeScriptVar (player, "conversation.ep3_forest_perusta.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_perusta_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Perusta looks up from her work, face flecked with dirt and smudge.] Were you able to find the moss yet?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, not yet. But I haven't given up.
	if (response == "s_2804")
	{
		//-- [NOTE] 
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well... that's good to hear, I guess. I need those specimens as soon as possible. Why don't you go back out there and find them?
			string_id message = new string_id (c_stringFile, "s_2806");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm on my way.
			boolean hasResponse0 = false;
			if (ep3_forest_perusta_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2808");

				utils.setScriptVar (player, "conversation.ep3_forest_perusta.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_perusta.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_perusta_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well... that's good to hear, I guess. I need those specimens as soon as possible. Why don't you go back out there and find them?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on my way.
	if (response == "s_2808")
	{
		//-- [NOTE] 
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Perusta nods and goes back to her work.]
			string_id message = new string_id (c_stringFile, "s_2810");
			utils.removeScriptVar (player, "conversation.ep3_forest_perusta.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_perusta_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Perusta nods, recognizing you immediately.] You've been stirring up quite the talk these days, my friend.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I hope it's good.
	if (response == "s_2814")
	{
		//-- [NOTE] 
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			//-- NPC: Mostly. Good enough that I'm going to ask you for a few favors, at least. What do you think? They are not much, mind you. Completing them will definitely help me out.
			string_id message = new string_id (c_stringFile, "s_2816");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: First, who are you?
			boolean hasResponse0 = false;
			if (ep3_forest_perusta_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2818");

				utils.setScriptVar (player, "conversation.ep3_forest_perusta.branchId", 17);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_perusta.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_perusta_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Mostly. Good enough that I'm going to ask you for a few favors, at least. What do you think? They are not much, mind you. Completing them will definitely help me out.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: First, who are you?
	if (response == "s_2818")
	{
		//-- [NOTE] 
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			//-- NPC: If you must know.. [Perusta wipes the dirt off her hands before offering you a handshake.] My name is Perusta. I'm in charge of making sure the plants around these parts stay in good condition. Mostly, I'm interested in the Mysess Blossom. I'm trying to find a way to breed a stronger version able to survive in the harshest of conditions.
			string_id message = new string_id (c_stringFile, "s_2820");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How's that going?
			boolean hasResponse0 = false;
			if (ep3_forest_perusta_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2822");

				utils.setScriptVar (player, "conversation.ep3_forest_perusta.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_perusta.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_perusta_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: If you must know.. [Perusta wipes the dirt off her hands before offering you a handshake.] My name is Perusta. I'm in charge of making sure the plants around these parts stay in good condition. Mostly, I'm interested in the Mysess Blossom. I'm trying to find a way to breed a stronger version able to survive in the harshest of conditions.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How's that going?
	if (response == "s_2822")
	{
		//-- [NOTE] 
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			//-- NPC: Not very well. But I have narrowed down my experiments to a few specimens. I'll need some of the samples from the dead stumps around here. It should provide the adequate bed I need for my new Mysess Blossom test. To be safe, I want you to gather 5 specimens of the dead moss on the stumps found in the Dead Forest. It's just west of here.
			string_id message = new string_id (c_stringFile, "s_2824");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll be sure to get those specimens for you.
			boolean hasResponse0 = false;
			if (ep3_forest_perusta_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't take well to dirt.
			boolean hasResponse1 = false;
			if (ep3_forest_perusta_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2826");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2830");

				utils.setScriptVar (player, "conversation.ep3_forest_perusta.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_perusta.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_perusta_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Not very well. But I have narrowed down my experiments to a few specimens. I'll need some of the samples from the dead stumps around here. It should provide the adequate bed I need for my new Mysess Blossom test. To be safe, I want you to gather 5 specimens of the dead moss on the stumps found in the Dead Forest. It's just west of here.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll be sure to get those specimens for you.
	if (response == "s_2826")
	{
		//-- [NOTE] 
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			ep3_forest_perusta_action_giveQuestOne (player, npc);

			//-- NPC: [Perusta smiles.] Good. Be sure to return with the moss soon. Mysess Blossoms only last for a little while. It's a pity really.
			string_id message = new string_id (c_stringFile, "s_2828");
			utils.removeScriptVar (player, "conversation.ep3_forest_perusta.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't take well to dirt.
	if (response == "s_2830")
	{
		//-- [NOTE] 
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Perusta shrugs.] Fine.. Suit yourself.
			string_id message = new string_id (c_stringFile, "s_2832");
			utils.removeScriptVar (player, "conversation.ep3_forest_perusta.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.ep3_forest_perusta");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.ep3_forest_perusta");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (ep3_forest_perusta_condition_hasLanguage (player, npc))
	{
		ep3_forest_perusta_action_Language (player, npc);

		//-- NPC: Rrworr!
		string_id message = new string_id (c_stringFile, "s_1676");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_perusta_condition_hasCompletedQuestTwo (player, npc))
	{
		//-- NPC: Thank you for all the help you've given me. I hope this experiment was a success. I'll have to see in a few days. Until then, you may want to ask around. Others may want your help.
		string_id message = new string_id (c_stringFile, "s_2768");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Thank you. I hope it works out.
		boolean hasResponse0 = false;
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2770");

			utils.setScriptVar (player, "conversation.ep3_forest_perusta.branchId", 2);

			npcStartConversation (player, npc, "ep3_forest_perusta", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_perusta_condition_hasCompletedTaskTwo (player, npc))
	{
		//-- NPC: [Perusta looks at you expectantly.] Were you able to find the blossoms I asked for?
		string_id message = new string_id (c_stringFile, "s_2774");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, here they are.
		boolean hasResponse0 = false;
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2776");

			utils.setScriptVar (player, "conversation.ep3_forest_perusta.branchId", 4);

			npcStartConversation (player, npc, "ep3_forest_perusta", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_perusta_condition_isTaskActiveTwo (player, npc))
	{
		//-- NPC: [Perusta nods.] It doesn't look like you've found the blossoms yet. Go back out there. We can't waste time.
		string_id message = new string_id (c_stringFile, "s_2780");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'll continue to look.
		boolean hasResponse0 = false;
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2782");

			utils.setScriptVar (player, "conversation.ep3_forest_perusta.branchId", 6);

			npcStartConversation (player, npc, "ep3_forest_perusta", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_perusta_condition_hasCompletedQuestOne (player, npc))
	{
		//-- NPC: [Perusta sighs.] It didn't work. The Mysess Blossoms that I had didn't live long enough for me to complete the experiment. I'll need more, if you can find them. They're starting to die out, however. Bring me 5 of them. That should be enough to succeed at least once.
		string_id message = new string_id (c_stringFile, "s_2786");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm on my way.
		boolean hasResponse0 = false;
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm going to skip this one for now.
		boolean hasResponse1 = false;
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2788");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2792");

			utils.setScriptVar (player, "conversation.ep3_forest_perusta.branchId", 8);

			npcStartConversation (player, npc, "ep3_forest_perusta", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_perusta_condition_hasCompletedTaskOne (player, npc))
	{
		//-- NPC: [Perusta hums a little tune while she fiddles with her plants.]
		string_id message = new string_id (c_stringFile, "s_2796");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Perusta..? I have the moss you wanted.
		boolean hasResponse0 = false;
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2798");

			utils.setScriptVar (player, "conversation.ep3_forest_perusta.branchId", 11);

			npcStartConversation (player, npc, "ep3_forest_perusta", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_perusta_condition_isTaskOneActive (player, npc))
	{
		//-- NPC: [Perusta looks up from her work, face flecked with dirt and smudge.] Were you able to find the moss yet?
		string_id message = new string_id (c_stringFile, "s_2802");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: No, not yet. But I haven't given up.
		boolean hasResponse0 = false;
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2804");

			utils.setScriptVar (player, "conversation.ep3_forest_perusta.branchId", 13);

			npcStartConversation (player, npc, "ep3_forest_perusta", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_perusta_condition_isGoodGuy (player, npc))
	{
		//-- NPC: [Perusta nods, recognizing you immediately.] You've been stirring up quite the talk these days, my friend.
		string_id message = new string_id (c_stringFile, "s_2812");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I hope it's good.
		boolean hasResponse0 = false;
		if (ep3_forest_perusta_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2814");

			utils.setScriptVar (player, "conversation.ep3_forest_perusta.branchId", 16);

			npcStartConversation (player, npc, "ep3_forest_perusta", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_perusta_condition_isBadGuy (player, npc))
	{
		//-- NPC: [Perusta looks around nervously.] You know, you shouldn't be here and I shouldn't be talking to you. You'd be better off if you just left.
		string_id message = new string_id (c_stringFile, "s_2834");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_perusta_condition__defaultCondition (player, npc))
	{
		//-- NPC: [Perusta arches a brow.] Why are you here milling about? Who are you? The Kerritamba are wary of strangers these days. It's not smart to hang around here.
		string_id message = new string_id (c_stringFile, "s_2836");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "ep3_forest_perusta")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.ep3_forest_perusta.branchId");

	if (branchId == 2 && ep3_forest_perusta_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && ep3_forest_perusta_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && ep3_forest_perusta_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && ep3_forest_perusta_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && ep3_forest_perusta_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && ep3_forest_perusta_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && ep3_forest_perusta_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && ep3_forest_perusta_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && ep3_forest_perusta_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && ep3_forest_perusta_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && ep3_forest_perusta_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.ep3_forest_perusta.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

