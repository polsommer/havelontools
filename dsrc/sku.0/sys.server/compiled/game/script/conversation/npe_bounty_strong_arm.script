// ======================================================================
//
// npe_bounty_strong_arm.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/npe_bounty_strong_arm";

// ======================================================================
// Script Conditions
// ======================================================================

boolean npe_bounty_strong_arm_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean npe_bounty_strong_arm_condition_isOnQuest (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_boba", "ratheb");
}

// ----------------------------------------------------------------------

boolean npe_bounty_strong_arm_condition_hasRattedOut (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedTask(player, "npe_boba", "ratheb");
}

// ======================================================================
// Script Actions
// ======================================================================

void npe_bounty_strong_arm_action_giveSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "strong_arm");
}

// ----------------------------------------------------------------------

void npe_bounty_strong_arm_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int npe_bounty_strong_arm_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What do you want?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to know where to find Fidaval.
	if (response == "s_6")
	{
		//-- [NOTE] 
		if (npe_bounty_strong_arm_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_on_dismissing");

			//-- NPC: Sure, like I am going to tell you. Get out of here.
			string_id message = new string_id (c_stringFile, "s_8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You have three seconds to tell me where he is.... One.
			boolean hasResponse0 = false;
			if (npe_bounty_strong_arm_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				utils.setScriptVar (player, "conversation.npe_bounty_strong_arm.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_bounty_strong_arm.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_bounty_strong_arm_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Sure, like I am going to tell you. Get out of here.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You have three seconds to tell me where he is.... One.
	if (response == "s_10")
	{
		doAnimationAction (player, "point_down");

		//-- [NOTE] 
		if (npe_bounty_strong_arm_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shakefist");

			//-- NPC: Go kiss a gamorrean!
			string_id message = new string_id (c_stringFile, "s_12");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Two...
			boolean hasResponse0 = false;
			if (npe_bounty_strong_arm_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14");

				utils.setScriptVar (player, "conversation.npe_bounty_strong_arm.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_bounty_strong_arm.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_bounty_strong_arm_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Go kiss a gamorrean!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Two...
	if (response == "s_14")
	{
		doAnimationAction (player, "point_forward");

		//-- [NOTE] 
		if (npe_bounty_strong_arm_condition__defaultCondition (player, npc))
		{
			//-- NPC: You're bluffing...
			string_id message = new string_id (c_stringFile, "s_16");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Three... I shall tell your wife this was your doing.
			boolean hasResponse0 = false;
			if (npe_bounty_strong_arm_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_18");

				utils.setScriptVar (player, "conversation.npe_bounty_strong_arm.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_bounty_strong_arm.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_bounty_strong_arm_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You're bluffing...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Three... I shall tell your wife this was your doing.
	if (response == "s_18")
	{
		//-- [NOTE] 
		if (npe_bounty_strong_arm_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "scared");

			npe_bounty_strong_arm_action_giveSignal (player, npc);

			//-- NPC: Okay! I will tell you, just please leave us alone! He is hiding in the Atrium. Do you have to kill him?
			string_id message = new string_id (c_stringFile, "s_20");
			utils.removeScriptVar (player, "conversation.npe_bounty_strong_arm.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_bounty_strong_arm_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Do I know you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You looked familiar.
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (npe_bounty_strong_arm_condition__defaultCondition (player, npc))
		{
			//-- NPC: I get that a lot.
			string_id message = new string_id (c_stringFile, "s_28");
			utils.removeScriptVar (player, "conversation.npe_bounty_strong_arm.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.npe_bounty_strong_arm");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Ratheb");
	setAnimationMood(self, "npc_sitting_chair");
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Ratheb");
	setAnimationMood(self, "npc_sitting_chair");
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.npe_bounty_strong_arm");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (npe_bounty_strong_arm_condition_isOnQuest (player, npc))
	{
		//-- NPC: What do you want?
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I want to know where to find Fidaval.
		boolean hasResponse0 = false;
		if (npe_bounty_strong_arm_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6");

			utils.setScriptVar (player, "conversation.npe_bounty_strong_arm.branchId", 1);

			npcStartConversation (player, npc, "npe_bounty_strong_arm", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_bounty_strong_arm_condition_hasRattedOut (player, npc))
	{
		//-- NPC: Please, I told you all I know!
		string_id message = new string_id (c_stringFile, "s_22");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_bounty_strong_arm_condition__defaultCondition (player, npc))
	{
		//-- NPC: Do I know you?
		string_id message = new string_id (c_stringFile, "s_24");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: You looked familiar.
		boolean hasResponse0 = false;
		if (npe_bounty_strong_arm_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_26");

			utils.setScriptVar (player, "conversation.npe_bounty_strong_arm.branchId", 7);

			npcStartConversation (player, npc, "npe_bounty_strong_arm", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "npe_bounty_strong_arm")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.npe_bounty_strong_arm.branchId");

	if (branchId == 1 && npe_bounty_strong_arm_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && npe_bounty_strong_arm_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && npe_bounty_strong_arm_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && npe_bounty_strong_arm_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && npe_bounty_strong_arm_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.npe_bounty_strong_arm.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

