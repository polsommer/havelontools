// ======================================================================
//
// npe_side_smuggle_questgiver.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.npe;
include library.space_utils;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/npe_side_smuggle_questgiver";

// ======================================================================
// Script Conditions
// ======================================================================

boolean npe_side_smuggle_questgiver_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean npe_side_smuggle_questgiver_condition_canTakeQuest (obj_id player, obj_id npc)
{
	return space_utils.hasShip(player);
}

// ----------------------------------------------------------------------

boolean npe_side_smuggle_questgiver_condition_hasFinishedTemplate (obj_id player, obj_id npc)
{
	return 	hasObjVar(player, "npe.finishedTemplate");
}

// ----------------------------------------------------------------------

boolean npe_side_smuggle_questgiver_condition_stillOnTasks (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "npe_side_smuggle", "elevator_up")					||
			groundquests.isTaskActive(player, "npe_side_smuggle", "npe_side_smuggle_buyer_signal")	||
			groundquests.isTaskActive(player, "npe_side_smuggle", "spice_collect")					||
			groundquests.isTaskActive(player, "npe_side_smuggle", "elevator_down")					||
			groundquests.isTaskActive(player, "npe_side_smuggle", "launch")							||
			groundquests.isTaskActive(player, "npe_side_smuggle", "spaceQuest")						||
			groundquests.isTaskActive(player, "npe_side_smuggle", "failed")							||
			groundquests.isTaskActive(player, "npe_side_smuggle_2", "spice_collect")				||
			groundquests.isTaskActive(player, "npe_side_smuggle_2", "elevator_down")				||
			groundquests.isTaskActive(player, "npe_side_smuggle_2", "launch")						||
			groundquests.isTaskActive(player, "npe_side_smuggle_2", "failed")						||
			groundquests.isTaskActive(player, "npe_side_smuggle_2", "spaceQuest"));

}

// ----------------------------------------------------------------------

boolean npe_side_smuggle_questgiver_condition_hasReturned (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "npe_side_smuggle", "npe_side_smuggle_return_signal")	||
			groundquests.isTaskActive(player, "npe_side_smuggle_2", "npe_side_smuggle_return_signal"));
}

// ----------------------------------------------------------------------

boolean npe_side_smuggle_questgiver_condition_finishedQuest (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedQuest(player, "npe_side_smuggle") ||
			groundquests.hasCompletedQuest(player, "npe_side_smuggle_2"));
}

// ======================================================================
// Script Actions
// ======================================================================

void npe_side_smuggle_questgiver_action_giveQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "npe_side_smuggle");
	if(!hasObjVar(player, npe.QUEST_REWORK_VAR))
		setObjVar(player, npe.QUEST_REWORK_VAR, npe.QUEST_ENUMERATION);
}

// ----------------------------------------------------------------------

void npe_side_smuggle_questgiver_action_sendSignalDone (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_side_smuggle_return_signal");
	npe.sendDelayed3poPopup(player, 3, 11, "sound/c3po_29.snd", "npe", "pop_credits", "npe.credits");
}

// ----------------------------------------------------------------------

void npe_side_smuggle_questgiver_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void npe_side_smuggle_questgiver_action_pilotPointer (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "npe_job_pointer_serissu");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int npe_side_smuggle_questgiver_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You delivered the package, I trust?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I did just as you said.
	if (response == "s_32")
	{
		//-- [NOTE] 
		if (npe_side_smuggle_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good job. Best to keep this between us. I will remember my friends when the time comes.
			string_id message = new string_id (c_stringFile, "s_33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What time?
			boolean hasResponse0 = false;
			if (npe_side_smuggle_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_34");

				utils.setScriptVar (player, "conversation.npe_side_smuggle_questgiver.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_side_smuggle_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_side_smuggle_questgiver_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good job. Best to keep this between us. I will remember my friends when the time comes.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What time?
	if (response == "s_34")
	{
		//-- [NOTE] 
		if (npe_side_smuggle_questgiver_condition__defaultCondition (player, npc))
		{
			npe_side_smuggle_questgiver_action_sendSignalDone (player, npc);

			//-- NPC: You will see.
			string_id message = new string_id (c_stringFile, "s_35");
			utils.removeScriptVar (player, "conversation.npe_side_smuggle_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_side_smuggle_questgiver_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You interested in a job? If so, I have one. You just need to have a ship first.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where do I get one?
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (npe_side_smuggle_questgiver_condition__defaultCondition (player, npc))
		{
			npe_side_smuggle_questgiver_action_pilotPointer (player, npc);

			//-- NPC: Talk to Serissu, she will teach you what you need to know. Come back when you are done.
			string_id message = new string_id (c_stringFile, "s_42");
			utils.removeScriptVar (player, "conversation.npe_side_smuggle_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_side_smuggle_questgiver_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hey, you! Looking for a job?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Depends on the job.
	if (response == "s_19")
	{
		//-- [NOTE] 
		if (npe_side_smuggle_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: I need you to deliver a package for me.
			string_id message = new string_id (c_stringFile, "s_21");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: As in a smuggled item?  I hear bad things about smugglers.
			boolean hasResponse0 = false;
			if (npe_side_smuggle_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: So, you DO want me to smuggle something? Suppose I tell Inaldra?
			boolean hasResponse1 = false;
			if (npe_side_smuggle_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_23");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_36");

				utils.setScriptVar (player, "conversation.npe_side_smuggle_questgiver.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_side_smuggle_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I think I have enough to do already.
	if (response == "s_43")
	{
		//-- [NOTE] 
		if (npe_side_smuggle_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: hmph, you couldn't handle it anyway.
			string_id message = new string_id (c_stringFile, "s_45");
			utils.removeScriptVar (player, "conversation.npe_side_smuggle_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_side_smuggle_questgiver_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I need you to deliver a package for me.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: As in a smuggled item?  I hear bad things about smugglers.
	if (response == "s_23")
	{
		//-- [NOTE] 
		if (npe_side_smuggle_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: It's not like that at all. I just need someone to drop this off. Someone who is not me. I am being watched. You are new here, and should be able to move around without suspicion. So are you in?
			string_id message = new string_id (c_stringFile, "s_25");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I suppose.
			boolean hasResponse0 = false;
			if (npe_side_smuggle_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_27");

				utils.setScriptVar (player, "conversation.npe_side_smuggle_questgiver.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_side_smuggle_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So, you DO want me to smuggle something? Suppose I tell Inaldra?
	if (response == "s_36")
	{
		//-- [NOTE] 
		if (npe_side_smuggle_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh");

			//-- NPC: HAH! Some station master she is. Can't even take care of the pirates in the lower level. Look at the chaos around you, my friend.
			string_id message = new string_id (c_stringFile, "s_38");
			utils.removeScriptVar (player, "conversation.npe_side_smuggle_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_side_smuggle_questgiver_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It's not like that at all. I just need someone to drop this off. Someone who is not me. I am being watched. You are new here, and should be able to move around without suspicion. So are you in?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I suppose.
	if (response == "s_27")
	{
		//-- [NOTE] 
		if (npe_side_smuggle_questgiver_condition__defaultCondition (player, npc))
		{
			npe_side_smuggle_questgiver_action_giveQuest (player, npc);

			//-- NPC: Okay, meet Maghr Scutu in the Atrium. He will give you directions on how to deliver the package.
			string_id message = new string_id (c_stringFile, "s_29");
			utils.removeScriptVar (player, "conversation.npe_side_smuggle_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.npe_side_smuggle_questgiver");
	
	setName( self, "Tarand Crowe");
	setInvulnerable (self, true);
	setCondition (self, CONDITION_CONVERSABLE);
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	setAnimationMood(self, "npc_sitting_chair");

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setName( self, "Tarand Crowe");
	setInvulnerable (self, true);
	setCondition (self, CONDITION_CONVERSABLE);
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	setAnimationMood(self, "npc_sitting_chair");
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.npe_side_smuggle_questgiver");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (npe_side_smuggle_questgiver_condition_finishedQuest (player, npc))
	{
		doAnimationAction (npc, "dismiss");

		npe_side_smuggle_questgiver_action_facePlayer (player, npc);

		//-- NPC: Thanks for your help earlier.
		string_id message = new string_id (c_stringFile, "s_46");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_side_smuggle_questgiver_condition_stillOnTasks (player, npc))
	{
		//-- NPC: What are you doing here? I told you to hurry.
		string_id message = new string_id (c_stringFile, "s_16");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_side_smuggle_questgiver_condition_hasReturned (player, npc))
	{
		//-- NPC: You delivered the package, I trust?
		string_id message = new string_id (c_stringFile, "s_31");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, I did just as you said.
		boolean hasResponse0 = false;
		if (npe_side_smuggle_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_32");

			utils.setScriptVar (player, "conversation.npe_side_smuggle_questgiver.branchId", 3);

			npcStartConversation (player, npc, "npe_side_smuggle_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!npe_side_smuggle_questgiver_condition_hasFinishedTemplate (player, npc))
	{
		//-- NPC: Go away. I'm busy right now. You are obviously not qualified to handle my needs yet.
		string_id message = new string_id (c_stringFile, "s_14");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!npe_side_smuggle_questgiver_condition_canTakeQuest (player, npc))
	{
		//-- NPC: You interested in a job? If so, I have one. You just need to have a ship first.
		string_id message = new string_id (c_stringFile, "s_39");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Where do I get one?
		boolean hasResponse0 = false;
		if (npe_side_smuggle_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_41");

			utils.setScriptVar (player, "conversation.npe_side_smuggle_questgiver.branchId", 7);

			npcStartConversation (player, npc, "npe_side_smuggle_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_side_smuggle_questgiver_condition_canTakeQuest (player, npc))
	{
		//-- NPC: Hey, you! Looking for a job?
		string_id message = new string_id (c_stringFile, "s_17");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Depends on the job.
		boolean hasResponse0 = false;
		if (npe_side_smuggle_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No, I think I have enough to do already.
		boolean hasResponse1 = false;
		if (npe_side_smuggle_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_19");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_43");

			utils.setScriptVar (player, "conversation.npe_side_smuggle_questgiver.branchId", 9);

			npcStartConversation (player, npc, "npe_side_smuggle_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_side_smuggle_questgiver_condition__defaultCondition (player, npc))
	{
		//-- NPC: Do I know you?
		string_id message = new string_id (c_stringFile, "s_48");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "npe_side_smuggle_questgiver")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.npe_side_smuggle_questgiver.branchId");

	if (branchId == 3 && npe_side_smuggle_questgiver_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && npe_side_smuggle_questgiver_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && npe_side_smuggle_questgiver_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && npe_side_smuggle_questgiver_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && npe_side_smuggle_questgiver_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && npe_side_smuggle_questgiver_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.npe_side_smuggle_questgiver.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

