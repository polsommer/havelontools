// ======================================================================
//
// nova_orion_katiara_orion.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.buff;
include library.chat;
include library.groundquests;
include library.township;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/nova_orion_katiara_orion";

// ======================================================================
// Script Conditions
// ======================================================================

boolean nova_orion_katiara_orion_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean nova_orion_katiara_orion_condition_isMyPlayer (obj_id player, obj_id npc)
{
	obj_id myPlayer = utils.getObjIdScriptVar(npc, "myPlayer");
	if ( isIdValid(myPlayer) )
	{
		if ( myPlayer == player )
		{
			return true;
		}
	}
	else
	{
		obj_id parent = utils.getObjIdScriptVar(npc, "objParent");
		if ( isIdValid(parent) )
		{
			dictionary params = new dictionary();
			params.put("player", player);
			messageTo(parent, "cleanupNoFinaleEvent", params, 1, false);
		}
		else
		{
			messageTo(npc, "emergencySelfCleanUp", null, 1, false);
		}
	}
	
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void nova_orion_katiara_orion_action_finalReward (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "nova_orion_rank6_finale_02");
	
	buff.applyBuff(player, "nova_orion_rank6_lucky_salvage");
	
	setObjVar(player, township.NOVA_ORION_FINALE_COMPLETED, true);
	
	npcEndConversation(player);
	
	obj_id parent = utils.getObjIdScriptVar(npc, "objParent");
	if ( isIdValid(parent) )
	{
		dictionary params = new dictionary();
		params.put("player", player);
		messageTo(parent, "cleanupNoFinaleEvent", params, 3, false);
	}
	else
	{
		messageTo(npc, "emergencySelfCleanUp", null, 1, false);
	}
	
	return;
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int nova_orion_katiara_orion_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Thank you for restoring peace between my father and Uncle Jonas. And to their space station. I am really happy about that.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm glad I could help.
	if (response == "s_6")
	{
		doAnimationAction (player, "bow");

		//-- [NOTE] 
		if (nova_orion_katiara_orion_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave1");

			nova_orion_katiara_orion_action_finalReward (player, npc);

			//-- NPC: You're my new best friend. Farewell.
			string_id message = new string_id (c_stringFile, "s_8");
			utils.removeScriptVar (player, "conversation.nova_orion_katiara_orion.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.nova_orion_katiara_orion");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

messageHandler emergencySelfCleanUp()
{
	destroyObject(self);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.nova_orion_katiara_orion");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (nova_orion_katiara_orion_condition_isMyPlayer (player, npc))
	{
		doAnimationAction (npc, "applause_excited");

		//-- NPC: Thank you for restoring peace between my father and Uncle Jonas. And to their space station. I am really happy about that.
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm glad I could help.
		boolean hasResponse0 = false;
		if (nova_orion_katiara_orion_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6");

			utils.setScriptVar (player, "conversation.nova_orion_katiara_orion.branchId", 1);

			npcStartConversation (player, npc, "nova_orion_katiara_orion", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (nova_orion_katiara_orion_condition__defaultCondition (player, npc))
	{
		//-- NPC: May you feel joy and peace for all your days.
		string_id message = new string_id (c_stringFile, "s_10");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "nova_orion_katiara_orion")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.nova_orion_katiara_orion.branchId");

	if (branchId == 1 && nova_orion_katiara_orion_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.nova_orion_katiara_orion.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

