// ======================================================================
//
// som_kenobi_moral_strike_leader.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/som_kenobi_moral_strike_leader";

// ======================================================================
// Script Conditions
// ======================================================================

boolean som_kenobi_moral_strike_leader_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean som_kenobi_moral_strike_leader_condition_onTaskDestroy (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "som_kenobi_moral_choice_1", "needDestroy");
}

// ----------------------------------------------------------------------

boolean som_kenobi_moral_strike_leader_condition_haveCore (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "som_kenobi_moral_choice_1", "gotCore");
}

// ----------------------------------------------------------------------

boolean som_kenobi_moral_strike_leader_condition_done (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "som_kenobi_moral_choice_1");
}

// ----------------------------------------------------------------------

boolean som_kenobi_moral_strike_leader_condition_onUploadTask (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "som_kenobi_moral_choice_1", "switchedSides");
}

// ----------------------------------------------------------------------

boolean som_kenobi_moral_strike_leader_condition_onQuest (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "som_kenobi_moral_choice_1");
}

// ----------------------------------------------------------------------

boolean som_kenobi_moral_strike_leader_condition_missionDone (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "som_kenobi_moral_choice_1", "talkLeader2");
}

// ======================================================================
// Script Actions
// ======================================================================

void som_kenobi_moral_strike_leader_action_switched (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "talkedLeader");
}

// ----------------------------------------------------------------------

void som_kenobi_moral_strike_leader_action_removeDirty (obj_id player, obj_id npc)
{
	groundquests.failTask(player, "som_kenobi_moral_choice_1", "needDestroy");
}

// ----------------------------------------------------------------------

void som_kenobi_moral_strike_leader_action_reward (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "talkedLeader2");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int som_kenobi_moral_strike_leader_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: My friend! We have already heard the good news! I believe the corporation is setting up the trial for that scum, as we speak, and I've received word that they are sending a negotiator out here to come to an agreement. We couldn't thank you enough.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It felt good sticking it to that pompous vermin.
	if (response == "s_209")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			som_kenobi_moral_strike_leader_action_reward (player, npc);

			//-- NPC: I agree! Now we are by no means rich, but we all chipped in and have managed to put together a credit reward. We also have this hologram for you to remember us by.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm most grateful. Thank your men for me.
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_211");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I agree! Now we are by no means rich, but we all chipped in and have managed to put together a credit reward. We also have this hologram for you to remember us by.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm most grateful. Thank your men for me.
	if (response == "s_211")
	{
		doAnimationAction (player, "thank");

		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "thank");

			//-- NPC: We're the ones that are grateful, friend. Take good care of yourself!
			string_id message = new string_id (c_stringFile, "s_212");
			utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: How may I assist?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: This looks like a mine but you aren't working?
	if (response == "s_173")
	{
		doAnimationAction (player, "shrug_hands");

		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: No, we are currently on strike.
			string_id message = new string_id (c_stringFile, "s_177");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How come?
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Alright. Well good luck then.
			boolean hasResponse1 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_179");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_181");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is going on here?
	if (response == "s_175")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			//-- NPC: Not much.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can see that. How come?
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_216");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No, we are currently on strike.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How come?
	if (response == "s_179")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			//-- NPC: Recently we found out that one of the executives in our corporation is skimming bonus money that should be going to us, the workers. The corporation doesn't take our allegations seriously, though, so we're not working.
			string_id message = new string_id (c_stringFile, "s_185");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You don't say? Do you have any proof?
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Interesting. Well, good luck with that.
			boolean hasResponse1 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_187");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_188");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright. Well good luck then.
	if (response == "s_181")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Thank you. We need it.
			string_id message = new string_id (c_stringFile, "s_183");
			utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Recently we found out that one of the executives in our corporation is skimming bonus money that should be going to us, the workers. The corporation doesn't take our allegations seriously, though, so we're not working.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You don't say? Do you have any proof?
	if (response == "s_187")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Hmm, why do you ask?
			string_id message = new string_id (c_stringFile, "s_191");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Well, I was sent here by that executive to sabotage.
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Oh, I'm just curious.
			boolean hasResponse1 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_192");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_193");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Interesting. Well, good luck with that.
	if (response == "s_188")
	{
		doAnimationAction (player, "rub_chin_thoughtful");

		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Thank you. We need it.
			string_id message = new string_id (c_stringFile, "s_190");
			utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm, why do you ask?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well, I was sent here by that executive to sabotage.
	if (response == "s_192")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "stamp_feet");

			//-- NPC: I knew it! I was wondering how long it would take him to resort to that kind of action. How come you are telling me?
			string_id message = new string_id (c_stringFile, "s_198");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: After hearing your side, I'd like to help you guys out.
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh, I'm just curious.
	if (response == "s_193")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, these days, we can't be careful enough, so I believe our conversation ends here.
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Well, I was sent here by that executive to sabotage.
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I understand.
			boolean hasResponse1 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_195");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_196");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I knew it! I was wondering how long it would take him to resort to that kind of action. How come you are telling me?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: After hearing your side, I'd like to help you guys out.
	if (response == "s_199")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			//-- NPC: Interesting. You asked earlier if we have proof and we indeed do. The problem is that the executive's men will probably attack us on sight if we go near the headquarters. You, on the other hand, could go in freely.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Agreed. What do you need me to do in there?
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_201");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Interesting. You asked earlier if we have proof and we indeed do. The problem is that the executive's men will probably attack us on sight if we go near the headquarters. You, on the other hand, could go in freely.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Agreed. What do you need me to do in there?
	if (response == "s_201")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			//-- NPC: If we give you a disk with the proof we have, you can upload it onto the corporation's communication network. Then they can't ignore us anymore.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds easy enough. I'll do it!
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_203");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: If we give you a disk with the proof we have, you can upload it onto the corporation's communication network. Then they can't ignore us anymore.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds easy enough. I'll do it!
	if (response == "s_203")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Good, here's the disk. You will find the computer terminal inside the main mining facility.
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Very well, I will return when it's done.
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_205");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good, here's the disk. You will find the computer terminal inside the main mining facility.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Very well, I will return when it's done.
	if (response == "s_205")
	{
		som_kenobi_moral_strike_leader_action_switched (player, npc);

		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			doAnimationAction (player, "goodbye");

			som_kenobi_moral_strike_leader_action_removeDirty (player, npc);

			//-- NPC: I look forward to it. Be careful of guards on the executive's payroll. They will try to stop you if they figure out what you are up to.
			string_id message = new string_id (c_stringFile, "s_206");
			utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, these days, we can't be careful enough, so I believe our conversation ends here.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well, I was sent here by that executive to sabotage.
	if (response == "s_195")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "stamp_feet");

			//-- NPC: I knew it! I was wondering how long it would take him to resort to that kind of action. How come you are telling me?
			string_id message = new string_id (c_stringFile, "s_198");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: After hearing your side, I'd like to help you guys out.
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I understand.
	if (response == "s_196")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			doAnimationAction (player, "goodbye");

			//-- NPC: Good. You take care now.
			string_id message = new string_id (c_stringFile, "s_197");
			utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Not much.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can see that. How come?
	if (response == "s_216")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			//-- NPC: We are on strike.
			string_id message = new string_id (c_stringFile, "s_261");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why?
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_262");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 20);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We are on strike.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why?
	if (response == "s_262")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			//-- NPC: Recently we found out that one of the executives in our corporation is skimming bonus money that should be going to us, the workers. The corporation doesn't take our allegations seriously, though, so we're not working.
			string_id message = new string_id (c_stringFile, "s_264");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You don't say? Do you have any proof?
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Interesting. Well, good luck with that.
			boolean hasResponse1 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_266");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_300");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Recently we found out that one of the executives in our corporation is skimming bonus money that should be going to us, the workers. The corporation doesn't take our allegations seriously, though, so we're not working.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You don't say? Do you have any proof?
	if (response == "s_266")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Hmm, why do you ask?
			string_id message = new string_id (c_stringFile, "s_268");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Well, I was sent here by that executive to sabotage.
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Oh, I'm just curious.
			boolean hasResponse1 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_270");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_290");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Interesting. Well, good luck with that.
	if (response == "s_300")
	{
		doAnimationAction (player, "rub_chin_thoughtful");

		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Thank you. We need it.
			string_id message = new string_id (c_stringFile, "s_302");
			utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm, why do you ask?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well, I was sent here by that executive to sabotage.
	if (response == "s_270")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "stamp_feet");

			//-- NPC: I knew it! I was wondering how long it would take him to resort to that kind of action. How come you are telling me?
			string_id message = new string_id (c_stringFile, "s_272");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That guy deserves to be taught a lesson.
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_274");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh, I'm just curious.
	if (response == "s_290")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, these days we can't be careful enough, so I believe our conversation ends here.
			string_id message = new string_id (c_stringFile, "s_292");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Well, I was sent here by that executive to sabotage.
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I understand.
			boolean hasResponse1 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_294");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_296");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I knew it! I was wondering how long it would take him to resort to that kind of action. How come you are telling me?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That guy deserves to be taught a lesson.
	if (response == "s_274")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			//-- NPC: Interesting. You asked earlier if we have proof and we indeed do. The problem is that the executive's men will probably attack us on sight if we go near the headquarters. You, on the other hand, could go in freely.
			string_id message = new string_id (c_stringFile, "s_276");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Most likely. Why?
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_278");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Interesting. You asked earlier if we have proof and we indeed do. The problem is that the executive's men will probably attack us on sight if we go near the headquarters. You, on the other hand, could go in freely.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Most likely. Why?
	if (response == "s_278")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			//-- NPC: If we give you a disk with the proof we have, you can upload it onto the corporation's communication network. Then they can't ignore us anymore.
			string_id message = new string_id (c_stringFile, "s_280");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Shouldn't be a problem.
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_282");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: If we give you a disk with the proof we have, you can upload it onto the corporation's communication network. Then they can't ignore us anymore.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Shouldn't be a problem.
	if (response == "s_282")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Good, here's the disk. You will find the computer terminal inside the main mining facility.
			string_id message = new string_id (c_stringFile, "s_284");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Very well, I will return when it's done.
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_286");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good, here's the disk. You will find the computer terminal inside the main mining facility.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Very well, I will return when it's done.
	if (response == "s_286")
	{
		som_kenobi_moral_strike_leader_action_switched (player, npc);

		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			doAnimationAction (player, "goodbye");

			//-- NPC: I look forward to it. Be careful of guards on the executive's payroll. They will try to stop you if they figure out what you are up to.
			string_id message = new string_id (c_stringFile, "s_288");
			utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_strike_leader_handleBranch28 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, these days we can't be careful enough, so I believe our conversation ends here.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well, I was sent here by that executive to sabotage.
	if (response == "s_294")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "stamp_feet");

			//-- NPC: I knew it! I was wondering how long it would take him to resort to that kind of action. How come you are telling me?
			string_id message = new string_id (c_stringFile, "s_272");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That guy deserves to be taught a lesson.
			boolean hasResponse0 = false;
			if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_274");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I understand.
	if (response == "s_296")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			doAnimationAction (player, "goodbye");

			//-- NPC: Good. You take care now.
			string_id message = new string_id (c_stringFile, "s_298");
			utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.som_kenobi_moral_strike_leader");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.som_kenobi_moral_strike_leader");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (som_kenobi_moral_strike_leader_condition_done (player, npc))
	{
		doAnimationAction (npc, "dismiss");

		//-- NPC: Yes, we are still here and will be until this is solved.
		string_id message = new string_id (c_stringFile, "s_171");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_kenobi_moral_strike_leader_condition_missionDone (player, npc))
	{
		doAnimationAction (npc, "greet");

		doAnimationAction (player, "greet");

		//-- NPC: My friend! We have already heard the good news! I believe the corporation is setting up the trial for that scum, as we speak, and I've received word that they are sending a negotiator out here to come to an agreement. We couldn't thank you enough.
		string_id message = new string_id (c_stringFile, "s_208");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: It felt good sticking it to that pompous vermin.
		boolean hasResponse0 = false;
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_209");

			utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 2);

			npcStartConversation (player, npc, "som_kenobi_moral_strike_leader", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_kenobi_moral_strike_leader_condition_onUploadTask (player, npc))
	{
		//-- NPC: The executive will get suspicious, friend. You should go to the mining facility and upload that data as soon as possible.
		string_id message = new string_id (c_stringFile, "s_207");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_kenobi_moral_strike_leader_condition_onTaskDestroy (player, npc))
	{
		doAnimationAction (npc, "nod_head_once");

		doAnimationAction (player, "greet");

		//-- NPC: How may I assist?
		string_id message = new string_id (c_stringFile, "s_140");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: This looks like a mine but you aren't working?
		boolean hasResponse0 = false;
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: What is going on here?
		boolean hasResponse1 = false;
		if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_173");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_175");

			utils.setScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId", 6);

			npcStartConversation (player, npc, "som_kenobi_moral_strike_leader", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_kenobi_moral_strike_leader_condition_onQuest (player, npc))
	{
		doAnimationAction (npc, "point_accusingly");

		//-- NPC: I don't like your look. You should move along...
		string_id message = new string_id (c_stringFile, "s_139");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_kenobi_moral_strike_leader_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "point_forward");

		doAnimationAction (player, "greet");

		//-- NPC: Be careful around here, friend. I wouldn't be surprised if the corporation will resort to violence against us strikers soon.
		string_id message = new string_id (c_stringFile, "s_110");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "som_kenobi_moral_strike_leader")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

	if (branchId == 2 && som_kenobi_moral_strike_leader_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && som_kenobi_moral_strike_leader_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && som_kenobi_moral_strike_leader_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && som_kenobi_moral_strike_leader_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && som_kenobi_moral_strike_leader_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && som_kenobi_moral_strike_leader_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && som_kenobi_moral_strike_leader_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && som_kenobi_moral_strike_leader_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && som_kenobi_moral_strike_leader_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && som_kenobi_moral_strike_leader_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && som_kenobi_moral_strike_leader_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && som_kenobi_moral_strike_leader_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && som_kenobi_moral_strike_leader_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && som_kenobi_moral_strike_leader_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && som_kenobi_moral_strike_leader_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && som_kenobi_moral_strike_leader_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && som_kenobi_moral_strike_leader_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && som_kenobi_moral_strike_leader_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && som_kenobi_moral_strike_leader_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 28 && som_kenobi_moral_strike_leader_handleBranch28 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.som_kenobi_moral_strike_leader.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

