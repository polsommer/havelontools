// ======================================================================
//
// fs_quests_sad2_conv.script
// Copyright 2003, Sony Online Entertainment
// All Rights Reserved.
//
// DO NOT EDIT THIS AUTO-GENERATED FILE.  PLEASE USE THE CONVERATION EDITOR!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.fs_quests;
include library.fs_quests_sad;
include library.geiger;
include library.quests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/fs_quests_sad2_conv";

// ======================================================================
// Script Conditions
// ======================================================================

boolean fs_quests_sad2_conv_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_hasCompletedAllTasksCond (obj_id player, obj_id npc)
{
	return fs_quests_sad.hasCompletedAllTasks2(player);
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_hasExceededTaskLimitCond (obj_id player, obj_id npc)
{
	return fs_quests_sad.hasExceededTaskLimit(player);
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_hasTaskCond (obj_id player, obj_id npc)
{
	return fs_quests_sad.hasTask2(player);
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_isVillageEligibleCond (obj_id player, obj_id npc)
{
	return fs_quests.isVillageEligible(player);
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_readyForTaskCond (obj_id player, obj_id npc)
{
	return !fs_quests_sad.hasTask(player) && !fs_quests_sad.hasExceededTaskLimit(player) && !fs_quests_sad.hasCompletedAllTasks2(player) && fs_quests.isVillageEligible(player);
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_hasTheaterAssignedCond (obj_id player, obj_id npc)
{
	return hasTheaterAssigned(player);
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_hasNotCompletedAnyTasksCond (obj_id player, obj_id npc)
{
	return !quests.isComplete("fs_quests_sad2_task1", player);
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_tooLowLevelCond (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_hasFullInventoryCond (obj_id player, obj_id npc)
{
	if(fs_quests_sad2_conv_condition_readyForRewardCond(player, npc))
	{
		obj_id objInventory = utils.getInventoryContainer(player);
		if(getVolumeFree(objInventory) <= 0)
			return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_readyForRewardCond (obj_id player, obj_id npc)
{
	return quests.isActive("fs_quests_sad2_return8", player) && !fs_quests_sad2_conv_condition_hasCompletedAllTasksCond(player, npc);
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_completed1TaskCond (obj_id player, obj_id npc)
{
	return fs_quests_sad2_conv_condition_readyForTaskCond(player, npc) && fs_quests_sad.getNumberTasksCompleted2(player) == 0;
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_completed2TaskCond (obj_id player, obj_id npc)
{
	return fs_quests_sad2_conv_condition_readyForTaskCond(player, npc) && fs_quests_sad.getNumberTasksCompleted2(player) == 1;
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_completed3TaskCond (obj_id player, obj_id npc)
{
	return fs_quests_sad2_conv_condition_readyForTaskCond(player, npc) && fs_quests_sad.getNumberTasksCompleted2(player) == 2;
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_completed4TaskCond (obj_id player, obj_id npc)
{
	return fs_quests_sad2_conv_condition_readyForTaskCond(player, npc) && fs_quests_sad.getNumberTasksCompleted2(player) == 3;
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_completed5TaskCond (obj_id player, obj_id npc)
{
	return fs_quests_sad2_conv_condition_readyForTaskCond(player, npc) && fs_quests_sad.getNumberTasksCompleted2(player) == 4;
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_completed6TaskCond (obj_id player, obj_id npc)
{
	return fs_quests_sad2_conv_condition_readyForTaskCond(player, npc) && fs_quests_sad.getNumberTasksCompleted2(player) == 5;
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_completed7TaskCond (obj_id player, obj_id npc)
{
	return fs_quests_sad2_conv_condition_readyForTaskCond(player, npc) && fs_quests_sad.getNumberTasksCompleted2(player) == 6;
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_needsAnotherGeigerCond (obj_id player, obj_id npc)
{
	return !hasObjVar(player, geiger.OBJVAR_GEIGER_OBJECT) && fs_quests_sad2_conv_condition_hasTaskCond(player, npc);
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_hasOtherPhaseQuestCond (obj_id player, obj_id npc)
{
	return !quests.isActive("fs_quests_sad2_task1", player) && !quests.isComplete("fs_quests_sad2_task1", player) && fs_quests.hasQuestAccepted(player);
}

// ----------------------------------------------------------------------

boolean fs_quests_sad2_conv_condition_completedOtherPhaseQuestCond (obj_id player, obj_id npc)
{
	return fs_quests.hasQuestCompleted(player);
}

// ======================================================================
// Script Actions
// ======================================================================

void fs_quests_sad2_conv_action_grantTask (obj_id player, obj_id npc)
{
	if (hasObjVar (player, "quest.fs_quests_sad2_return8.waypoint"))
	{
		obj_id point = getObjIdObjVar (player, "quest.fs_quests_sad2_return8.waypoint");
		destroyWaypointInDatapad(point, player);
		removeObjVar (player, "quest.fs_quests_sad2_return8.waypoint");
	}
	fs_quests.setQuestAccepted(player);
	if(!quests.isComplete("fs_quests_sad2_tasks", player) && !quests.isActive("fs_quests_sad2_tasks", player))
	{
		LOG("newquests", "fs_quests_sad2_conv - assigning beginning quest");
		quests.activate("fs_quests_sad2_tasks", player, npc);
		attachScript(player, "systems.fs_quest.fs_quests_sad.cleanup2");
	}
	else
	{
		for(int i = 1; i <= 8; i++)
		{
			if(quests.isActive("fs_quests_sad2_return" + i, player))
			{		
				LOG("newquests", "fs_quests_sad2_conv - fs_quests_sad2_return" + i + " being sent signal");
				dictionary params = new dictionary();
				params.put("questName", "fs_quests_sad2_return" + i);
				messageTo(player, "OnFinishQuestSignal", params, 0, false);
				if(i == 8)
				{
					fs_quests_sad.performEndOfQuest2(player);
				}
			}
		}
	}
	return;
}

// ----------------------------------------------------------------------

void fs_quests_sad2_conv_action_giveGeiger (obj_id player, obj_id npc)
{
	geiger.resetGeiger(player);
}

// ----------------------------------------------------------------------

void fs_quests_sad2_conv_action_clearWaypoint (obj_id player, obj_id npc)
{
	string questName = "fs_quests_sad2_return1";
	for(int i = 1; i <= 8; i++)
	{
		if(quests.isActive("fs_quests_sad2_return" + i, player))
		{		
			questName = "fs_quests_sad2_return" + i;
		}
	}

	string waypointObjVar = "quest." + questName + ".waypoint";

	if (hasObjVar (player, waypointObjVar))
	{
		obj_id point = getObjIdObjVar (player, waypointObjVar);
		destroyWaypointInDatapad(point, player);
		removeObjVar (player, waypointObjVar);
	}
	
	return;
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

string fs_quests_sad2_conv_tokenTO_greetString (obj_id player, obj_id npc)
{
	return getFirstName(player);
}

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

float fs_quests_sad2_conv_tokenDF_tokenDF0001 (obj_id player, obj_id npc)
{
	return 0.f;
}

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "npc.conversation.fs_quests_sad2_conv");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "npc.conversation.fs_quests_sad2_conv");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	if (ai_lib.isInCombat (self) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (!fs_quests_sad2_conv_condition_isVillageEligibleCond (player, self))
	{
		//-- NPC: Greetings, stranger.  Your mind is clouded, you must clear it first.
		string_id message = new string_id (c_stringFile, "s_e188a139");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_quests_sad2_conv_condition_completedOtherPhaseQuestCond (player, self))
	{
		//-- NPC: You've helped enough for now, and we thank you.  I have nothing for you right now - rest a while.
		string_id message = new string_id (c_stringFile, "s_ad5c1b56");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_quests_sad2_conv_condition_hasCompletedAllTasksCond (player, self))
	{
		doAnimationAction (self, "bow");

		doAnimationAction (player, "accept_affection");

		fs_quests_sad2_conv_action_clearWaypoint (player, self);

		//-- NPC: I thank you for the services you have rendered our village.  Our home is safe because of your skill and bravery.
		string_id message = new string_id (c_stringFile, "s_ce50d249");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_quests_sad2_conv_condition_hasOtherPhaseQuestCond (player, self))
	{
		//-- NPC: I thank you for helping our village.  I've heard of the good work you're doing.
		string_id message = new string_id (c_stringFile, "s_be2a8162");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_quests_sad2_conv_condition_hasFullInventoryCond (player, self))
	{
		//-- NPC: You are so burdened - I'd like to reward you but I need you to free up space.
		string_id message = new string_id (c_stringFile, "s_e874c8c5");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_quests_sad2_conv_condition_readyForRewardCond (player, self))
	{
		fs_quests_sad2_conv_action_grantTask (player, self);

		//-- NPC: I cannot thank you enough.  Your vigilance, speed and bravery have undoubtedly saved many lives.  Please take this as a token of my respect - it's been sitting in my shop far too long. You'll find it makes you more nimble, better able to defend against ranged attacks.  You will also find that you've achieved an understanding of how to increase your ranged defense through the Force.  May the Force be with you.
		string_id message = new string_id (c_stringFile, "s_47d40828");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_quests_sad2_conv_condition_hasExceededTaskLimitCond (player, self))
	{
		doAnimationAction (self, "shake_head_no");

		doAnimationAction (player, "rub_chin_thoughtful");

		//-- NPC: Unfortunately, the Shadow has managed to evade our patrols.  We can't find them.  It's only a matter of time before we catch up with them, though - check back tommorrow.
		string_id message = new string_id (c_stringFile, "s_45e3060a");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_quests_sad2_conv_condition_needsAnotherGeigerCond (player, self))
	{
		fs_quests_sad2_conv_action_giveGeiger (player, self);

		//-- NPC: I see you've misplaced your radiation sensor.  I'm going to give you another one.  Good luck taking care of that Shadow camp.  Our people are counting on you.
		string_id message = new string_id (c_stringFile, "s_86aa30ad");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_quests_sad2_conv_condition_hasTaskCond (player, self))
	{
		doAnimationAction (self, "dismiss");

		doAnimationAction (player, "salute1");

		//-- NPC: Good luck taking care of that Shadow camp.  Our soldiers are counting on you.  Follow your waypoint or use your radiation sensor if you don't have one.
		string_id message = new string_id (c_stringFile, "s_1bb0236f");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_quests_sad2_conv_condition_hasTheaterAssignedCond (player, self))
	{
		doAnimationAction (self, "shake_head_no");

		//-- NPC: I cannot burden you with the village's problems while you have other tasks at hand.  Come back when your mind is clear.
		string_id message = new string_id (c_stringFile, "s_23720024");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_quests_sad2_conv_condition_hasNotCompletedAnyTasksCond (player, self))
	{
		doAnimationAction (self, "greet");

		//-- NPC: You look like you know your way around a weapon.  We need able bodied men to fill out our auxiliaries.  Are you prepared for the challenge?  I can teach you how to defend yourself from attacks at a distance by channelling the Force.
		string_id message = new string_id (c_stringFile, "s_ec95030");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: How can I help?
		boolean hasResponse0 = false;
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm sorry -- I can't help you right now.
		boolean hasResponse1 = false;
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_b84b366c");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_e1175f92");

			setObjVar (player, "conversation.fs_quests_sad2_conv.branchId", 11);

			npcStartConversation (player, self, "fs_quests_sad2_conv", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_quests_sad2_conv_condition_completed1TaskCond (player, self))
	{
		fs_quests_sad2_conv_action_clearWaypoint (player, self);

		//-- NPC: Someone is feeding them supplies, but we don't know who.  We've located a base that's supplying a large area outside the village.  Can you track it down and destroy it for us?
		string_id message = new string_id (c_stringFile, "s_6649d643");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm ready.
		boolean hasResponse0 = false;
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm sorry - I can't help you right now.
		boolean hasResponse1 = false;
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1adbadc4");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_45d6d31e");

			setObjVar (player, "conversation.fs_quests_sad2_conv.branchId", 17);

			npcStartConversation (player, self, "fs_quests_sad2_conv", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_quests_sad2_conv_condition_completed2TaskCond (player, self))
	{
		fs_quests_sad2_conv_action_clearWaypoint (player, self);

		//-- NPC: We'll bring this Shadow out into the open if it's the last thing we do.  I'm redoubling our patrols, which places great strain on the auxiliaries.  Think you can handle it?
		string_id message = new string_id (c_stringFile, "s_f1ccb161");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm ready.
		boolean hasResponse0 = false;
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm sorry - I can't help you right now.
		boolean hasResponse1 = false;
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1adbadc4");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_45d6d31e");

			setObjVar (player, "conversation.fs_quests_sad2_conv.branchId", 17);

			npcStartConversation (player, self, "fs_quests_sad2_conv", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_quests_sad2_conv_condition_completed3TaskCond (player, self))
	{
		fs_quests_sad2_conv_action_clearWaypoint (player, self);

		//-- NPC: They've started moving their bases around in response to our attacks.  With the help of the Force, I hope we can find their new camps quickly.  Can you help?
		string_id message = new string_id (c_stringFile, "s_f62934bc");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm ready.
		boolean hasResponse0 = false;
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm sorry - I can't help you right now.
		boolean hasResponse1 = false;
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1adbadc4");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_45d6d31e");

			setObjVar (player, "conversation.fs_quests_sad2_conv.branchId", 17);

			npcStartConversation (player, self, "fs_quests_sad2_conv", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_quests_sad2_conv_condition_completed4TaskCond (player, self))
	{
		fs_quests_sad2_conv_action_clearWaypoint (player, self);

		//-- NPC: We may have turned the corner on this thing.  It feels great to finally take the battle to our enemy instead of waiting for them to attack.  Ready for another one?
		string_id message = new string_id (c_stringFile, "s_b1cf9ec4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm ready.
		boolean hasResponse0 = false;
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm sorry - I can't help you right now.
		boolean hasResponse1 = false;
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1adbadc4");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_45d6d31e");

			setObjVar (player, "conversation.fs_quests_sad2_conv.branchId", 17);

			npcStartConversation (player, self, "fs_quests_sad2_conv", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_quests_sad2_conv_condition_completed5TaskCond (player, self))
	{
		fs_quests_sad2_conv_action_clearWaypoint (player, self);

		//-- NPC: Our spies have netted us another camp.  But you'll have to act quickly.  They look like they're ready to move.
		string_id message = new string_id (c_stringFile, "s_f88c54a");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm ready.
		boolean hasResponse0 = false;
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm sorry - I can't help you right now.
		boolean hasResponse1 = false;
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1adbadc4");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_45d6d31e");

			setObjVar (player, "conversation.fs_quests_sad2_conv.branchId", 17);

			npcStartConversation (player, self, "fs_quests_sad2_conv", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_quests_sad2_conv_condition_completed6TaskCond (player, self))
	{
		fs_quests_sad2_conv_action_clearWaypoint (player, self);

		//-- NPC: All of the reports coming in are promising -- we definitely have them on the run now.  I think we're getting to their more elite troops - please be careful.
		string_id message = new string_id (c_stringFile, "s_873e5003");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm ready.
		boolean hasResponse0 = false;
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm sorry - I can't help you right now.
		boolean hasResponse1 = false;
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1adbadc4");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_45d6d31e");

			setObjVar (player, "conversation.fs_quests_sad2_conv.branchId", 17);

			npcStartConversation (player, self, "fs_quests_sad2_conv", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_quests_sad2_conv_condition_completed7TaskCond (player, self))
	{
		fs_quests_sad2_conv_action_clearWaypoint (player, self);

		//-- NPC: All right, we're getting somewhere, finally.  Reports are coming in that a high-ranking officer of the Shadow is holed up nearby.  Take him out, now.
		string_id message = new string_id (c_stringFile, "s_f4afc95c");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm ready.
		boolean hasResponse0 = false;
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm sorry - I can't help you right now.
		boolean hasResponse1 = false;
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1adbadc4");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_45d6d31e");

			setObjVar (player, "conversation.fs_quests_sad2_conv.branchId", 17);

			npcStartConversation (player, self, "fs_quests_sad2_conv", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "fs_quests_sad2_conv")
		return SCRIPT_CONTINUE;

	int branchId = getIntObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

	//-- [BRANCH NOTE] 
	//-- NPC: You look like you know your way around a weapon.  We need able bodied men to fill out our auxiliaries.  Are you prepared for the challenge?  I can teach you how to defend yourself from attacks at a distance by channelling the Force.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: How can I help?
	if (branchId == 11 && response == "s_b84b366c")
	{
		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			//-- NPC: We're taking the fight to the enemy while we prepare our invincible shield defense.  Because of the preparations, and the scale of the conflict, our normal militia is overworked.  We're recruiting auxiliaries to be frontline combat troops.  We know the location of a number of Shadow bases that we want taken out to keep them on the run.  
			string_id message = new string_id (c_stringFile, "s_1d03bd79");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I would be honored to serve you and the Force.
			boolean hasResponse0 = false;
			if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4ae25b38");

				setObjVar (player, "conversation.fs_quests_sad2_conv.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'You look like you know your way around a weapon.  We need able bodied men to fill out our auxiliaries.  Are you prepared for the challenge?  I can teach you how to defend yourself from attacks at a distance by channelling the Force.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: You look like you know your way around a weapon.  We need able bodied men to fill out our auxiliaries.  Are you prepared for the challenge?  I can teach you how to defend yourself from attacks at a distance by channelling the Force.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm sorry -- I can't help you right now.
	if (branchId == 11 && response == "s_e1175f92")
	{
		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			//-- NPC: All right -- if that is your wish.  
			string_id message = new string_id (c_stringFile, "s_bf7dd33f");
			removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'You look like you know your way around a weapon.  We need able bodied men to fill out our auxiliaries.  Are you prepared for the challenge?  I can teach you how to defend yourself from attacks at a distance by channelling the Force.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: We're taking the fight to the enemy while we prepare our invincible shield defense.  Because of the preparations, and the scale of the conflict, our normal militia is overworked.  We're recruiting auxiliaries to be frontline combat troops.  We know the location of a number of Shadow bases that we want taken out to keep them on the run.  
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would be honored to serve you and the Force.
	if (branchId == 12 && response == "s_4ae25b38")
	{
		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			//-- NPC: Understand this, my friend.  This mission is going to carry you out into the field as an operative for our militia.  You're going to be too busy to help us in any other way for a while -- possibly as much as 3 weeks.  This is your chance to back out.
			string_id message = new string_id (c_stringFile, "s_b39e716");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: No, I understand.  I'm committed.
			boolean hasResponse0 = false;
			if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ok, I'm glad you told me.  I've got other things to do before I commit.
			boolean hasResponse1 = false;
			if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_faedbf19");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8909d6f9");

				setObjVar (player, "conversation.fs_quests_sad2_conv.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'We're taking the fight to the enemy while we prepare our invincible shield defense.  Because of the preparations, and the scale of the conflict, our normal militia is overworked.  We're recruiting auxiliaries to be frontline combat troops.  We know the location of a number of Shadow bases that we want taken out to keep them on the run.  ' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Understand this, my friend.  This mission is going to carry you out into the field as an operative for our militia.  You're going to be too busy to help us in any other way for a while -- possibly as much as 3 weeks.  This is your chance to back out.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I understand.  I'm committed.
	if (branchId == 13 && response == "s_faedbf19")
	{
		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			fs_quests_sad2_conv_action_grantTask (player, self);

			//-- NPC: Glad to hear it.  Our militia uses a small tracking device called a radiation sensor to track the enemy out in the field. I'm going to give you a control device that can sit in your datapad.  Activate it to get a reading.  As the reading goes up, you're getting close to the target.  Based on the strength of the readings, I think the nearest Shadow base is about 1000 meters from here.  Good luck, soldier.
			string_id message = new string_id (c_stringFile, "s_eabbdaa6");
			removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Understand this, my friend.  This mission is going to carry you out into the field as an operative for our militia.  You're going to be too busy to help us in any other way for a while -- possibly as much as 3 weeks.  This is your chance to back out.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Understand this, my friend.  This mission is going to carry you out into the field as an operative for our militia.  You're going to be too busy to help us in any other way for a while -- possibly as much as 3 weeks.  This is your chance to back out.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ok, I'm glad you told me.  I've got other things to do before I commit.
	if (branchId == 13 && response == "s_8909d6f9")
	{
		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			//-- NPC: All right -- if that is your wish.  
			string_id message = new string_id (c_stringFile, "s_bf7dd33f");
			removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Understand this, my friend.  This mission is going to carry you out into the field as an operative for our militia.  You're going to be too busy to help us in any other way for a while -- possibly as much as 3 weeks.  This is your chance to back out.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Someone is feeding them supplies, but we don't know who.  We've located a base that's supplying a large area outside the village.  Can you track it down and destroy it for us?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm ready.
	if (branchId == 17 && response == "s_1adbadc4")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			doAnimationAction (self, "bow2");

			doAnimationAction (player, "bow2");

			fs_quests_sad2_conv_action_grantTask (player, self);

			//-- NPC: Please come back when you've eliminated them - and be careful.  If we have waypoint data, we've provided it to you, otherwise, remember to use your radiation sensor in your datapad.
			string_id message = new string_id (c_stringFile, "s_5a1fb6b3");
			removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Someone is feeding them supplies, but we don't know who.  We've located a base that's supplying a large area outside the village.  Can you track it down and destroy it for us?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Someone is feeding them supplies, but we don't know who.  We've located a base that's supplying a large area outside the village.  Can you track it down and destroy it for us?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm sorry - I can't help you right now.
	if (branchId == 17 && response == "s_45d6d31e")
	{
		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			//-- NPC: All right -- if that is your wish.  You are always welcome here.
			string_id message = new string_id (c_stringFile, "s_253d75eb");
			removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Someone is feeding them supplies, but we don't know who.  We've located a base that's supplying a large area outside the village.  Can you track it down and destroy it for us?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: We'll bring this Shadow out into the open if it's the last thing we do.  I'm redoubling our patrols, which places great strain on the auxiliaries.  Think you can handle it?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm ready.
	if (branchId == 20 && response == "s_1adbadc4")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			doAnimationAction (self, "bow2");

			doAnimationAction (player, "bow2");

			fs_quests_sad2_conv_action_grantTask (player, self);

			//-- NPC: Please come back when you've eliminated them - and be careful.  If we have waypoint data, we've provided it to you, otherwise, remember to use your radiation sensor in your datapad.
			string_id message = new string_id (c_stringFile, "s_5a1fb6b3");
			removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'We'll bring this Shadow out into the open if it's the last thing we do.  I'm redoubling our patrols, which places great strain on the auxiliaries.  Think you can handle it?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: We'll bring this Shadow out into the open if it's the last thing we do.  I'm redoubling our patrols, which places great strain on the auxiliaries.  Think you can handle it?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm sorry - I can't help you right now.
	if (branchId == 20 && response == "s_45d6d31e")
	{
		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			//-- NPC: All right -- if that is your wish.  You are always welcome here.
			string_id message = new string_id (c_stringFile, "s_253d75eb");
			removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'We'll bring this Shadow out into the open if it's the last thing we do.  I'm redoubling our patrols, which places great strain on the auxiliaries.  Think you can handle it?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: They've started moving their bases around in response to our attacks.  With the help of the Force, I hope we can find their new camps quickly.  Can you help?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm ready.
	if (branchId == 21 && response == "s_1adbadc4")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			doAnimationAction (self, "bow2");

			doAnimationAction (player, "bow2");

			fs_quests_sad2_conv_action_grantTask (player, self);

			//-- NPC: Please come back when you've eliminated them - and be careful.  If we have waypoint data, we've provided it to you, otherwise, remember to use your radiation sensor in your datapad.
			string_id message = new string_id (c_stringFile, "s_5a1fb6b3");
			removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'They've started moving their bases around in response to our attacks.  With the help of the Force, I hope we can find their new camps quickly.  Can you help?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: They've started moving their bases around in response to our attacks.  With the help of the Force, I hope we can find their new camps quickly.  Can you help?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm sorry - I can't help you right now.
	if (branchId == 21 && response == "s_45d6d31e")
	{
		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			//-- NPC: All right -- if that is your wish.  You are always welcome here.
			string_id message = new string_id (c_stringFile, "s_253d75eb");
			removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'They've started moving their bases around in response to our attacks.  With the help of the Force, I hope we can find their new camps quickly.  Can you help?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: We may have turned the corner on this thing.  It feels great to finally take the battle to our enemy instead of waiting for them to attack.  Ready for another one?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm ready.
	if (branchId == 22 && response == "s_1adbadc4")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			doAnimationAction (self, "bow2");

			doAnimationAction (player, "bow2");

			fs_quests_sad2_conv_action_grantTask (player, self);

			//-- NPC: Please come back when you've eliminated them - and be careful.  If we have waypoint data, we've provided it to you, otherwise, remember to use your radiation sensor in your datapad.
			string_id message = new string_id (c_stringFile, "s_5a1fb6b3");
			removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'We may have turned the corner on this thing.  It feels great to finally take the battle to our enemy instead of waiting for them to attack.  Ready for another one?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: We may have turned the corner on this thing.  It feels great to finally take the battle to our enemy instead of waiting for them to attack.  Ready for another one?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm sorry - I can't help you right now.
	if (branchId == 22 && response == "s_45d6d31e")
	{
		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			//-- NPC: All right -- if that is your wish.  You are always welcome here.
			string_id message = new string_id (c_stringFile, "s_253d75eb");
			removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'We may have turned the corner on this thing.  It feels great to finally take the battle to our enemy instead of waiting for them to attack.  Ready for another one?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Our spies have netted us another camp.  But you'll have to act quickly.  They look like they're ready to move.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm ready.
	if (branchId == 23 && response == "s_1adbadc4")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			doAnimationAction (self, "bow2");

			doAnimationAction (player, "bow2");

			fs_quests_sad2_conv_action_grantTask (player, self);

			//-- NPC: Please come back when you've eliminated them - and be careful.  If we have waypoint data, we've provided it to you, otherwise, remember to use your radiation sensor in your datapad.
			string_id message = new string_id (c_stringFile, "s_5a1fb6b3");
			removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Our spies have netted us another camp.  But you'll have to act quickly.  They look like they're ready to move.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Our spies have netted us another camp.  But you'll have to act quickly.  They look like they're ready to move.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm sorry - I can't help you right now.
	if (branchId == 23 && response == "s_45d6d31e")
	{
		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			//-- NPC: All right -- if that is your wish.  You are always welcome here.
			string_id message = new string_id (c_stringFile, "s_253d75eb");
			removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Our spies have netted us another camp.  But you'll have to act quickly.  They look like they're ready to move.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: All of the reports coming in are promising -- we definitely have them on the run now.  I think we're getting to their more elite troops - please be careful.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm ready.
	if (branchId == 24 && response == "s_1adbadc4")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			doAnimationAction (self, "bow2");

			doAnimationAction (player, "bow2");

			fs_quests_sad2_conv_action_grantTask (player, self);

			//-- NPC: Please come back when you've eliminated them - and be careful.  If we have waypoint data, we've provided it to you, otherwise, remember to use your radiation sensor in your datapad.
			string_id message = new string_id (c_stringFile, "s_5a1fb6b3");
			removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'All of the reports coming in are promising -- we definitely have them on the run now.  I think we're getting to their more elite troops - please be careful.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: All of the reports coming in are promising -- we definitely have them on the run now.  I think we're getting to their more elite troops - please be careful.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm sorry - I can't help you right now.
	if (branchId == 24 && response == "s_45d6d31e")
	{
		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			//-- NPC: All right -- if that is your wish.  You are always welcome here.
			string_id message = new string_id (c_stringFile, "s_253d75eb");
			removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'All of the reports coming in are promising -- we definitely have them on the run now.  I think we're getting to their more elite troops - please be careful.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: All right, we're getting somewhere, finally.  Reports are coming in that a high-ranking officer of the Shadow is holed up nearby.  Take him out, now.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm ready.
	if (branchId == 25 && response == "s_1adbadc4")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			doAnimationAction (self, "bow2");

			doAnimationAction (player, "bow2");

			fs_quests_sad2_conv_action_grantTask (player, self);

			//-- NPC: Please come back when you've eliminated them - and be careful.  If we have waypoint data, we've provided it to you, otherwise, remember to use your radiation sensor in your datapad.
			string_id message = new string_id (c_stringFile, "s_5a1fb6b3");
			removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'All right, we're getting somewhere, finally.  Reports are coming in that a high-ranking officer of the Shadow is holed up nearby.  Take him out, now.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: All right, we're getting somewhere, finally.  Reports are coming in that a high-ranking officer of the Shadow is holed up nearby.  Take him out, now.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm sorry - I can't help you right now.
	if (branchId == 25 && response == "s_45d6d31e")
	{
		//-- [NOTE] 
		if (fs_quests_sad2_conv_condition__defaultCondition (player, self))
		{
			//-- NPC: All right -- if that is your wish.  You are always welcome here.
			string_id message = new string_id (c_stringFile, "s_253d75eb");
			removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'All right, we're getting somewhere, finally.  Reports are coming in that a high-ranking officer of the Shadow is holed up nearby.  Take him out, now.' were false.");

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	removeObjVar (player, "conversation.fs_quests_sad2_conv.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

