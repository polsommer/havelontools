// ======================================================================
//
// quest_u10_bossk_henchman.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/quest_u10_bossk_henchman";

// ======================================================================
// Script Conditions
// ======================================================================

boolean quest_u10_bossk_henchman_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean quest_u10_bossk_henchman_condition_quest_u10_03_02_active (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "quest_u10_03", "quest_u10_03_02");
}

// ----------------------------------------------------------------------

boolean quest_u10_bossk_henchman_condition_quest_u10_03_04_active (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "quest_u10_03", "quest_u10_03_04");
}

// ----------------------------------------------------------------------

boolean quest_u10_bossk_henchman_condition_quest_u10_03_complete (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "quest_u10_03");
}

// ----------------------------------------------------------------------

boolean quest_u10_bossk_henchman_condition_quest_u10_03_01_active (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "quest_u10_03", "quest_u10_03_01");
}

// ----------------------------------------------------------------------

boolean quest_u10_bossk_henchman_condition_quest_u10_03_05_active (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "quest_u10_03", "quest_u10_03_05");
}

// ----------------------------------------------------------------------

boolean quest_u10_bossk_henchman_condition_quest_u10_complete_deleted_u16 (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "quest_u10_03") 
	&& !groundquests.isQuestActiveOrComplete(player, "quest_u16_nym_themepark_pointer_01")
	&& !groundquests.isQuestActiveOrComplete(player, "quest_u16_nym_themepark_pointer_02");
}

// ======================================================================
// Script Actions
// ======================================================================

void quest_u10_bossk_henchman_action_quest_u10_03_01_signal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "quest_u10_03_01");
}

// ----------------------------------------------------------------------

void quest_u10_bossk_henchman_action_attack (obj_id player, obj_id npc)
{
	setInvulnerable(npc, false);
	startCombat(npc, player);
	
	clearCondition (npc, CONDITION_CONVERSABLE);
	if ( hasScript(npc, "conversation.quest_u10_bossk_henchman") )
	{
		detachScript (npc, "conversation.quest_u10_bossk_henchman");
	}
	
	return;
}

// ----------------------------------------------------------------------

void quest_u10_bossk_henchman_action_grant_u16_quest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "u16_nym_themepark_pointer_02"); 
}

// ----------------------------------------------------------------------

void quest_u10_bossk_henchman_action_quest_u10_03_05_signal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "quest_u10_03_05");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int quest_u10_bossk_henchman_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, yes. You're back. Bravo. Well done and all that. I suppose I should thank you...I might actually be able to leave now. So...thank you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was promised a share of the bounty.
	if (response == "s_10")
	{
		//-- [NOTE] 
		if (quest_u10_bossk_henchman_condition__defaultCondition (player, npc))
		{
			quest_u10_bossk_henchman_action_attack (player, npc);

			//-- NPC: Oh, that's right. Bossk left specific instructions on that. Something about you needing to DIE!
			string_id message = new string_id (c_stringFile, "s_11");
			utils.removeScriptVar (player, "conversation.quest_u10_bossk_henchman.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.quest_u10_bossk_henchman");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	
	if ( !hasScript(self, "theme_park.corellia.content.quest_u10_bossk_henchman") )
	{
		attachScript(self, "theme_park.corellia.content.quest_u10_bossk_henchman");
	}
	
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.quest_u10_bossk_henchman");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (quest_u10_bossk_henchman_condition_quest_u10_complete_deleted_u16 (player, npc))
	{
		quest_u10_bossk_henchman_action_grant_u16_quest (player, npc);

		//-- NPC: Look, we're done. We have no more business together. If it will get you away from me, I'll let you know if I hear of something else you can do in the area. But I have nothing for now.
		string_id message = new string_id (c_stringFile, "s_16");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (quest_u10_bossk_henchman_condition_quest_u10_03_complete (player, npc))
	{
		//-- NPC: We're done. We have no more business together. If it will get you away from me, I'll let you know if I hear of something else you can do in the area. But I have nothing for now.
		string_id message = new string_id (c_stringFile, "s_7");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (quest_u10_bossk_henchman_condition_quest_u10_03_05_active (player, npc))
	{
		quest_u10_bossk_henchman_action_quest_u10_03_05_signal (player, npc);

		//-- NPC: Okay, okay. You win. Don't hurt me any more. I can't believe I let Bossk talk me into attacking you so he could keep the entire bounty. What a ridiculous idea. Here, take a weapon. I'm clearly not qualified to use any of them. And take the paltry salary that Bossk sends to me. It's not much, but I hope you choke on it.
		string_id message = new string_id (c_stringFile, "s_12");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (quest_u10_bossk_henchman_condition_quest_u10_03_04_active (player, npc))
	{
		//-- NPC: Yes, yes. You're back. Bravo. Well done and all that. I suppose I should thank you...I might actually be able to leave now. So...thank you.
		string_id message = new string_id (c_stringFile, "s_30");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I was promised a share of the bounty.
		boolean hasResponse0 = false;
		if (quest_u10_bossk_henchman_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_10");

			utils.setScriptVar (player, "conversation.quest_u10_bossk_henchman.branchId", 4);

			npcStartConversation (player, npc, "quest_u10_bossk_henchman", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (quest_u10_bossk_henchman_condition_quest_u10_03_02_active (player, npc))
	{
		//-- NPC: Go on. If you don't act quickly, the intel I've provided will be useless.
		string_id message = new string_id (c_stringFile, "s_37");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (quest_u10_bossk_henchman_condition_quest_u10_03_01_active (player, npc))
	{
		quest_u10_bossk_henchman_action_quest_u10_03_01_signal (player, npc);

		//-- NPC: You're here, finally. Bossk let me know that you were on your way. I have the information you'll need for each of the bounties. I'll upload it to your journal. Now, get to work. When you finish with these bounties, I can finally get off of this forsaken planet.
		string_id message = new string_id (c_stringFile, "s_15");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (quest_u10_bossk_henchman_condition__defaultCondition (player, npc))
	{
		//-- NPC: I wonder why I haven't heard from Bossk in so long. He should have handled these bounties by now.
		string_id message = new string_id (c_stringFile, "s_29");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "quest_u10_bossk_henchman")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.quest_u10_bossk_henchman.branchId");

	if (branchId == 4 && quest_u10_bossk_henchman_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.quest_u10_bossk_henchman.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

