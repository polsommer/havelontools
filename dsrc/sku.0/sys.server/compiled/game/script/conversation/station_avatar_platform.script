// ======================================================================
//
// station_avatar_platform.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.30 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.space_combat;
include library.space_content;
include library.space_crafting;
include library.space_dungeon;
include library.space_flags;
include library.space_quest;
include library.space_transition;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/station_avatar_platform";

// ======================================================================
// Script Conditions
// ======================================================================

boolean station_avatar_platform_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean station_avatar_platform_condition_hasAuthorization (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "ep3_trando_hssissk_zssik_10")||
	groundquests.isQuestActive(player, "ep3_imp_cmd_richards");
}

// ----------------------------------------------------------------------

boolean station_avatar_platform_condition_returnToAvatar (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "ep3_avatar_return");
}

// ----------------------------------------------------------------------

boolean station_avatar_platform_condition_isTooFar (obj_id player, obj_id npc)
{
	space_combat.playCombatTauntSound( player );
	obj_id containingShip = space_transition.getContainingShip(player);
	return ( getDistance( npc, containingShip ) > space_transition.STATION_COMM_MAX_DISTANCE );
}

// ======================================================================
// Script Actions
// ======================================================================

void station_avatar_platform_action_launchAttack (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "destroy_surpriseattack", "ep3_avatar_defensive_attack" );
}

// ----------------------------------------------------------------------

void station_avatar_platform_action_land (obj_id player, obj_id npc)
{
	String planet = getCurrentSceneName();
	space_dungeon.sendGroupToDungeonWithoutTicket(player, "avatar_platform", planet, planet, "quest_type", npc);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int station_avatar_platform_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: ...breaking up...station badly damaged...warning...high levels of...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I just need to land. Can you read me?
	if (response == "s_82")
	{
		//-- [NOTE] 
		if (station_avatar_platform_condition__defaultCondition (player, npc))
		{
			station_avatar_platform_action_land (player, npc);

			//-- NPC: ...service tunnel three...platform one is...resistance still holding sections...
			string_id message = new string_id (c_stringFile, "s_85");
			utils.removeScriptVar (player, "conversation.station_avatar_platform.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I think I will keep flying. Good luck.
	if (response == "s_83")
	{
		//-- [NOTE] 
		if (station_avatar_platform_condition__defaultCondition (player, npc))
		{
			//-- NPC: ...section eight...watch for...
			string_id message = new string_id (c_stringFile, "s_84");
			utils.removeScriptVar (player, "conversation.station_avatar_platform.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_avatar_platform_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Pilot, can you read me? We are under attack. The resistance has managed to get through our security net and have infiltrated the station. Heavy fighting is taking place throughout the station. We can use any help that you can give to us!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready to help deal with the problem.
	if (response == "s_64")
	{
		//-- [NOTE] 
		if (station_avatar_platform_condition__defaultCondition (player, npc))
		{
			station_avatar_platform_action_land (player, npc);

			//-- NPC: Your ship's authorization codes check out. Stand by to land on alpha pad. Good luck and watch your back. Things are nasty down here.
			string_id message = new string_id (c_stringFile, "s_66");
			utils.removeScriptVar (player, "conversation.station_avatar_platform.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds rough. Good luck with that.
	if (response == "s_68")
	{
		//-- [NOTE] 
		if (station_avatar_platform_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lock down sections eight through twelve...send in the...blast...end communication.
			string_id message = new string_id (c_stringFile, "s_70");
			utils.removeScriptVar (player, "conversation.station_avatar_platform.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_avatar_platform_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You are not authorized to be in this area. You are hearby ordered to exit the area or be face immediate termination.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ok, I am leaving.
	if (response == "s_74")
	{
		//-- [NOTE] 
		if (station_avatar_platform_condition__defaultCondition (player, npc))
		{
			//-- NPC: You are smarter than you look. Good decision.
			string_id message = new string_id (c_stringFile, "s_76");
			utils.removeScriptVar (player, "conversation.station_avatar_platform.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: And what if I don't leave?
	if (response == "s_78")
	{
		//-- [NOTE] 
		if (station_avatar_platform_condition__defaultCondition (player, npc))
		{
			station_avatar_platform_action_launchAttack (player, npc);

			//-- NPC: You have failed to comply with a direct order. Scrambling fighters for an intercept with trespassing vessel. Terminating communcation with unauthorized vessel.
			string_id message = new string_id (c_stringFile, "s_80");
			utils.removeScriptVar (player, "conversation.station_avatar_platform.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	setCondition (self, CONDITION_CONVERSABLE);	
	setObjVar(self, "convo.appearance", "object/mobile/space_comm_station_tatooine.iff" );
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setObjVar(self, "convo.appearance", "object/mobile/space_comm_station_tatooine.iff" );
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.station_avatar_platform");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (station_avatar_platform_condition_isTooFar (player, npc))
	{
		//-- NPC: Hey, what do you expect me to do for you when you're so far away? Come closer before you bother me.
		string_id message = new string_id (c_stringFile, "s_60");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_avatar_platform_condition_returnToAvatar (player, npc))
	{
		//-- NPC: ...breaking up...station badly damaged...warning...high levels of...
		string_id message = new string_id (c_stringFile, "s_81");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I just need to land. Can you read me?
		boolean hasResponse0 = false;
		if (station_avatar_platform_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I think I will keep flying. Good luck.
		boolean hasResponse1 = false;
		if (station_avatar_platform_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_82");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_83");

			utils.setScriptVar (player, "conversation.station_avatar_platform.branchId", 2);

			npcStartConversation (player, npc, "station_avatar_platform", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_avatar_platform_condition_hasAuthorization (player, npc))
	{
		//-- NPC: Pilot, can you read me? We are under attack. The resistance has managed to get through our security net and have infiltrated the station. Heavy fighting is taking place throughout the station. We can use any help that you can give to us!
		string_id message = new string_id (c_stringFile, "s_62");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am ready to help deal with the problem.
		boolean hasResponse0 = false;
		if (station_avatar_platform_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Sounds rough. Good luck with that.
		boolean hasResponse1 = false;
		if (station_avatar_platform_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_64");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_68");

			utils.setScriptVar (player, "conversation.station_avatar_platform.branchId", 5);

			npcStartConversation (player, npc, "station_avatar_platform", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_avatar_platform_condition__defaultCondition (player, npc))
	{
		//-- NPC: You are not authorized to be in this area. You are hearby ordered to exit the area or be face immediate termination.
		string_id message = new string_id (c_stringFile, "s_72");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Ok, I am leaving.
		boolean hasResponse0 = false;
		if (station_avatar_platform_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: And what if I don't leave?
		boolean hasResponse1 = false;
		if (station_avatar_platform_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_74");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_78");

			utils.setScriptVar (player, "conversation.station_avatar_platform.branchId", 8);

			npcStartConversation (player, npc, "station_avatar_platform", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "station_avatar_platform")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.station_avatar_platform.branchId");

	if (branchId == 2 && station_avatar_platform_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && station_avatar_platform_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && station_avatar_platform_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.station_avatar_platform.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

