// ======================================================================
//
// corellia_rebel_trainer_1.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.features;
include library.skill;
include library.space_flags;
include library.space_quest;
include library.space_skill;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/corellia_rebel_trainer_1";

// ======================================================================
// Script Conditions
// ======================================================================

boolean corellia_rebel_trainer_1_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_isNotRebel (obj_id player, obj_id npc)
{
	return !factions.isRebel(player);
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasNoviceSkillBox (obj_id player, obj_id npc)
{
	if ( hasSkill( player, "pilot_rebel_navy_novice" ))
	{
	
		//this is a temporary conversion for beta players to the new tracking system:
		string currentTrack = space_flags.getSpaceTrack( player );
		if ( currentTrack == null )
			space_flags.setSpaceTrack( player, space_flags.REBEL_CORELLIA);
			
		return true;	
	}
	else
		return false;
	
	
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasRebelQuest (obj_id player, obj_id npc)
{
	return ( space_quest.hasQuest( player ) && corellia_rebel_trainer_1_condition_hasNoviceSkillBox(player, npc ) );
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_isImperialPilot (obj_id player, obj_id npc)
{
	int playerFactionID = pvpGetAlignedFaction(player);
	if ( playerFactionID == ##"imperial" )
		return true;
	else if ( !space_flags.isRebelPilot(player) && corellia_rebel_trainer_1_condition_hasNegativeFactionStanding( player, npc ) )
		return true;	
	else
		return ( hasSkill( player, "pilot_imperial_navy_novice" ));
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_isGenderMale (obj_id player, obj_id npc)
{
	return ( getGender( player ) == GENDER_MALE );
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasCompletedQuestOne (obj_id player, obj_id npc)
{
	return ( space_quest.hasCompletedQuest( player, "destroy_surpriseattack", "corellia_rebel_1") );
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasCompletedQuestTwo (obj_id player, obj_id npc)
{
	return ( space_quest.hasCompletedQuest( player, "destroy", "corellia_rebel_2") );
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasCompletedQuestThree (obj_id player, obj_id npc)
{
	return ( space_quest.hasCompletedQuest( player, "escort", "corellia_rebel_3") );
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasCompletedQuestFour (obj_id player, obj_id npc)
{
	return ( space_quest.hasCompletedQuest( player, "assassinate", "corellia_rebel_4") );
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasFailedQuestOne (obj_id player, obj_id npc)
{
	return ( space_quest.hasFailedQuest( player, "destroy_surpriseattack", "corellia_rebel_1" ) ||
			 space_quest.hasAbortedQuest( player, "destroy_surpriseattack", "corellia_rebel_1" ) ||
			 space_quest.hasFailedQuest( player, "patrol", "corellia_rebel_1") ||
			 space_quest.hasAbortedQuest( player, "patrol", "corellia_rebel_1"));
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_isReadyForFirstTraining (obj_id player, obj_id npc)
{
	//You have completed all 4 missions is handled by previous convo conditions
	
	if ( 	hasSkill( player, "pilot_rebel_navy_starships_01") 	|| 
			hasSkill( player, "pilot_rebel_navy_procedures_01") 	||
			hasSkill( player, "pilot_rebel_navy_weapons_01") 		||
			hasSkill( player, "pilot_rebel_navy_droid_01" ) 	)
		return false;//You have already received your initial skill (or more!)
	else	
		return true;
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_isReadyForMoreTraining (obj_id player, obj_id npc)
{
	//You have completed all 4 missions - checked via previous convo options
	//but don't have all the tier-1 skills yet, - //checked via previous convo options
	
	//if you have enough xp for this skill, then you have enough for
	//any other skill at this tier:
	return ( space_quest.isPlayerQualifiedForSkill( player, "pilot_rebel_navy_starships_01") );
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasAllTierOneSkills (obj_id player, obj_id npc)
{
	/*
	if (!hasSkill( player, "pilot_rebel_navy_starships_01") )
		return false;
	else if (!hasSkill( player, "pilot_rebel_navy_procedures_01") )
		return false;
	else if (!hasSkill( player, "pilot_rebel_navy_weapons_01") )
		return false;
	else if (!hasSkill( player, "pilot_rebel_navy_droid_01" ) )
		return false;
	else	
		return true;
	*/
	
	return space_flags.hasCompletedTierOne(player);
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasFailedQuestTwo (obj_id player, obj_id npc)
{
	return ( space_quest.hasFailedQuest( player, "destroy", "corellia_rebel_2" ) ||
			 space_quest.hasAbortedQuest(player, "destroy", "corellia_rebel_2" ));
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_beenRewardedForQuestOne (obj_id player, obj_id npc)
{
	//this returns true if you have completed this quest but have not been rewarded for it
	return ( space_quest.hasReceivedReward( player, "destroy_surpriseattack", "corellia_rebel_1"));
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_beenRewardedForQuestTwo (obj_id player, obj_id npc)
{
	//this returns true if you have completed this quest but have not been rewarded for it
	return (space_quest.hasReceivedReward( player, "destroy", "corellia_rebel_2"));
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_beenRewardedForQuestThree (obj_id player, obj_id npc)
{
	//this returns true if you have completed this quest but have not been rewarded for it
	return (space_quest.hasReceivedReward( player, "escort", "corellia_rebel_3"));
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_beenRewardedForQuestFour (obj_id player, obj_id npc)
{
	//this returns true if you have completed this quest but have not been rewarded for it
	return (space_quest.hasReceivedReward( player, "assassinate", "corellia_rebel_4"));
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasFailedQuestThree (obj_id player, obj_id npc)
{
	return ( space_quest.hasFailedQuest( player, "escort", "corellia_rebel_3" ) ||
			 space_quest.hasAbortedQuest( player, "escort", "corellia_rebel_3") ||
			 space_quest.hasFailedQuest( player, "patrol", "corellia_rebel_3") ||
			 space_quest.hasAbortedQuest( player, "patrol", "corellia_rebel_3"));
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasFailedQuestFour (obj_id player, obj_id npc)
{
	return ( space_quest.hasFailedQuest( player, "assassinate", "corellia_rebel_4" ) ||
			 space_quest.hasAbortedQuest( player, "assassinate", "corellia_rebel_4"));
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_isPrivateerPilot (obj_id player, obj_id npc)
{
	return hasSkill( player, "pilot_neutral_novice" );
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasFailedQuestOne_PATROL (obj_id player, obj_id npc)
{
	return ( space_quest.hasFailedQuest( player, "patrol", "corellia_rebel_1" ) ||
			 space_quest.hasAbortedQuest( player, "patrol", "corellia_rebel_1" ));
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasSkillSTARSHIPS_01 (obj_id player, obj_id npc)
{
	return ( hasSkill( player, "pilot_rebel_navy_starships_01" ) );
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasSkillWEAPONS_01 (obj_id player, obj_id npc)
{
	return ( hasSkill( player, "pilot_rebel_navy_weapons_01" ) );
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasSkillPROCEDURES_01 (obj_id player, obj_id npc)
{
	return ( hasSkill( player, "pilot_rebel_navy_procedures_01" ) );
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_readyForSecondSkill (obj_id player, obj_id npc)
{
	if ( space_quest.hasCompletedQuest( player, "destroy", "naboo_rebel_4" ) &&
		 !hasSkill( player, "pilot_rebel_navy_starships_01" ) &&
		 !hasSkill( player, "pilot_rebel_navy_weapons_01" ) &&
		 !hasSkill( player, "pilot_rebel_navy_procedures_01" ) &&
		 !hasSkill( player, "pilot_rebel_navy_droid_01" ) )
		 return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasSpaceShip (obj_id player, obj_id npc)
{
	return (!space_quest.canGrantNewbieShip(player));
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasSpaceExpansion (obj_id player, obj_id npc)
{
	return ( features.isSpaceEdition( player ) );
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_has_GRADUATED_goto_LOK (obj_id player, obj_id npc)
{
	// return (hasObjVar(player, "viopaPilot"));
	
	return space_flags.hasSpaceFlag(player, "viopaPilot");
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasVeryFirstQuest (obj_id player, obj_id npc)
{
	//You've got your assignment, and the control device for your ship in your datapad.  Go to the Starport and access the terminal to launch into space.

	if (!space_quest.hasCertifiedShip(player))
		return false; 
	else	
		return ( space_quest.hasQuest( player, "patrol", "corellia_rebel_1" ) ||
			  	 space_quest.hasQuest( player, "destroy_surpriseattack", "corellia_rebel_1" ) );
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_canFlyNonTrackDuty (obj_id player, obj_id npc)
{
	if((hasSkill( player, "pilot_rebel_navy_starships_01") || 
	    hasSkill( player, "pilot_rebel_navy_procedures_01") ||
	    hasSkill( player, "pilot_rebel_navy_weapons_01") ||
	    hasSkill( player, "pilot_rebel_navy_droid_01" )) && !space_quest.hasQuest(player))
	    return true;
	    
	return false;
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_onMyTrack (obj_id player, obj_id npc)
{
	return space_flags.isSpaceTrack(player, space_flags.REBEL_CORELLIA);
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_isWookieeOrIthorian (obj_id player, obj_id npc)
{
	int plrSpecies = getSpecies( player );
	return ( plrSpecies == SPECIES_WOOKIEE || plrSpecies == SPECIES_ITHORIAN );
}

// ----------------------------------------------------------------------

boolean corellia_rebel_trainer_1_condition_hasNegativeFactionStanding (obj_id player, obj_id npc)
{
	return ( factions.getFactionStanding( player, factions.FACTION_REBEL ) < 0.0f );
}

// ======================================================================
// Script Actions
// ======================================================================

void corellia_rebel_trainer_1_action_grantNoviceSkillBox (obj_id player, obj_id npc)
{
	space_flags.setSpaceTrack( player, space_flags.REBEL_CORELLIA );
	skill.noisyGrantSkill( player, "pilot_rebel_navy_novice" );

	//I'm not sure, but I don't think we need this any more...
	//setObjVar( player, "rebelAllianceMember", true );
	
	// We don't...
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_grantQuestOne (obj_id player, obj_id npc)
{
	space_quest.grantQuest ( player, "patrol", "corellia_rebel_1");
	space_flags.restoreClientPath( player );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_grantQuestTwo (obj_id player, obj_id npc)
{
	space_quest.grantQuest ( player, "destroy", "corellia_rebel_2");
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_grantQuestThree (obj_id player, obj_id npc)
{
	space_quest.grantQuest ( player, "patrol", "corellia_rebel_3");
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_grantQuestFour (obj_id player, obj_id npc)
{
	space_quest.grantQuest ( player, "assassinate", "corellia_rebel_4");
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_anim_greetSmuggler (obj_id player, obj_id npc)
{
	doAnimationAction( npc, "point_accusingly" );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_anim_greetImperial (obj_id player, obj_id npc)
{
	doAnimationAction( npc, "wave_finger_warning" );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_anim_shrugHands (obj_id player, obj_id npc)
{
	doAnimationAction( npc, "shrug_hands" );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_anim_standPlacate (obj_id player, obj_id npc)
{
	doAnimationAction( npc, "standing_placate" );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_anim_bellyLaugh (obj_id player, obj_id npc)
{
	doAnimationAction( npc, "belly_laugh" );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_anim_goodBye (obj_id player, obj_id npc)
{
	doAnimationAction( npc, "goodbye" );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_anim_threaten (obj_id player, obj_id npc)
{
	doAnimationAction( npc, "threaten");
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_anim_nodHead (obj_id player, obj_id npc)
{
	doAnimationAction( npc, "nod_head_multiple" );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_anim_rubChin (obj_id player, obj_id npc)
{
	doAnimationAction( npc, "rub_chin_thoughtful" );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_anim_implore (obj_id player, obj_id npc)
{
	doAnimationAction( npc, "implore" );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_anim_pointUp (obj_id player, obj_id npc)
{
	doAnimationAction( npc, "point_up" );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_giveRewardQuest1 (obj_id player, obj_id npc)
{
	if (space_quest.hasReceivedReward( player, "destroy_surpriseattack", "corellia_rebel_1" ))
		return;
		
	// Animation.
	faceTo( npc, player );
	
	// Give credits.
	factions.addFactionStanding( player, factions.FACTION_REBEL, 25.0f );
	space_quest.giveReward( player, "destroy_surpriseattack", "corellia_rebel_1", 100 );
	
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_giveRewardQuest2 (obj_id player, obj_id npc)
{
	if (space_quest.hasReceivedReward( player, "destroy", "corellia_rebel_2" ) )
		return;
		
	// Animation.
	faceTo( npc, player );
	
	// Give credits.
	factions.addFactionStanding( player, factions.FACTION_REBEL, 50.0f );
	space_quest.giveReward( player, "destroy", "corellia_rebel_2", 200 );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_giveRewardQuest3 (obj_id player, obj_id npc)
{
	if (space_quest.hasReceivedReward( player, "escort", "corellia_rebel_3" ))
		return;
		
	// Animation.
	faceTo( npc, player );
	
	// Give credits.
	factions.addFactionStanding( player, factions.FACTION_REBEL, 50.0f );
	if (!corellia_rebel_trainer_1_condition_isWookieeOrIthorian( player, npc ) )
		space_quest.giveReward( player, "escort", "corellia_rebel_3", 500, "object/tangible/wearables/bodysuit/rebel_bodysuit_s14.iff" );
	else if ( getSpecies( player ) != SPECIES_ITHORIAN )
		space_quest.giveReward( player, "escort", "corellia_rebel_3", 500, "object/tangible/wearables/bandolier/multipocket_bandolier.iff" );
	else
		space_quest.giveReward( player, "escort", "corellia_rebel_3", 500, "object/tangible/wearables/bandolier/ith_multipocket_bandolier.iff" );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_giveRewardQuest4 (obj_id player, obj_id npc)
{
	if (space_quest.hasReceivedReward( player, "assassinate", "corellia_rebel_4" ))
		return;
		
	// Animation.
	faceTo( npc, player );
	
	// Give credits.
	factions.addFactionStanding( player, factions.FACTION_REBEL, 75.0f );
	space_quest.giveReward( player, "assassinate", "corellia_rebel_4", 1000, "object/tangible/ship/components/armor/arm_mission_reward_rebel_incom_ultralight.iff" );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_grantSkillSTARSHIPS_01 (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	doAnimationAction( npc, "salute1" );
	
	skill.noisyGrantSkill( player, "pilot_rebel_navy_starships_01" );

}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_grantDUTY_Destroy_01 (obj_id player, obj_id npc)
{
	space_quest.grantQuest ( player, "destroy_duty", "corellia_rebel_6");
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_grantDUTY_Escort_01 (obj_id player, obj_id npc)
{
	space_quest.grantQuest ( player, "escort_duty", "corellia_rebel_7");
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_grantSpaceShip (obj_id player, obj_id npc)
{
	space_quest.grantNewbieShip( player, "rebel");
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_set_GRADUATED_goto_LOK (obj_id player, obj_id npc)
{
	//JC, I don't think we need this any more...
	//setObjVar( player, "viopaPilot", true );
	
	space_flags.setSpaceFlag(player, "viopaPilot", true);
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_purchaseDroidSkill01 (obj_id player, obj_id npc)
{

	skill.purchaseSkill( player, "pilot_rebel_navy_droid_01" );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_purchaseWeaponSkill01 (obj_id player, obj_id npc)
{
	skill.purchaseSkill( player, "pilot_rebel_navy_weapons_01" );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_purchaseStarshipSkill01 (obj_id player, obj_id npc)
{
	skill.purchaseSkill( player, "pilot_rebel_navy_starships_01" );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_purchaseProcedureSkill01 (obj_id player, obj_id npc)
{
	skill.purchaseSkill( player, "pilot_rebel_navy_procedures_01" );
}

// ----------------------------------------------------------------------

void corellia_rebel_trainer_1_action_eraseClientPath (obj_id player, obj_id npc)
{
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int corellia_rebel_trainer_1_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You've got your assignment, and the control device for your ship in your datapad.  Go to the Starport and access the terminal to launch into space.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I complete my assignment?
	if (response == "s_7d5c71fb")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: Start by going to the starport. Leave here and head towards downtown. Take a left when you get out of the slums and you'll run right into the starport. When you get there, go inside and look for a 'starship terminal.' Use this terminal to launch your ship.
			string_id message = new string_id (c_stringFile, "s_efc5edce");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where should I go now?
	if (response == "s_dda9e202")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: The starport. It's just a little ways from here. Go back the way you came, head towards the center of town. Take a left when you get out of the slums and you'll head right into the starport.
			string_id message = new string_id (c_stringFile, "s_c7f0d385");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: My starship? In a datapad?
	if (response == "s_cb506bf8")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: The control device holds the command codes for your starter ship. The Alliance has a handful of these banged-up Z95's hidden at various starports. When you go to the starport down the street you can use a 'starship terminal' to manage your ship components and launch into space.
			string_id message = new string_id (c_stringFile, "s_942f0b27");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get back here?
	if (response == "s_4b0e9ff2")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Your ship navigation system will automatically plot a waypoint when you launch so that you can find your way back home. After your mission is... a success (I hope), fly back to the 'launch waypoint.' Communicate with the space station at this point, and tell the commander you want to land at Tyrena starport.
			string_id message = new string_id (c_stringFile, "s_14fdabce");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Start by going to the starport. Leave here and head towards downtown. Take a left when you get out of the slums and you'll run right into the starport. When you get there, go inside and look for a 'starship terminal.' Use this terminal to launch your ship.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I complete my assignment?
	if (response == "s_7d5c71fb")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: Start by going to the starport. Leave here and head towards downtown. Take a left when you get out of the slums and you'll run right into the starport. When you get there, go inside and look for a 'starship terminal.' Use this terminal to launch your ship.
			string_id message = new string_id (c_stringFile, "s_efc5edce");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where should I go now?
	if (response == "s_dda9e202")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: The starport. It's just a little ways from here. Go back the way you came, head towards the center of town. Take a left when you get out of the slums and you'll head right into the starport.
			string_id message = new string_id (c_stringFile, "s_c7f0d385");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: My starship? In a datapad?
	if (response == "s_cb506bf8")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: The control device holds the command codes for your starter ship. The Alliance has a handful of these banged-up Z95's hidden at various starports. When you go to the starport down the street you can use a 'starship terminal' to manage your ship components and launch into space.
			string_id message = new string_id (c_stringFile, "s_942f0b27");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get back here?
	if (response == "s_4b0e9ff2")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Your ship navigation system will automatically plot a waypoint when you launch so that you can find your way back home. After your mission is... a success (I hope), fly back to the 'launch waypoint.' Communicate with the space station at this point, and tell the commander you want to land at Tyrena starport.
			string_id message = new string_id (c_stringFile, "s_14fdabce");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The starport. It's just a little ways from here. Go back the way you came, head towards the center of town. Take a left when you get out of the slums and you'll head right into the starport.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I complete my assignment?
	if (response == "s_7d5c71fb")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: Start by going to the starport. Leave here and head towards downtown. Take a left when you get out of the slums and you'll run right into the starport. When you get there, go inside and look for a 'starship terminal.' Use this terminal to launch your ship.
			string_id message = new string_id (c_stringFile, "s_efc5edce");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where should I go now?
	if (response == "s_dda9e202")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: The starport. It's just a little ways from here. Go back the way you came, head towards the center of town. Take a left when you get out of the slums and you'll head right into the starport.
			string_id message = new string_id (c_stringFile, "s_c7f0d385");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: My starship? In a datapad?
	if (response == "s_cb506bf8")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: The control device holds the command codes for your starter ship. The Alliance has a handful of these banged-up Z95's hidden at various starports. When you go to the starport down the street you can use a 'starship terminal' to manage your ship components and launch into space.
			string_id message = new string_id (c_stringFile, "s_942f0b27");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get back here?
	if (response == "s_4b0e9ff2")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Your ship navigation system will automatically plot a waypoint when you launch so that you can find your way back home. After your mission is... a success (I hope), fly back to the 'launch waypoint.' Communicate with the space station at this point, and tell the commander you want to land at Tyrena starport.
			string_id message = new string_id (c_stringFile, "s_14fdabce");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The control device holds the command codes for your starter ship. The Alliance has a handful of these banged-up Z95's hidden at various starports. When you go to the starport down the street you can use a 'starship terminal' to manage your ship components and launch into space.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I complete my assignment?
	if (response == "s_7d5c71fb")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: Start by going to the starport. Leave here and head towards downtown. Take a left when you get out of the slums and you'll run right into the starport. When you get there, go inside and look for a 'starship terminal.' Use this terminal to launch your ship.
			string_id message = new string_id (c_stringFile, "s_efc5edce");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where should I go now?
	if (response == "s_dda9e202")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: The starport. It's just a little ways from here. Go back the way you came, head towards the center of town. Take a left when you get out of the slums and you'll head right into the starport.
			string_id message = new string_id (c_stringFile, "s_c7f0d385");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: My starship? In a datapad?
	if (response == "s_cb506bf8")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: The control device holds the command codes for your starter ship. The Alliance has a handful of these banged-up Z95's hidden at various starports. When you go to the starport down the street you can use a 'starship terminal' to manage your ship components and launch into space.
			string_id message = new string_id (c_stringFile, "s_942f0b27");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get back here?
	if (response == "s_4b0e9ff2")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Your ship navigation system will automatically plot a waypoint when you launch so that you can find your way back home. After your mission is... a success (I hope), fly back to the 'launch waypoint.' Communicate with the space station at this point, and tell the commander you want to land at Tyrena starport.
			string_id message = new string_id (c_stringFile, "s_14fdabce");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Your ship navigation system will automatically plot a waypoint when you launch so that you can find your way back home. After your mission is... a success (I hope), fly back to the 'launch waypoint.' Communicate with the space station at this point, and tell the commander you want to land at Tyrena starport.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I complete my assignment?
	if (response == "s_7d5c71fb")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: Start by going to the starport. Leave here and head towards downtown. Take a left when you get out of the slums and you'll run right into the starport. When you get there, go inside and look for a 'starship terminal.' Use this terminal to launch your ship.
			string_id message = new string_id (c_stringFile, "s_efc5edce");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where should I go now?
	if (response == "s_dda9e202")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: The starport. It's just a little ways from here. Go back the way you came, head towards the center of town. Take a left when you get out of the slums and you'll head right into the starport.
			string_id message = new string_id (c_stringFile, "s_c7f0d385");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: My starship? In a datapad?
	if (response == "s_cb506bf8")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: The control device holds the command codes for your starter ship. The Alliance has a handful of these banged-up Z95's hidden at various starports. When you go to the starport down the street you can use a 'starship terminal' to manage your ship components and launch into space.
			string_id message = new string_id (c_stringFile, "s_942f0b27");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get back here?
	if (response == "s_4b0e9ff2")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Your ship navigation system will automatically plot a waypoint when you launch so that you can find your way back home. After your mission is... a success (I hope), fly back to the 'launch waypoint.' Communicate with the space station at this point, and tell the commander you want to land at Tyrena starport.
			string_id message = new string_id (c_stringFile, "s_14fdabce");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I complete my assignment?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where should I go now?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My starship? In a datapad?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I get back here?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Alliance will have nothing to do with you bloodthirsty smugglers! Begone!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Fine!
	if (response == "s_3fa4f0ff")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "snap_finger2");

			//-- NPC: Fine!!
			string_id message = new string_id (c_stringFile, "s_6598c431");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a CorSec pilot!
	if (response == "s_34e352c7")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "hold_nose");

			//-- NPC: Oh sure, 'officially neutral' and all that, right?  Just going to let the Empire take over the whole galaxy?  Whatever.  I have no use for you fence-sitters!
			string_id message = new string_id (c_stringFile, "s_afcdcdf");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a RSF Pilot!
	if (response == "s_a42bf003")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Bah!  Lap-dogs for the Emperor.  You should be ashamed of yourself.
			string_id message = new string_id (c_stringFile, "s_5c9e583b");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] This is what the NPC says when he talks to a player who is not currently signed-up with any pilot profession.
	//-- NPC: Haven't I seen you before? I am Kreezo of the Rebel Alliance. Yes - yes, we have met before! Are you still interested in becoming a Rebel fighter pilot?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug)
	if (response == "s_26a260")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: So you are interested? Or... you aren't interested?
			string_id message = new string_id (c_stringFile, "s_85384000");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interested? Is there money in it?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: You're going to teach ME?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99dfe276");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0643db5");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to join the Rebellion!
	if (response == "s_866deb6e")
	{
		//-- [NOTE] 
		if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: Are you sure you want to sign up, honey? It's pretty rough up there.
			string_id message = new string_id (c_stringFile, "s_a2fa88c1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You're kidding, right?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Call me that again and you die!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d48ff4ca");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e6f57b04");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 41);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_shoulders");

			//-- NPC: Perfect thing for a strapping fella such as yourself! I'll be your trainer - and you'll be my... killer! How does that sound?
			string_id message = new string_id (c_stringFile, "s_d390e9dc");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can't wait!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sounds wrong for me.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c8fa77b8");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7daee3c9");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 58);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You don't know me, Kreezo.
	if (response == "s_f5e65db0")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			corellia_rebel_trainer_1_action_anim_standPlacate (player, npc);

			//-- NPC: Fine, fine. I'm not looking to fight you - I train pilots... to fight the Empire! What do you say? Are you willing to join the Rebel Alliance?
			string_id message = new string_id (c_stringFile, "s_3d8dd8ba");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: The Force has guided me to this... my destiny.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: The Alliance is not ready for me.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_24af7536");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4785a810");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 63);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			corellia_rebel_trainer_1_action_anim_nodHead (player, npc);

			//-- NPC: Oh, but I do! I do! I could never forget such a pretty face. Come on - let me slide you into the Alliance piloting ranks. You'll love it!
			string_id message = new string_id (c_stringFile, "s_4df7e8e8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Stare intently and silently)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: You're wasting my time.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will join the Alliance.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_70d92009");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1b11fff2");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_192");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 68);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So you are interested? Or... you aren't interested?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Interested? Is there money in it?
	if (response == "s_99dfe276")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_anim_bellyLaugh (player, npc);

			//-- NPC: Ha! Ha! You're funny! People don't get rich flying for the Alliance, okay? They do it because the Empire makes their lives miserable... So join up, already!
			string_id message = new string_id (c_stringFile, "s_12d04a63");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yeah, sure. Why not.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I really don't mind the Empire.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2bf47615");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bc874dd9");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're going to teach ME?
	if (response == "s_b0643db5")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Well... yeah! I am a very experienced starfighter pilot. I can teach you everything you need to know - provided that you agree to fly for the Rebel Alliance. How does that strike you?
			string_id message = new string_id (c_stringFile, "s_c65bb61c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds wizard. Let's go.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't want to die for the Rebels.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e096316d");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d74fc3aa");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 31);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_anim_threaten (player, npc);

			//-- NPC: You got some sort of problem with me, sister? I've been flying for years and years. What I teach you will keep you alive!
			string_id message = new string_id (c_stringFile, "s_62a0670");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Relax, flyboy. I'll join your little club.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thanks, but no thanks.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5a28f5e9");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4dd8aee0");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 36);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ha! Ha! You're funny! People don't get rich flying for the Alliance, okay? They do it because the Empire makes their lives miserable... So join up, already!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yeah, sure. Why not.
	if (response == "s_2bf47615")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			corellia_rebel_trainer_1_action_grantNoviceSkillBox (player, npc);

			//-- NPC: Finally. You are now part of the Alliance pilot training program.
			string_id message = new string_id (c_stringFile, "s_13b7333c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will need a starship.
			boolean hasResponse0 = false;
			if (!corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thanks.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a42932d7");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I really don't mind the Empire.
	if (response == "s_bc874dd9")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_anim_standPlacate (player, npc);

			//-- NPC: Oh... well, of course not! The Empire is just grand... wouldn't you say?
			string_id message = new string_id (c_stringFile, "s_a7c68d3f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes. Yes, I would say that.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Just kidding. I hate the Empire!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f587dd8b");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10338636");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Finally. You are now part of the Alliance pilot training program.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will need a starship.
	if (response == "s_a42932d7")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			corellia_rebel_trainer_1_action_grantSpaceShip (player, npc);

			//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies.
			string_id message = new string_id (c_stringFile, "s_c43ca4c2");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_fc27931b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_32")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: No problem. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_34");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_fc27931b")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: No problem. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_ef3cb7bd");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No problem. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No problem. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh... well, of course not! The Empire is just grand... wouldn't you say?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. Yes, I would say that.
	if (response == "s_f587dd8b")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_anim_goodBye (player, npc);

			//-- NPC: Great! Then, have a wonderful day!
			string_id message = new string_id (c_stringFile, "s_e53ac187");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just kidding. I hate the Empire!
	if (response == "s_10338636")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			corellia_rebel_trainer_1_action_grantNoviceSkillBox (player, npc);

			//-- NPC: I knew it! In that case, welcome to the Alliance, buddy!
			string_id message = new string_id (c_stringFile, "s_be7e31b9");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will need a starship.
			boolean hasResponse0 = false;
			if (!corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thanks.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_42");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantNoviceSkillBox (player, npc);

			//-- NPC: You almost got me with that one, sweetie! Heh. You're now part of the Rebel Alliance.
			string_id message = new string_id (c_stringFile, "s_c2e41133");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will need a starship.
			boolean hasResponse0 = false;
			if (!corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thanks.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_69");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I knew it! In that case, welcome to the Alliance, buddy!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will need a starship.
	if (response == "s_42")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			corellia_rebel_trainer_1_action_grantSpaceShip (player, npc);

			//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: When can I upgrade?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6f096b57");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_52")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: No problem. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_54");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: No problem. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_48");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When can I upgrade?
	if (response == "s_6f096b57")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: You can't upgrade this ship. The Alliance mechanics have welded the gearflaps shut on all of these loaners. You should think about buying your own ship... something you can customize. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_ce52466");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No problem. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You can't upgrade this ship. The Alliance mechanics have welded the gearflaps shut on all of these loaners. You should think about buying your own ship... something you can customize. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No problem. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You almost got me with that one, sweetie! Heh. You're now part of the Rebel Alliance.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will need a starship.
	if (response == "s_57")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			corellia_rebel_trainer_1_action_grantSpaceShip (player, npc);

			//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: When can I upgrade?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_65");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_69")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: No problem. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_71");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch27 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_61")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: No problem. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_63");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When can I upgrade?
	if (response == "s_65")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: You can't upgrade this ship. The Alliance mechanics have welded the gearflaps shut on all of these loaners. You should think about buying your own ship... something you can customize. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch28 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No problem. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You can't upgrade this ship. The Alliance mechanics have welded the gearflaps shut on all of these loaners. You should think about buying your own ship... something you can customize. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No problem. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch31 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well... yeah! I am a very experienced starfighter pilot. I can teach you everything you need to know - provided that you agree to fly for the Rebel Alliance. How does that strike you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds wizard. Let's go.
	if (response == "s_e096316d")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantNoviceSkillBox (player, npc);

			//-- NPC: Great! You'll do well, I'm sure.
			string_id message = new string_id (c_stringFile, "s_e696787e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will need a starship.
			boolean hasResponse0 = false;
			if (!corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thanks.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 32);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't want to die for the Rebels.
	if (response == "s_d74fc3aa")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Okay. I can appreciate that, I guess. Good luck...
			string_id message = new string_id (c_stringFile, "s_29cee3c8");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch32 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Great! You'll do well, I'm sure.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will need a starship.
	if (response == "s_77")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			corellia_rebel_trainer_1_action_grantSpaceShip (player, npc);

			//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_8a323048");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_80")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: No problem. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_82");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch34 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No problem. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch36 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You got some sort of problem with me, sister? I've been flying for years and years. What I teach you will keep you alive!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Relax, flyboy. I'll join your little club.
	if (response == "s_5a28f5e9")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "greet");

			corellia_rebel_trainer_1_action_grantNoviceSkillBox (player, npc);

			//-- NPC: Fine. Welcome to the Alliance.
			string_id message = new string_id (c_stringFile, "s_a3d65155");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will need a starship.
			boolean hasResponse0 = false;
			if (!corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thanks.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_93");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 37);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks, but no thanks.
	if (response == "s_4dd8aee0")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "gesticulate_wildly");

			//-- NPC: You're breakin' my heart!
			string_id message = new string_id (c_stringFile, "s_c61a299");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch37 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Fine. Welcome to the Alliance.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will need a starship.
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			corellia_rebel_trainer_1_action_grantSpaceShip (player, npc);

			//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_91");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_93")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: No problem. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_95");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch38 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch39 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No problem. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch41 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you sure you want to sign up, honey? It's pretty rough up there.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're kidding, right?
	if (response == "s_d48ff4ca")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_anim_shrugHands (player, npc);

			//-- NPC: I'm just trying to protect you, darling. Are you sure you want to join up with the Alliance? You could get killed!
			string_id message = new string_id (c_stringFile, "s_b73cae6e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: It can't be that tough if you're still alive.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Just shut up and start the training, okay?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4ad222a2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2b436278");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 42);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Call me that again and you die!
	if (response == "s_e6f57b04")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_anim_standPlacate (player, npc);

			//-- NPC: Whoa! Relax, sweetie! I meant nothing by it. Say - if you're really hot for flying starships, I'll set you up. Are you sure you want to join?
			string_id message = new string_id (c_stringFile, "s_cafe8309");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Forget it! I'll find someone else!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, I'm sure!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d36193f9");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1df785ab");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 51);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch42 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm just trying to protect you, darling. Are you sure you want to join up with the Alliance? You could get killed!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It can't be that tough if you're still alive.
	if (response == "s_4ad222a2")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_anim_bellyLaugh (player, npc);

			//-- NPC: Hah! Ha! You got a brain in that pretty skull, eh? Good! It will serve you well in battle.
			string_id message = new string_id (c_stringFile, "s_1d24deda");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Then what are we waiting for?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c1b9a6e");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 43);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just shut up and start the training, okay?
	if (response == "s_2b436278")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_anim_standPlacate (player, npc);

			//-- NPC: Whoa! Relax the attitude, okay? I'll train you... I'll train you...
			string_id message = new string_id (c_stringFile, "s_18617361");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Let's go!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9aa60522");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 47);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch43 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hah! Ha! You got a brain in that pretty skull, eh? Good! It will serve you well in battle.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Then what are we waiting for?
	if (response == "s_c1b9a6e")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "greet");

			corellia_rebel_trainer_1_action_grantNoviceSkillBox (player, npc);

			//-- NPC: Welcome to the Alliance!
			string_id message = new string_id (c_stringFile, "s_29ac0c24");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will need a starship.
			boolean hasResponse0 = false;
			if (!corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thank you.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b9b27823");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 44);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch44 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome to the Alliance!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will need a starship.
	if (response == "s_107")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			corellia_rebel_trainer_1_action_grantSpaceShip (player, npc);

			//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_109");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.
	if (response == "s_b9b27823")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: No problem. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_112");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch45 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch46 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No problem. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch47 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Whoa! Relax the attitude, okay? I'll train you... I'll train you...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Let's go!
	if (response == "s_9aa60522")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantNoviceSkillBox (player, npc);

			//-- NPC: Here you are - your first training module for the Alliance starfighter program.
			string_id message = new string_id (c_stringFile, "s_2092352a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will need a starship.
			boolean hasResponse0 = false;
			if (!corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thank you.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch48 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here you are - your first training module for the Alliance starfighter program.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will need a starship.
	if (response == "s_118")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			corellia_rebel_trainer_1_action_grantSpaceShip (player, npc);

			//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_120");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.
	if (response == "s_122")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: No problem. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_124");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch49 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch50 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No problem. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch51 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Whoa! Relax, sweetie! I meant nothing by it. Say - if you're really hot for flying starships, I'll set you up. Are you sure you want to join?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Forget it! I'll find someone else!
	if (response == "s_d36193f9")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_anim_goodBye (player, npc);

			//-- NPC: Well - I doubt it... but okay. See you later!
			string_id message = new string_id (c_stringFile, "s_6f06b651");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I'm sure!
	if (response == "s_1df785ab")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantNoviceSkillBox (player, npc);

			//-- NPC: No problem... no problem. Here's your introduction to Alliance starfighter techniques.
			string_id message = new string_id (c_stringFile, "s_4cccd3f2");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will need a starship.
			boolean hasResponse0 = false;
			if (!corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thank you.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_144");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 53);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch53 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No problem... no problem. Here's your introduction to Alliance starfighter techniques.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will need a starship.
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			corellia_rebel_trainer_1_action_grantSpaceShip (player, npc);

			//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: When can I upgrade?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 54);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.
	if (response == "s_144")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: No problem. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_146");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch54 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_136")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: No problem. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_138");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When can I upgrade?
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: You can't upgrade this ship. The Alliance mechanics have welded the gearflaps shut on all of these loaners. You should think about buying your own ship... something you can customize. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_142");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch55 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No problem. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch56 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You can't upgrade this ship. The Alliance mechanics have welded the gearflaps shut on all of these loaners. You should think about buying your own ship... something you can customize. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch57 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No problem. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch58 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Perfect thing for a strapping fella such as yourself! I'll be your trainer - and you'll be my... killer! How does that sound?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can't wait!
	if (response == "s_c8fa77b8")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "celebrate");

			corellia_rebel_trainer_1_action_grantNoviceSkillBox (player, npc);

			//-- NPC: Great! Welcome to the Alliance!
			string_id message = new string_id (c_stringFile, "s_71b1981e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will need a starship.
			boolean hasResponse0 = false;
			if (!corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thank you.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_155");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 59);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds wrong for me.
	if (response == "s_7daee3c9")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_anim_shrugHands (player, npc);

			//-- NPC: Well, what can you do? Check back with me if you ever get the urge to join up. I'll get you started!
			string_id message = new string_id (c_stringFile, "s_431ae604");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch59 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Great! Welcome to the Alliance!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will need a starship.
	if (response == "s_151")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			corellia_rebel_trainer_1_action_grantSpaceShip (player, npc);

			//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_153");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.
	if (response == "s_155")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: No problem. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch60 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch61 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No problem. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch63 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Fine, fine. I'm not looking to fight you - I train pilots... to fight the Empire! What do you say? Are you willing to join the Rebel Alliance?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Force has guided me to this... my destiny.
	if (response == "s_24af7536")
	{
		doAnimationAction (player, "bow");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			corellia_rebel_trainer_1_action_grantNoviceSkillBox (player, npc);

			//-- NPC: Spooky. Then you won't mind me giving you your first Alliance pilot skill, eh?
			string_id message = new string_id (c_stringFile, "s_9ccf9a34");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will need a starship.
			boolean hasResponse0 = false;
			if (!corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thank you.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_169");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 64);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Alliance is not ready for me.
	if (response == "s_4785a810")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			corellia_rebel_trainer_1_action_anim_goodBye (player, npc);

			//-- NPC: Okay, then - maybe you'll come back when... we're ready for you? Good luck!
			string_id message = new string_id (c_stringFile, "s_a97e342");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch64 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Spooky. Then you won't mind me giving you your first Alliance pilot skill, eh?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will need a starship.
	if (response == "s_165")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			corellia_rebel_trainer_1_action_grantSpaceShip (player, npc);

			//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_167");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.
	if (response == "s_169")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: No problem. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_171");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch65 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch66 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No problem. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch68 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh, but I do! I do! I could never forget such a pretty face. Come on - let me slide you into the Alliance piloting ranks. You'll love it!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Stare intently and silently)
	if (response == "s_70d92009")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			//-- NPC: Please? The Alliance could really use more strong, intelligent, women pilots... such as you. You can't turn your back on them!
			string_id message = new string_id (c_stringFile, "s_83058593");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will join the Alliance.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm turning my back on you, not them.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6891c87");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_70852580");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 69);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're wasting my time.
	if (response == "s_1b11fff2")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			corellia_rebel_trainer_1_action_anim_rubChin (player, npc);

			//-- NPC: Well, I'm sorry for that... maybe you'll come back later when you have more time? I hope?
			string_id message = new string_id (c_stringFile, "s_e34abf38");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will join the Alliance.
	if (response == "s_192")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			corellia_rebel_trainer_1_action_grantNoviceSkillBox (player, npc);

			//-- NPC: Fantastic! We're going to make beautiful music together! Here is your first piloting skill.
			string_id message = new string_id (c_stringFile, "s_fb969128");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will need a starship.
			boolean hasResponse0 = false;
			if (!corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thank you.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_195");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 75);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch69 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Please? The Alliance could really use more strong, intelligent, women pilots... such as you. You can't turn your back on them!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will join the Alliance.
	if (response == "s_c6891c87")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			corellia_rebel_trainer_1_action_grantNoviceSkillBox (player, npc);

			//-- NPC: Great! Sorry if we had a misunderstanding before... 
			string_id message = new string_id (c_stringFile, "s_5af7e0d3");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will need a starship.
			boolean hasResponse0 = false;
			if (!corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thank you.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_180");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 70);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm turning my back on you, not them.
	if (response == "s_70852580")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "implore");

			corellia_rebel_trainer_1_action_anim_implore (player, npc);

			//-- NPC: Come on! Give me another chance!
			string_id message = new string_id (c_stringFile, "s_6d3c9ec2");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch70 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Great! Sorry if we had a misunderstanding before... 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will need a starship.
	if (response == "s_180")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			corellia_rebel_trainer_1_action_grantSpaceShip (player, npc);

			//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.
	if (response == "s_184")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: No problem. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_186");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch71 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch72 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No problem. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch75 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Fantastic! We're going to make beautiful music together! Here is your first piloting skill.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will need a starship.
	if (response == "s_195")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			corellia_rebel_trainer_1_action_grantSpaceShip (player, npc);

			//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_197");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.
	if (response == "s_199")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: No problem. Are you ready for your first assignment?
			string_id message = new string_id (c_stringFile, "s_201");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch76 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm. Well, I'm pretty sure we can set you up with a loaner from the Alliance. Here... I'll transfer codes for a basic Z95 to your personal datapad. Let me know how she flies. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch77 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No problem. Are you ready for your first assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch79 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Have we met? No? But you are a Rebel pilot, aren't you? What can I do for you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do you have any missions I could fly?
	if (response == "s_1583743c")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_canFlyNonTrackDuty (player, npc))
		{
			//-- NPC: I don't have any missions to assign, but I do have an elective duty mission roster. You could either patrol the system for searching for Imperials, or you could help escort Alliance transports. Would you be interested in an elective duty task?
			string_id message = new string_id (c_stringFile, "s_64977077");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a duty mission?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Add me to the patrol duty roster, sir!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will protect the Alliance transports!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_589");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d3ba53db");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b17f599d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 248);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Since you're not in my unit I cannot assign you missions. You ought to go talk to your commanding officer for such things.
			string_id message = new string_id (c_stringFile, "s_150b3020");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch80 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I don't have any missions to assign, but I do have an elective duty mission roster. You could either patrol the system for searching for Imperials, or you could help escort Alliance transports. Would you be interested in an elective duty task?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a duty mission?
	if (response == "s_589")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: A duty mission is THE best way to get experience as a pilot. I know that you're anxious to get training, and experience from these missions will get you there faster. Duty missions have no real end so you can just finish up whenever you want. What do you think?
			string_id message = new string_id (c_stringFile, "s_591");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a duty mission?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Add me to the patrol duty roster, sir!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will protect the Alliance transports!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_589");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d3ba53db");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b17f599d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 248);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Add me to the patrol duty roster, sir!
	if (response == "s_d3ba53db")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			corellia_rebel_trainer_1_action_grantDUTY_Destroy_01 (player, npc);

			//-- NPC: Done. Fly into Corellia space and follow the nav points. Destroy any hostiles you encounter. Good luck!
			string_id message = new string_id (c_stringFile, "s_dc243da2");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will protect the Alliance transports!
	if (response == "s_b17f599d")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			corellia_rebel_trainer_1_action_grantDUTY_Escort_01 (player, npc);

			//-- NPC: That will make them very happy, pilot. Follow the navigation route and protect every Alliance transport that HQ puts under your care. I'll see ya when you're done.
			string_id message = new string_id (c_stringFile, "s_b282cc98");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch84 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What are you doing here? You should be working for Lady Viopa on Lok... right?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get there?
	if (response == "s_b3bebc5e")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: You're a pilot, now.  Fly there!
			string_id message = new string_id (c_stringFile, "s_6f8c5bda");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch86 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] You have all the tier-1 skills, so would you like some tier-2 content?
	//-- NPC: Hey, so... the Alliance has asked me to recommend pilots that are ready for more challenge. Evidently something big is going on above planet Lok. Rebel Intelligence is all over it... and they need pilots.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yeah, so?
	if (response == "s_386363ba")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			corellia_rebel_trainer_1_action_set_GRADUATED_goto_LOK (player, npc);

			//-- NPC: So? So you've got a date with Lady Viopa of Alliance Intel. You think you can handle it?
			string_id message = new string_id (c_stringFile, "s_c36f7614");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who is this Lady Viopa?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where do I find her?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: See you later, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baf54d0");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3fb48b5f");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74797cab");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Let me at 'em!
	if (response == "s_c999ae60")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_set_GRADUATED_goto_LOK (player, npc);

			//-- NPC: You got it! Meet the Alliance Intel chief stationed on Lok. Her name is Lady Viopa, and she hangs out in Nym's compound. She'll have work for you when you arrive.
			string_id message = new string_id (c_stringFile, "s_d828284a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What more do you know of Viopa?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What can you tell me of Nym?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Goodbye, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_de6d6c6a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3521c69");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4adf1730");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 92);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch87 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So? So you've got a date with Lady Viopa of Alliance Intel. You think you can handle it?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who is this Lady Viopa?
	if (response == "s_baf54d0")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I've never met her. I think she's Mon Cal? I know she's high-ranking Alliance Intel... so she's not exactly my type.
			string_id message = new string_id (c_stringFile, "s_44f7abd1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who is this Lady Viopa?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where do I find her?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: See you later, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baf54d0");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3fb48b5f");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74797cab");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where do I find her?
	if (response == "s_3fb48b5f")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: She's staying with Nym on Lok The Rebellion has made a deal to keep Viopa safe in Nym's compound.
			string_id message = new string_id (c_stringFile, "s_e003aec9");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who is this Lady Viopa?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where do I find her?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: See you later, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baf54d0");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3fb48b5f");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74797cab");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: See you later, Kreezo.
	if (response == "s_74797cab")
	{
		//-- [NOTE] 
		if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Maybe when this war is over, you'll let me buy you a drink...
			string_id message = new string_id (c_stringFile, "s_4cc5bfd8");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Take care, buddy!
			string_id message = new string_id (c_stringFile, "s_9cdc2b64");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch88 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I've never met her. I think she's Mon Cal? I know she's high-ranking Alliance Intel... so she's not exactly my type.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who is this Lady Viopa?
	if (response == "s_baf54d0")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I've never met her. I think she's Mon Cal? I know she's high-ranking Alliance Intel... so she's not exactly my type.
			string_id message = new string_id (c_stringFile, "s_44f7abd1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who is this Lady Viopa?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where do I find her?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: See you later, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baf54d0");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3fb48b5f");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74797cab");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where do I find her?
	if (response == "s_3fb48b5f")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: She's staying with Nym on Lok The Rebellion has made a deal to keep Viopa safe in Nym's compound.
			string_id message = new string_id (c_stringFile, "s_e003aec9");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who is this Lady Viopa?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where do I find her?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: See you later, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baf54d0");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3fb48b5f");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74797cab");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: See you later, Kreezo.
	if (response == "s_74797cab")
	{
		//-- [NOTE] 
		if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Maybe when this war is over, you'll let me buy you a drink...
			string_id message = new string_id (c_stringFile, "s_4cc5bfd8");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Take care, buddy!
			string_id message = new string_id (c_stringFile, "s_9cdc2b64");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch89 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: She's staying with Nym on Lok The Rebellion has made a deal to keep Viopa safe in Nym's compound.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who is this Lady Viopa?
	if (response == "s_baf54d0")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I've never met her. I think she's Mon Cal? I know she's high-ranking Alliance Intel... so she's not exactly my type.
			string_id message = new string_id (c_stringFile, "s_44f7abd1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who is this Lady Viopa?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where do I find her?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: See you later, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baf54d0");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3fb48b5f");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74797cab");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where do I find her?
	if (response == "s_3fb48b5f")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: She's staying with Nym on Lok The Rebellion has made a deal to keep Viopa safe in Nym's compound.
			string_id message = new string_id (c_stringFile, "s_e003aec9");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who is this Lady Viopa?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where do I find her?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: See you later, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baf54d0");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3fb48b5f");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74797cab");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: See you later, Kreezo.
	if (response == "s_74797cab")
	{
		//-- [NOTE] 
		if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Maybe when this war is over, you'll let me buy you a drink...
			string_id message = new string_id (c_stringFile, "s_4cc5bfd8");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Take care, buddy!
			string_id message = new string_id (c_stringFile, "s_9cdc2b64");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch92 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You got it! Meet the Alliance Intel chief stationed on Lok. Her name is Lady Viopa, and she hangs out in Nym's compound. She'll have work for you when you arrive.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What more do you know of Viopa?
	if (response == "s_de6d6c6a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: Nothing, really. She's kinda spooky. Alliance Intel folks generally are, though. Just do your duty and stay out of trouble!
			string_id message = new string_id (c_stringFile, "s_d2d0a643");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What more do you know of Viopa?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What can you tell me of Nym?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Goodbye, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_de6d6c6a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3521c69");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4adf1730");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 92);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What can you tell me of Nym?
	if (response == "s_3521c69")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: Well... nothing. I've had some trouble with his group in the past. But now that we're all working for the Alliance, I can put it behind me.
			string_id message = new string_id (c_stringFile, "s_79ff003e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You crossed Nym?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9965dc21");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 94);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Goodbye, Kreezo.
	if (response == "s_4adf1730")
	{
		//-- [NOTE] 
		if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Maybe when this war is over, you'll let me buy you a drink...
			string_id message = new string_id (c_stringFile, "s_236");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Take care, buddy!
			string_id message = new string_id (c_stringFile, "s_238");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch93 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Nothing, really. She's kinda spooky. Alliance Intel folks generally are, though. Just do your duty and stay out of trouble!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What more do you know of Viopa?
	if (response == "s_de6d6c6a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: Nothing, really. She's kinda spooky. Alliance Intel folks generally are, though. Just do your duty and stay out of trouble!
			string_id message = new string_id (c_stringFile, "s_d2d0a643");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What more do you know of Viopa?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What can you tell me of Nym?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Goodbye, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_de6d6c6a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3521c69");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4adf1730");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 92);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What can you tell me of Nym?
	if (response == "s_3521c69")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: Well... nothing. I've had some trouble with his group in the past. But now that we're all working for the Alliance, I can put it behind me.
			string_id message = new string_id (c_stringFile, "s_79ff003e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You crossed Nym?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9965dc21");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 94);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Goodbye, Kreezo.
	if (response == "s_4adf1730")
	{
		//-- [NOTE] 
		if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Maybe when this war is over, you'll let me buy you a drink...
			string_id message = new string_id (c_stringFile, "s_236");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Take care, buddy!
			string_id message = new string_id (c_stringFile, "s_238");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch94 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well... nothing. I've had some trouble with his group in the past. But now that we're all working for the Alliance, I can put it behind me.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You crossed Nym?
	if (response == "s_9965dc21")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh");

			//-- NPC: Heh. Once this war is over, if you still want to know - I'll be glad to tell you. For now... take a hike! Good luck out there, pilot.
			string_id message = new string_id (c_stringFile, "s_6abdc31f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What more do you know of Viopa?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What can you tell me of Nym?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Goodbye, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_de6d6c6a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3521c69");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4adf1730");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 92);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch95 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Heh. Once this war is over, if you still want to know - I'll be glad to tell you. For now... take a hike! Good luck out there, pilot.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What more do you know of Viopa?
	if (response == "s_de6d6c6a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: Nothing, really. She's kinda spooky. Alliance Intel folks generally are, though. Just do your duty and stay out of trouble!
			string_id message = new string_id (c_stringFile, "s_d2d0a643");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What more do you know of Viopa?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What can you tell me of Nym?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Goodbye, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_de6d6c6a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3521c69");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4adf1730");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 92);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What can you tell me of Nym?
	if (response == "s_3521c69")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: Well... nothing. I've had some trouble with his group in the past. But now that we're all working for the Alliance, I can put it behind me.
			string_id message = new string_id (c_stringFile, "s_79ff003e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You crossed Nym?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9965dc21");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 94);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Goodbye, Kreezo.
	if (response == "s_4adf1730")
	{
		//-- [NOTE] 
		if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Maybe when this war is over, you'll let me buy you a drink...
			string_id message = new string_id (c_stringFile, "s_236");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Take care, buddy!
			string_id message = new string_id (c_stringFile, "s_238");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch98 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Okay, so what happened? We need that route data as soon as possible!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was unable to complete the mission.
	if (response == "s_2f6cbd7e")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_forward");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: I know that. Try again. Hurry back!
			string_id message = new string_id (c_stringFile, "s_c9200f78");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I aborted the mission.
	if (response == "s_c549da6d")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Don't abort the missions I give you, pal!
			string_id message = new string_id (c_stringFile, "s_209aa4aa");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Don't abort the missions I give you, sweetie!
			string_id message = new string_id (c_stringFile, "s_c6e25b8f");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch102 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What happened on your patrol, pilot?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was jumped by TIE fighters.
	if (response == "s_328afd9b")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: This sort of thing is bound to happen. After all it is a WAR, you know!
			string_id message = new string_id (c_stringFile, "s_e1f8bf59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am sorry.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want another chance.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9d39bee2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1f2dd784");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 103);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I couldn't finish the mission.
	if (response == "s_e8f4f19d")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "gesticulate_wildly");

			//-- NPC: Why not? What are you talking about? What happened?! We can't just FAIL missions around here, you know?!
			string_id message = new string_id (c_stringFile, "s_13f85785");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: TIE Fighters tried to kill me!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: You're right. There is no excuse.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aed27f16");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ba6c97d4");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch103 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: This sort of thing is bound to happen. After all it is a WAR, you know!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am sorry.
	if (response == "s_9d39bee2")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Get back out there and get me my transport route info!
			string_id message = new string_id (c_stringFile, "s_2fc8ed3d");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want another chance.
	if (response == "s_1f2dd784")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: You got it. Fly back out there and get us our transport route info. See me when you're done.
			string_id message = new string_id (c_stringFile, "s_5e3d235d");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch106 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Why not? What are you talking about? What happened?! We can't just FAIL missions around here, you know?!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TIE Fighters tried to kill me!
	if (response == "s_aed27f16")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: They tend to do that, my friend. We are at WAR with the Empire. Do you understand?
			string_id message = new string_id (c_stringFile, "s_940c893e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, I do.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Maybe this isn't for me.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90ec63e0");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9f222613");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: I know. But they haven't gotten rid of you yet, have they? No, they haven't. Get back out there and get that info. I'll be waiting.
			string_id message = new string_id (c_stringFile, "s_69bdfc60");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're right. There is no excuse.
	if (response == "s_ba6c97d4")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Get back out there, man! We must not keep the Alliance waiting!
			string_id message = new string_id (c_stringFile, "s_b4e22b71");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "standing_placate");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Look, don't beat yourself up about it. This is our first operation together. Let's get you back out there to try again, okay?
			string_id message = new string_id (c_stringFile, "s_2b8b36e0");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch107 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: They tend to do that, my friend. We are at WAR with the Empire. Do you understand?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I do.
	if (response == "s_90ec63e0")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Then get back out there!
			string_id message = new string_id (c_stringFile, "s_967362c6");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Maybe this isn't for me.
	if (response == "s_9f222613")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "sigh_deeply");

			//-- NPC: Quit if you want... but I wouldn't advise it.
			string_id message = new string_id (c_stringFile, "s_1920852a");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch113 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So let's hear all the gory details.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I couldn't kill them all.
	if (response == "s_5f930245")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			corellia_rebel_trainer_1_action_grantQuestTwo (player, npc);

			//-- NPC: Well, then let's give you another chance at it!
			string_id message = new string_id (c_stringFile, "s_f3b9575d");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Give me another chance!
	if (response == "s_8b760dea")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			corellia_rebel_trainer_1_action_grantQuestTwo (player, npc);

			//-- NPC: Outstanding! You got it!
			string_id message = new string_id (c_stringFile, "s_ec3b34af");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: There were too many of them.
	if (response == "s_9c5aabe")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestTwo (player, npc);

			//-- NPC: Don't take them on all at once. Focus your firepower on a single target. They're still up there. Give it another try!
			string_id message = new string_id (c_stringFile, "s_3794d8a1");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch117 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So, lucky for you that wasn't the last refugee transport from the convoy. You ready to try again?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Guess so.
	if (response == "s_2a1af6a8")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			corellia_rebel_trainer_1_action_grantQuestThree (player, npc);

			//-- NPC: We'll try not to work too hard saving our civilian friends, okay? Jeez...
			string_id message = new string_id (c_stringFile, "s_7fc57488");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Right away, sir!
	if (response == "s_64355c70")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "salute1");

			corellia_rebel_trainer_1_action_grantQuestThree (player, npc);

			//-- NPC: That's the spirit, buddy!
			string_id message = new string_id (c_stringFile, "s_e68af394");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			corellia_rebel_trainer_1_action_grantQuestThree (player, npc);

			//-- NPC: Yes, ma'am!
			string_id message = new string_id (c_stringFile, "s_279176e6");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Without question.
	if (response == "s_e102b38d")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			corellia_rebel_trainer_1_action_grantQuestThree (player, npc);

			//-- NPC: Good luck.
			string_id message = new string_id (c_stringFile, "s_90422eb5");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch122 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Too much for you, huh?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: They got lucky.
	if (response == "s_af180d19")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			corellia_rebel_trainer_1_action_grantQuestFour (player, npc);

			//-- NPC: Then you get them back!
			string_id message = new string_id (c_stringFile, "s_e3ae7e7c");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, sir! Again, sir!
	if (response == "s_afd8ea50")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			corellia_rebel_trainer_1_action_grantQuestFour (player, npc);

			//-- NPC: Affirmative! Go get 'em!
			string_id message = new string_id (c_stringFile, "s_719a6b56");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I won't fail a second time.
	if (response == "s_d2b22f30")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			corellia_rebel_trainer_1_action_grantQuestFour (player, npc);

			//-- NPC: I know you won't. Good luck!
			string_id message = new string_id (c_stringFile, "s_159b7288");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch126 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] grantQuest 1
	//-- NPC: Hey there! Ready to get started?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch127 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Piece of cake, Kreezo.
	if (response == "s_199261c2")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: You said it! The transport route is pretty big - so you'll only be hitting the major hot-spots. Just make sure that nobody from the Empire spots you... and try not to tangle with the local pirates.
			string_id message = new string_id (c_stringFile, "s_4a86da46");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: No problem.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pirates? What pirates?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Are there many Imperials?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c261cfae");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3e6b505");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b40d5e2c");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 128);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch128 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You said it! The transport route is pretty big - so you'll only be hitting the major hot-spots. Just make sure that nobody from the Empire spots you... and try not to tangle with the local pirates.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No problem.
	if (response == "s_c261cfae")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: Good luck!
			string_id message = new string_id (c_stringFile, "s_a80d9308");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Pirates? What pirates?
	if (response == "s_e3e6b505")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shiver");

			//-- NPC: Heh. Despite our best efforts Corellia is still lousy with pirate clans. Things have gotten a lot worse since the Empire got slammed at the Battle of Yavin. Local criminals figure they've got a chance at defeating the Empire... just as we do.
			string_id message = new string_id (c_stringFile, "s_61f0b20d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: No problem.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pirates? What pirates?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Are there many Imperials?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c261cfae");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3e6b505");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b40d5e2c");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 128);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Are there many Imperials?
	if (response == "s_b40d5e2c")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: You must be new to Corellia, pal. This place is crawling with Imps. Be very careful out there! The Empire cannot learn our purpose... or the whole transport route will have to be scrapped!
			string_id message = new string_id (c_stringFile, "s_10133bc");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: No problem.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pirates? What pirates?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Are there many Imperials?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c261cfae");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3e6b505");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b40d5e2c");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 128);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch130 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Heh. Despite our best efforts Corellia is still lousy with pirate clans. Things have gotten a lot worse since the Empire got slammed at the Battle of Yavin. Local criminals figure they've got a chance at defeating the Empire... just as we do.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No problem.
	if (response == "s_c261cfae")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: Good luck!
			string_id message = new string_id (c_stringFile, "s_a80d9308");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Pirates? What pirates?
	if (response == "s_e3e6b505")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shiver");

			//-- NPC: Heh. Despite our best efforts Corellia is still lousy with pirate clans. Things have gotten a lot worse since the Empire got slammed at the Battle of Yavin. Local criminals figure they've got a chance at defeating the Empire... just as we do.
			string_id message = new string_id (c_stringFile, "s_61f0b20d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: No problem.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pirates? What pirates?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Are there many Imperials?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c261cfae");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3e6b505");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b40d5e2c");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 128);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Are there many Imperials?
	if (response == "s_b40d5e2c")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: You must be new to Corellia, pal. This place is crawling with Imps. Be very careful out there! The Empire cannot learn our purpose... or the whole transport route will have to be scrapped!
			string_id message = new string_id (c_stringFile, "s_10133bc");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: No problem.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pirates? What pirates?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Are there many Imperials?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c261cfae");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3e6b505");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b40d5e2c");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 128);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch131 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You must be new to Corellia, pal. This place is crawling with Imps. Be very careful out there! The Empire cannot learn our purpose... or the whole transport route will have to be scrapped!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No problem.
	if (response == "s_c261cfae")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: Good luck!
			string_id message = new string_id (c_stringFile, "s_a80d9308");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Pirates? What pirates?
	if (response == "s_e3e6b505")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shiver");

			//-- NPC: Heh. Despite our best efforts Corellia is still lousy with pirate clans. Things have gotten a lot worse since the Empire got slammed at the Battle of Yavin. Local criminals figure they've got a chance at defeating the Empire... just as we do.
			string_id message = new string_id (c_stringFile, "s_61f0b20d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: No problem.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pirates? What pirates?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Are there many Imperials?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c261cfae");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3e6b505");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b40d5e2c");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 128);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Are there many Imperials?
	if (response == "s_b40d5e2c")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: You must be new to Corellia, pal. This place is crawling with Imps. Be very careful out there! The Empire cannot learn our purpose... or the whole transport route will have to be scrapped!
			string_id message = new string_id (c_stringFile, "s_10133bc");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: No problem.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pirates? What pirates?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Are there many Imperials?
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c261cfae");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3e6b505");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b40d5e2c");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 128);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch132 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Quit wasting my time, Kreezo!
	if (response == "s_306e91cd")
	{
		doAnimationAction (player, "hair_flip");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: I gotta hand it to ya. You're a real spitfire, babe! Hope it serves you well in battle. Here's the story: Alliance HQ has come up with a new travel route for munitions transports. We want you to hit a few nav points along the route and make sure they're safe.
			string_id message = new string_id (c_stringFile, "s_18c8a207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds perfect.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do you mean 'safe?'
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_fac12b86");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cc9fe745");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 133);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Stare blankly.)
	if (response == "s_c477804d")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Whatever. Look - Alliance HQ, in their infinite wisdom, have decided to change-up the transport routes here in Corellia. Before we cut loose with all our supply ships, we want you to check out a few select nav points in this system and ensure that the route is safe. Sound good?
			string_id message = new string_id (c_stringFile, "s_a470f356");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Love it.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do you mean 'safe?'
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51f67642");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_309");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 136);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch133 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I gotta hand it to ya. You're a real spitfire, babe! Hope it serves you well in battle. Here's the story: Alliance HQ has come up with a new travel route for munitions transports. We want you to hit a few nav points along the route and make sure they're safe.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds perfect.
	if (response == "s_fac12b86")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: Just try to make it back here in one piece, okay?
			string_id message = new string_id (c_stringFile, "s_8b43cee4");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you mean 'safe?'
	if (response == "s_cc9fe745")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: I mean - let's make sure that the actual nav route doesn't cross an Imperial patrol or land in a nest of pirates. Check back with me when you're done.
			string_id message = new string_id (c_stringFile, "s_96bda01");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch136 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Whatever. Look - Alliance HQ, in their infinite wisdom, have decided to change-up the transport routes here in Corellia. Before we cut loose with all our supply ships, we want you to check out a few select nav points in this system and ensure that the route is safe. Sound good?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Love it.
	if (response == "s_51f67642")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: Good. Check back with me when you're done.
			string_id message = new string_id (c_stringFile, "s_db182750");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you mean 'safe?'
	if (response == "s_309")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: I mean - let's make sure that the actual nav route doesn't cross an Imperial patrol or land in a nest of pirates. Check back with me when you're done.
			string_id message = new string_id (c_stringFile, "s_311");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch139 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Clear of what?
	if (response == "s_6194a4e")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Pirates, Imps, whatever. The old transport route was uncovered by the Empire and we lost a lot of good folks (not to mention their precious cargo). This new route should be more hidden...
			string_id message = new string_id (c_stringFile, "s_cfbb506d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where is this route?
	if (response == "s_8c2c48a7")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: I don't know how best to describe it, really. Just launch into space. Your navigation computer has all of the important locations already loaded. Follow to each nav point and report what you find.
			string_id message = new string_id (c_stringFile, "s_b975d6db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Salute) The Force be with you.
	if (response == "s_baae2f70")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: Oh yeah. You too...
			string_id message = new string_id (c_stringFile, "s_716c6ef");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_on_dismissing");

			//-- NPC: You got it, babe.
			string_id message = new string_id (c_stringFile, "s_92779459");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch140 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Pirates, Imps, whatever. The old transport route was uncovered by the Empire and we lost a lot of good folks (not to mention their precious cargo). This new route should be more hidden...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Clear of what?
	if (response == "s_6194a4e")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Pirates, Imps, whatever. The old transport route was uncovered by the Empire and we lost a lot of good folks (not to mention their precious cargo). This new route should be more hidden...
			string_id message = new string_id (c_stringFile, "s_cfbb506d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where is this route?
	if (response == "s_8c2c48a7")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: I don't know how best to describe it, really. Just launch into space. Your navigation computer has all of the important locations already loaded. Follow to each nav point and report what you find.
			string_id message = new string_id (c_stringFile, "s_b975d6db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Salute) The Force be with you.
	if (response == "s_baae2f70")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: Oh yeah. You too...
			string_id message = new string_id (c_stringFile, "s_716c6ef");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_on_dismissing");

			//-- NPC: You got it, babe.
			string_id message = new string_id (c_stringFile, "s_92779459");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch141 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I don't know how best to describe it, really. Just launch into space. Your navigation computer has all of the important locations already loaded. Follow to each nav point and report what you find.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Clear of what?
	if (response == "s_6194a4e")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Pirates, Imps, whatever. The old transport route was uncovered by the Empire and we lost a lot of good folks (not to mention their precious cargo). This new route should be more hidden...
			string_id message = new string_id (c_stringFile, "s_cfbb506d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where is this route?
	if (response == "s_8c2c48a7")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: I don't know how best to describe it, really. Just launch into space. Your navigation computer has all of the important locations already loaded. Follow to each nav point and report what you find.
			string_id message = new string_id (c_stringFile, "s_b975d6db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Salute) The Force be with you.
	if (response == "s_baae2f70")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: Oh yeah. You too...
			string_id message = new string_id (c_stringFile, "s_716c6ef");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_on_dismissing");

			//-- NPC: You got it, babe.
			string_id message = new string_id (c_stringFile, "s_92779459");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch144 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Consider it done.
	if (response == "s_16d870fe")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: You betcha!
			string_id message = new string_id (c_stringFile, "s_fa61f5fd");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: I'll consider it done when you're back... and it's done.
			string_id message = new string_id (c_stringFile, "s_5d420942");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Secret route?
	if (response == "s_2da94e1b")
	{
		doAnimationAction (player, "shrug_hands");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Yeah. The old one was secret, too - but it was discovered. Lots of Rebels lost their lives. This new route is... new. At the moment, the Imps have no clue what we're planning.
			string_id message = new string_id (c_stringFile, "s_10762880");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch147 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yeah. The old one was secret, too - but it was discovered. Lots of Rebels lost their lives. This new route is... new. At the moment, the Imps have no clue what we're planning.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Consider it done.
	if (response == "s_16d870fe")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: You betcha!
			string_id message = new string_id (c_stringFile, "s_fa61f5fd");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: I'll consider it done when you're back... and it's done.
			string_id message = new string_id (c_stringFile, "s_5d420942");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Secret route?
	if (response == "s_2da94e1b")
	{
		doAnimationAction (player, "shrug_hands");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Yeah. The old one was secret, too - but it was discovered. Lots of Rebels lost their lives. This new route is... new. At the moment, the Imps have no clue what we're planning.
			string_id message = new string_id (c_stringFile, "s_10762880");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch148 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Shrug and smile.)
	if (response == "s_d731f764")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I know how you feel. Alliance HQ has plans for a new transport route. They need you to check out a few nav points in Corellia space and ensure that it'll be safe.
			string_id message = new string_id (c_stringFile, "s_e81be890");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Piece of cake, Kreezo.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199261c2");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Oh! I see how it is. You think you're really tough, don't ya?
			string_id message = new string_id (c_stringFile, "s_948698f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quit wasting my time, Kreezo!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Stare blankly.)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306e91cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c477804d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Affirmative!
	if (response == "s_90377ed4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Wizard! So - your job is to run a patrol through a newly appointed Alliance transport route. Make sure that the path is clear. Report any enemy ships you detect.
			string_id message = new string_id (c_stringFile, "s_53d2df67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Clear of what?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where is this route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6194a4e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c2c48a7");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_baae2f70");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready, Kreezo.
	if (response == "s_b4bce31a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_rebel_trainer_1_action_grantQuestOne (player, npc);

			//-- NPC: Good! Your job will be to check out the newly appointed Alliance transport route. It's a secret route - so fly casual... and make sure that all nav points check out!
			string_id message = new string_id (c_stringFile, "s_e44f1421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Secret route?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2da94e1b");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_b39049de")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a few things for me.  Now, are you ready to get started?
			string_id message = new string_id (c_stringFile, "s_fe5c41db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Shrug and smile.)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch149 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] Completed quest 1 - no reward yet
	//-- NPC: So, let's hear it! What happened out there?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TIE Fighters attacked me!
	if (response == "s_5bec38ba")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			corellia_rebel_trainer_1_action_giveRewardQuest1 (player, npc);

			//-- NPC: You don't say! In that case, we can scrap the new transport route. Alliance HQ is going to have to come up with another plan. Good work, pilot!
			string_id message = new string_id (c_stringFile, "s_ab8b2db5");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The patrol was interrupted by an Imperial ambush!
	if (response == "s_43a157c9")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			corellia_rebel_trainer_1_action_giveRewardQuest1 (player, npc);

			//-- NPC: That's bad news. This means that the Empire is aware of our plans to reopen secret transport routes here in Corellia. Bad, bad news. Glad you're okay, though! Great work!
			string_id message = new string_id (c_stringFile, "s_4b1458bf");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Nothing special.
	if (response == "s_941b03d0")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Really? Alliance HQ is saying that other patrols are getting smacked by long-range TIE sweeps. You didn't encounter any resistance?
			string_id message = new string_id (c_stringFile, "s_73af9681");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I wouldn't call it 'resistance.'
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: A wing of TIE fighters intercepted me.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a66b0c40");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c02ffe47");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 152);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch152 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Really? Alliance HQ is saying that other patrols are getting smacked by long-range TIE sweeps. You didn't encounter any resistance?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I wouldn't call it 'resistance.'
	if (response == "s_a66b0c40")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			corellia_rebel_trainer_1_action_giveRewardQuest1 (player, npc);

			//-- NPC: Oh no? So I guess you made quick work of them. Good. Bad news for the new transport route, though. Check back with me later for another assignment.
			string_id message = new string_id (c_stringFile, "s_5b72d948");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: A wing of TIE fighters intercepted me.
	if (response == "s_c02ffe47")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh");

			corellia_rebel_trainer_1_action_giveRewardQuest1 (player, npc);

			//-- NPC: Ha! Bad luck for them, huh? Glad to see you're still in one piece. Alliance HQ will likely scrap their plans for a new transport route. 
			string_id message = new string_id (c_stringFile, "s_cea58c15");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch155 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Got another one for ya! It's time to get even with those TIE fighters that jumped you on your last patrol. You ready?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure. Why not.
	if (response == "s_c92d07b4")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestTwo (player, npc);

			//-- NPC: Gonzo! Let's strike back at the infernal Empire. Find four TIE fighters in the Corellia system and destroy them!
			string_id message = new string_id (c_stringFile, "s_a592576c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What do you want me to do about it?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where am I headed?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on my way!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_908b3b7a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ef167e72");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dc649bb3");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 156);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Salute) Yes sir!
	if (response == "s_5792c0f4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			corellia_rebel_trainer_1_action_grantQuestTwo (player, npc);

			//-- NPC: Relax. This ain't the Empire, okay? Lets exact a little revenge. Find four TIE fighters in the Corellia system and destroy them!
			string_id message = new string_id (c_stringFile, "s_b03e852c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What's the order, sir?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What are they doing here?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) I'm on my way!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbfb3e78");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_797e30cb");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7191233e");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 161);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am more than ready, Kreezo.
	if (response == "s_e2d604a4")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestTwo (player, npc);

			//-- NPC: Good. Let's strike back at the infernal Empire. Find four TIE fighters in the Corellia system and destroy them! Sound good?
			string_id message = new string_id (c_stringFile, "s_d31da604");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is my objective?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sounds like pay-back.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30136a60");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5be6d3af");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1f7c77cd");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 166);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_370")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a couple more things for me.  Now, are you ready to get back to work?
			string_id message = new string_id (c_stringFile, "s_b979a424");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure. Why not.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Salute) Yes sir!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am more than ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c92d07b4");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5792c0f4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e2d604a4");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_370");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 155);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch156 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Gonzo! Let's strike back at the infernal Empire. Find four TIE fighters in the Corellia system and destroy them!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you want me to do about it?
	if (response == "s_908b3b7a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Blast 'em! Alliance HQ says you gotta bring down four TIE fighters, should be a walk in the park for you, right?
			string_id message = new string_id (c_stringFile, "s_b416fca1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What do you want me to do about it?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where am I headed?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on my way!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_908b3b7a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ef167e72");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dc649bb3");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 156);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where am I headed?
	if (response == "s_ef167e72")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: We don't have an exact location, search the Corellia system for TIE fighters and blast 'em!
			string_id message = new string_id (c_stringFile, "s_7c899d3e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What do you want me to do about it?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where am I headed?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on my way!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_908b3b7a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ef167e72");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dc649bb3");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 156);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on my way!
	if (response == "s_dc649bb3")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: Make sure you stay in one piece, man!
			string_id message = new string_id (c_stringFile, "s_90f5b9d8");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: Stay safe up there! I want to see you again soon...
			string_id message = new string_id (c_stringFile, "s_5a12db83");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch157 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Blast 'em! Alliance HQ says you gotta bring down four TIE fighters, should be a walk in the park for you, right?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you want me to do about it?
	if (response == "s_908b3b7a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Blast 'em! Alliance HQ says you gotta bring down four TIE fighters, should be a walk in the park for you, right?
			string_id message = new string_id (c_stringFile, "s_b416fca1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What do you want me to do about it?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where am I headed?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on my way!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_908b3b7a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ef167e72");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dc649bb3");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 156);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where am I headed?
	if (response == "s_ef167e72")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: We don't have an exact location, search the Corellia system for TIE fighters and blast 'em!
			string_id message = new string_id (c_stringFile, "s_7c899d3e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What do you want me to do about it?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where am I headed?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on my way!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_908b3b7a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ef167e72");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dc649bb3");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 156);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on my way!
	if (response == "s_dc649bb3")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: Make sure you stay in one piece, man!
			string_id message = new string_id (c_stringFile, "s_90f5b9d8");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: Stay safe up there! I want to see you again soon...
			string_id message = new string_id (c_stringFile, "s_5a12db83");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch158 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We don't have an exact location, search the Corellia system for TIE fighters and blast 'em!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you want me to do about it?
	if (response == "s_908b3b7a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Blast 'em! Alliance HQ says you gotta bring down four TIE fighters, should be a walk in the park for you, right?
			string_id message = new string_id (c_stringFile, "s_b416fca1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What do you want me to do about it?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where am I headed?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on my way!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_908b3b7a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ef167e72");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dc649bb3");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 156);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where am I headed?
	if (response == "s_ef167e72")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: We don't have an exact location, search the Corellia system for TIE fighters and blast 'em!
			string_id message = new string_id (c_stringFile, "s_7c899d3e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What do you want me to do about it?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where am I headed?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on my way!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_908b3b7a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ef167e72");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dc649bb3");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 156);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on my way!
	if (response == "s_dc649bb3")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: Make sure you stay in one piece, man!
			string_id message = new string_id (c_stringFile, "s_90f5b9d8");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: Stay safe up there! I want to see you again soon...
			string_id message = new string_id (c_stringFile, "s_5a12db83");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch161 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Relax. This ain't the Empire, okay? Lets exact a little revenge. Find four TIE fighters in the Corellia system and destroy them!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's the order, sir?
	if (response == "s_dbfb3e78")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Alliance HQ wants you to bring down four TIE fighters in the Corellia system. That'll make it clear to the Empire - they are not welcome here!
			string_id message = new string_id (c_stringFile, "s_b20c776b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What's the order, sir?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What are they doing here?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) I'm on my way!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbfb3e78");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_797e30cb");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7191233e");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 161);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What are they doing here?
	if (response == "s_797e30cb")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: Dunno. The usual, I guess. Figure they're here because they know the Alliance is setting up operations in Corellia. They can't afford to let us get a foothold in this system.
			string_id message = new string_id (c_stringFile, "s_ecdd7266");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What's the order, sir?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What are they doing here?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) I'm on my way!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbfb3e78");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_797e30cb");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7191233e");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 161);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Salute) I'm on my way!
	if (response == "s_7191233e")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "salute1");

			//-- NPC: Good luck, pal.
			string_id message = new string_id (c_stringFile, "s_f0f9adc9");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: Be careful, sweetheart.
			string_id message = new string_id (c_stringFile, "s_71ce4d3b");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch162 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Alliance HQ wants you to bring down four TIE fighters in the Corellia system. That'll make it clear to the Empire - they are not welcome here!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's the order, sir?
	if (response == "s_dbfb3e78")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Alliance HQ wants you to bring down four TIE fighters in the Corellia system. That'll make it clear to the Empire - they are not welcome here!
			string_id message = new string_id (c_stringFile, "s_b20c776b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What's the order, sir?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What are they doing here?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) I'm on my way!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbfb3e78");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_797e30cb");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7191233e");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 161);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What are they doing here?
	if (response == "s_797e30cb")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: Dunno. The usual, I guess. Figure they're here because they know the Alliance is setting up operations in Corellia. They can't afford to let us get a foothold in this system.
			string_id message = new string_id (c_stringFile, "s_ecdd7266");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What's the order, sir?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What are they doing here?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) I'm on my way!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbfb3e78");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_797e30cb");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7191233e");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 161);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Salute) I'm on my way!
	if (response == "s_7191233e")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "salute1");

			//-- NPC: Good luck, pal.
			string_id message = new string_id (c_stringFile, "s_f0f9adc9");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: Be careful, sweetheart.
			string_id message = new string_id (c_stringFile, "s_71ce4d3b");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch163 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Dunno. The usual, I guess. Figure they're here because they know the Alliance is setting up operations in Corellia. They can't afford to let us get a foothold in this system.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's the order, sir?
	if (response == "s_dbfb3e78")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Alliance HQ wants you to bring down four TIE fighters in the Corellia system. That'll make it clear to the Empire - they are not welcome here!
			string_id message = new string_id (c_stringFile, "s_b20c776b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What's the order, sir?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What are they doing here?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) I'm on my way!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbfb3e78");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_797e30cb");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7191233e");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 161);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What are they doing here?
	if (response == "s_797e30cb")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: Dunno. The usual, I guess. Figure they're here because they know the Alliance is setting up operations in Corellia. They can't afford to let us get a foothold in this system.
			string_id message = new string_id (c_stringFile, "s_ecdd7266");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What's the order, sir?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What are they doing here?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) I'm on my way!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbfb3e78");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_797e30cb");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7191233e");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 161);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Salute) I'm on my way!
	if (response == "s_7191233e")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "salute1");

			//-- NPC: Good luck, pal.
			string_id message = new string_id (c_stringFile, "s_f0f9adc9");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: Be careful, sweetheart.
			string_id message = new string_id (c_stringFile, "s_71ce4d3b");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch166 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. Let's strike back at the infernal Empire. Find four TIE fighters in the Corellia system and destroy them! Sound good?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is my objective?
	if (response == "s_30136a60")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Bring down four TIE fighters. You can stick around to do more damage if they call in reinforcements - but the approved objective is four total targets.
			string_id message = new string_id (c_stringFile, "s_fde91357");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is my objective?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sounds like pay-back.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30136a60");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5be6d3af");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1f7c77cd");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 166);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds like pay-back.
	if (response == "s_5be6d3af")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Yeah! Sounds like fun, too! I reckon you crossed paths with a long-range TIE patrol before, it's time for some revenge, right? Bring 'em some justice!
			string_id message = new string_id (c_stringFile, "s_5daf71df");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is my objective?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sounds like pay-back.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30136a60");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5be6d3af");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1f7c77cd");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 166);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Force be with you.
	if (response == "s_1f7c77cd")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: Okay, then!
			string_id message = new string_id (c_stringFile, "s_c5b598a2");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "implore");

			//-- NPC: And with you too, sweets. Hope to see you very soon, okay?
			string_id message = new string_id (c_stringFile, "s_70c0cac2");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch167 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Bring down four TIE fighters. You can stick around to do more damage if they call in reinforcements - but the approved objective is four total targets.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is my objective?
	if (response == "s_30136a60")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Bring down four TIE fighters. You can stick around to do more damage if they call in reinforcements - but the approved objective is four total targets.
			string_id message = new string_id (c_stringFile, "s_fde91357");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is my objective?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sounds like pay-back.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30136a60");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5be6d3af");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1f7c77cd");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 166);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds like pay-back.
	if (response == "s_5be6d3af")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Yeah! Sounds like fun, too! I reckon you crossed paths with a long-range TIE patrol before, it's time for some revenge, right? Bring 'em some justice!
			string_id message = new string_id (c_stringFile, "s_5daf71df");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is my objective?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sounds like pay-back.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30136a60");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5be6d3af");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1f7c77cd");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 166);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Force be with you.
	if (response == "s_1f7c77cd")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: Okay, then!
			string_id message = new string_id (c_stringFile, "s_c5b598a2");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "implore");

			//-- NPC: And with you too, sweets. Hope to see you very soon, okay?
			string_id message = new string_id (c_stringFile, "s_70c0cac2");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch168 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yeah! Sounds like fun, too! I reckon you crossed paths with a long-range TIE patrol before, it's time for some revenge, right? Bring 'em some justice!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is my objective?
	if (response == "s_30136a60")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Bring down four TIE fighters. You can stick around to do more damage if they call in reinforcements - but the approved objective is four total targets.
			string_id message = new string_id (c_stringFile, "s_fde91357");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is my objective?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sounds like pay-back.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30136a60");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5be6d3af");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1f7c77cd");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 166);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds like pay-back.
	if (response == "s_5be6d3af")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Yeah! Sounds like fun, too! I reckon you crossed paths with a long-range TIE patrol before, it's time for some revenge, right? Bring 'em some justice!
			string_id message = new string_id (c_stringFile, "s_5daf71df");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is my objective?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sounds like pay-back.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30136a60");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5be6d3af");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1f7c77cd");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 166);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Force be with you.
	if (response == "s_1f7c77cd")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: Okay, then!
			string_id message = new string_id (c_stringFile, "s_c5b598a2");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "implore");

			//-- NPC: And with you too, sweets. Hope to see you very soon, okay?
			string_id message = new string_id (c_stringFile, "s_70c0cac2");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch171 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a couple more things for me.  Now, are you ready to get back to work?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure. Why not.
	if (response == "s_c92d07b4")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestTwo (player, npc);

			//-- NPC: Gonzo! Let's strike back at the infernal Empire. Find four TIE fighters in the Corellia system and destroy them!
			string_id message = new string_id (c_stringFile, "s_a592576c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What do you want me to do about it?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where am I headed?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on my way!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_908b3b7a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ef167e72");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dc649bb3");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 156);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Salute) Yes sir!
	if (response == "s_5792c0f4")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			corellia_rebel_trainer_1_action_grantQuestTwo (player, npc);

			//-- NPC: Relax. This ain't the Empire, okay? Lets exact a little revenge. Find four TIE fighters in the Corellia system and destroy them!
			string_id message = new string_id (c_stringFile, "s_b03e852c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What's the order, sir?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What are they doing here?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (Salute) I'm on my way!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbfb3e78");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_797e30cb");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7191233e");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 161);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am more than ready, Kreezo.
	if (response == "s_e2d604a4")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestTwo (player, npc);

			//-- NPC: Good. Let's strike back at the infernal Empire. Find four TIE fighters in the Corellia system and destroy them! Sound good?
			string_id message = new string_id (c_stringFile, "s_d31da604");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is my objective?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sounds like pay-back.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: The Force be with you.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30136a60");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5be6d3af");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1f7c77cd");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 166);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_370")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a couple more things for me.  Now, are you ready to get back to work?
			string_id message = new string_id (c_stringFile, "s_b979a424");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure. Why not.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Salute) Yes sir!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am more than ready, Kreezo.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c92d07b4");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5792c0f4");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e2d604a4");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_370");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 155);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch172 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] won quest 2 - not rewarded yet
	//-- NPC: Alliance HQ already sent word! You blasted those TIE fighters to dust! You wanna share some details?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: A magician never reveals his secrets!
	if (response == "s_b4ce2d62")
	{
		doAnimationAction (player, "point_to_self");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Well, if your 'magic' has anything to do with flying around and shooting... I think your secret is out! Good work anyhow, my friend!
			string_id message = new string_id (c_stringFile, "s_185a81f5");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: A magician never reveals her secrets!
	if (response == "s_c8cdb11")
	{
		doAnimationAction (player, "point_to_self");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Well, if your 'magic' has anything to do with flying around and shooting... I think your secret is out! Good work anyhow, my friend!
			string_id message = new string_id (c_stringFile, "s_377");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Provide a detailed report)
	if (response == "s_c4e77d66")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: Uh huh...
			string_id message = new string_id (c_stringFile, "s_50808c9f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Offer more details)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Wrap it up)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f90247ff");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_395");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 175);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't remember much.
	if (response == "s_656e3c93")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: That's unfortunate. You should really try to keep a firm grasp on what sorta techniques work for ya, and which ones will get ya killed.
			string_id message = new string_id (c_stringFile, "s_effe3ca0");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Good advice.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: And if a technique gets me killed?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_acafcf16");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7119a3c9");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 183);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch175 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Uh huh...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Offer more details)
	if (response == "s_f90247ff")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "yawn");

			//-- NPC: Really?
			string_id message = new string_id (c_stringFile, "s_2ea6d944");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Offer even more details)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Wrap it up)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a4654330");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_392");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 176);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Wrap it up)
	if (response == "s_395")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "yawn");

			//-- NPC: Sounds like it was quite a battle, then! Good work, pilot! Very good work!
			string_id message = new string_id (c_stringFile, "s_397");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch176 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Really?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Offer even more details)
	if (response == "s_a4654330")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: You don't say...
			string_id message = new string_id (c_stringFile, "s_19cd5919");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Still more details...)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Wrap it up)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: (End with a humorous anecdote)
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a61f252c");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b756c0a2");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3adab64");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 177);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Wrap it up)
	if (response == "s_392")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "yawn");

			//-- NPC: Sounds like it was quite a battle, then! Good work, pilot! Very good work!
			string_id message = new string_id (c_stringFile, "s_42ab2360");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch177 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You don't say...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Still more details...)
	if (response == "s_a61f252c")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: Uh huh...
			string_id message = new string_id (c_stringFile, "s_386");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Offer more details)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Wrap it up)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f90247ff");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_395");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 175);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Wrap it up)
	if (response == "s_b756c0a2")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "yawn");

			//-- NPC: Well... good, then. Good work!
			string_id message = new string_id (c_stringFile, "s_729ae5dc");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (End with a humorous anecdote)
	if (response == "s_3adab64")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "belly_laugh");

			//-- NPC: HA! ...like a squill in a barrel of Jawa beer! You're a card! Hope you don't get fried out there, my friend!
			string_id message = new string_id (c_stringFile, "s_d4d02ce5");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch178 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Uh huh...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Offer more details)
	if (response == "s_f90247ff")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "yawn");

			//-- NPC: Really?
			string_id message = new string_id (c_stringFile, "s_2ea6d944");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Offer even more details)
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Wrap it up)
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a4654330");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_392");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 176);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Wrap it up)
	if (response == "s_395")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "yawn");

			//-- NPC: Sounds like it was quite a battle, then! Good work, pilot! Very good work!
			string_id message = new string_id (c_stringFile, "s_397");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch183 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That's unfortunate. You should really try to keep a firm grasp on what sorta techniques work for ya, and which ones will get ya killed.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Good advice.
	if (response == "s_acafcf16")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: You're right! Thanks, and good work! Check back with me later...
			string_id message = new string_id (c_stringFile, "s_a8e97b79");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: And if a technique gets me killed?
	if (response == "s_7119a3c9")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: Um... try to forget it, I guess.
			string_id message = new string_id (c_stringFile, "s_57881f7b");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch186 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We have terrible news from Alliance HQ. A refugee convoy was attacked by TIE fighters. Their fighter escort held the TIEs long enough for the transport to escape... but now the transport is lost...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You need me to find it, right?
	if (response == "s_af95b1e2")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			corellia_rebel_trainer_1_action_grantQuestThree (player, npc);

			//-- NPC: Am I that obvious? Search for the transport. When you find it - escort it out of the system before the Empire can finish 'em off, okay?
			string_id message = new string_id (c_stringFile, "s_e564c71b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I look?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is this trans so important?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on it!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ad33f74a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3f36d6ff");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b897f5e1");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 187);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Salute) For the Alliance!
	if (response == "s_49bfaf2")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_shoulders");

			//-- NPC: Do you even know what HQ wants you to do?
			string_id message = new string_id (c_stringFile, "s_82d3ef4");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Find the transport, right?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Not really.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_59f3a8d");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3269c6d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 192);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Refugees?! Those monsters!
	if (response == "s_5adefc5c")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestThree (player, npc);

			//-- NPC: You said it! We need you to track down the transport and escort it safely out of Corellia space. You ready?
			string_id message = new string_id (c_stringFile, "s_1bd844f1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm on my way.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where was it last seen?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_432");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bccfa654");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 198);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_438")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a couple more things for me.  Now, about that lost transport...
			string_id message = new string_id (c_stringFile, "s_190d7fcd");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You need me to find it, right?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Salute) For the Alliance!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Refugees?! Those monsters!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_af95b1e2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49bfaf2");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5adefc5c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_438");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 186);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch187 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Am I that obvious? Search for the transport. When you find it - escort it out of the system before the Empire can finish 'em off, okay?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where do I look?
	if (response == "s_ad33f74a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: We'll upload a suite of navigation points that are likely candidates. The transport pilot is no slouch - he will be trying to get back to friendly territory as soon as he can. From what I heard, they're pretty badly damaged.
			string_id message = new string_id (c_stringFile, "s_86cd4fa8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I look?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is this trans so important?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on it!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ad33f74a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3f36d6ff");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b897f5e1");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 187);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why is this trans so important?
	if (response == "s_3f36d6ff")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: They're civilian refugees, man! Some Gungan, some Human, and a handful of MonCal... just trying to live their lives here in the shadow of the Empire. We need to teach these Imps that wanton violence like this won't go unpunished!
			string_id message = new string_id (c_stringFile, "s_5f75a31a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I look?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is this trans so important?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on it!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ad33f74a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3f36d6ff");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b897f5e1");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 187);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: They're civilian refugees, honey! Some Gungan, some Human, and a handful of MonCal... just trying to live their lives here in the shadow of the Empire. We need to teach these Imps that wanton violence like this won't go unpunished!
			string_id message = new string_id (c_stringFile, "s_6076cccb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I look?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is this trans so important?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on it!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ad33f74a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3f36d6ff");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b897f5e1");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 187);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on it!
	if (response == "s_b897f5e1")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: Go get 'em!
			string_id message = new string_id (c_stringFile, "s_6bed0484");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch188 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We'll upload a suite of navigation points that are likely candidates. The transport pilot is no slouch - he will be trying to get back to friendly territory as soon as he can. From what I heard, they're pretty badly damaged.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where do I look?
	if (response == "s_ad33f74a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: We'll upload a suite of navigation points that are likely candidates. The transport pilot is no slouch - he will be trying to get back to friendly territory as soon as he can. From what I heard, they're pretty badly damaged.
			string_id message = new string_id (c_stringFile, "s_86cd4fa8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I look?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is this trans so important?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on it!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ad33f74a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3f36d6ff");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b897f5e1");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 187);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why is this trans so important?
	if (response == "s_3f36d6ff")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: They're civilian refugees, man! Some Gungan, some Human, and a handful of MonCal... just trying to live their lives here in the shadow of the Empire. We need to teach these Imps that wanton violence like this won't go unpunished!
			string_id message = new string_id (c_stringFile, "s_5f75a31a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I look?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is this trans so important?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on it!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ad33f74a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3f36d6ff");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b897f5e1");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 187);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: They're civilian refugees, honey! Some Gungan, some Human, and a handful of MonCal... just trying to live their lives here in the shadow of the Empire. We need to teach these Imps that wanton violence like this won't go unpunished!
			string_id message = new string_id (c_stringFile, "s_6076cccb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I look?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is this trans so important?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on it!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ad33f74a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3f36d6ff");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b897f5e1");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 187);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on it!
	if (response == "s_b897f5e1")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: Go get 'em!
			string_id message = new string_id (c_stringFile, "s_6bed0484");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch189 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: They're civilian refugees, man! Some Gungan, some Human, and a handful of MonCal... just trying to live their lives here in the shadow of the Empire. We need to teach these Imps that wanton violence like this won't go unpunished!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where do I look?
	if (response == "s_ad33f74a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: We'll upload a suite of navigation points that are likely candidates. The transport pilot is no slouch - he will be trying to get back to friendly territory as soon as he can. From what I heard, they're pretty badly damaged.
			string_id message = new string_id (c_stringFile, "s_86cd4fa8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I look?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is this trans so important?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on it!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ad33f74a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3f36d6ff");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b897f5e1");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 187);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why is this trans so important?
	if (response == "s_3f36d6ff")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: They're civilian refugees, man! Some Gungan, some Human, and a handful of MonCal... just trying to live their lives here in the shadow of the Empire. We need to teach these Imps that wanton violence like this won't go unpunished!
			string_id message = new string_id (c_stringFile, "s_5f75a31a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I look?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is this trans so important?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on it!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ad33f74a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3f36d6ff");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b897f5e1");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 187);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: They're civilian refugees, honey! Some Gungan, some Human, and a handful of MonCal... just trying to live their lives here in the shadow of the Empire. We need to teach these Imps that wanton violence like this won't go unpunished!
			string_id message = new string_id (c_stringFile, "s_6076cccb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I look?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is this trans so important?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on it!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ad33f74a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3f36d6ff");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b897f5e1");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 187);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on it!
	if (response == "s_b897f5e1")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: Go get 'em!
			string_id message = new string_id (c_stringFile, "s_6bed0484");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch190 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: They're civilian refugees, honey! Some Gungan, some Human, and a handful of MonCal... just trying to live their lives here in the shadow of the Empire. We need to teach these Imps that wanton violence like this won't go unpunished!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where do I look?
	if (response == "s_ad33f74a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: We'll upload a suite of navigation points that are likely candidates. The transport pilot is no slouch - he will be trying to get back to friendly territory as soon as he can. From what I heard, they're pretty badly damaged.
			string_id message = new string_id (c_stringFile, "s_86cd4fa8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I look?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is this trans so important?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on it!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ad33f74a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3f36d6ff");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b897f5e1");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 187);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why is this trans so important?
	if (response == "s_3f36d6ff")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: They're civilian refugees, man! Some Gungan, some Human, and a handful of MonCal... just trying to live their lives here in the shadow of the Empire. We need to teach these Imps that wanton violence like this won't go unpunished!
			string_id message = new string_id (c_stringFile, "s_5f75a31a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I look?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is this trans so important?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on it!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ad33f74a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3f36d6ff");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b897f5e1");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 187);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: They're civilian refugees, honey! Some Gungan, some Human, and a handful of MonCal... just trying to live their lives here in the shadow of the Empire. We need to teach these Imps that wanton violence like this won't go unpunished!
			string_id message = new string_id (c_stringFile, "s_6076cccb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I look?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is this trans so important?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on it!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ad33f74a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3f36d6ff");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b897f5e1");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 187);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on it!
	if (response == "s_b897f5e1")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: Go get 'em!
			string_id message = new string_id (c_stringFile, "s_6bed0484");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch192 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Do you even know what HQ wants you to do?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Find the transport, right?
	if (response == "s_59f3a8d")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			corellia_rebel_trainer_1_action_grantQuestThree (player, npc);

			//-- NPC: You got it. We'll upload a suite of navigation points to help you. If HQ gets a lock on the transport, you'll be redirected to its position.
			string_id message = new string_id (c_stringFile, "s_f39351f2");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not really.
	if (response == "s_3269c6d")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			corellia_rebel_trainer_1_action_grantQuestThree (player, npc);

			//-- NPC: We need you to search Corellia space for the refugee transport. If you find it - escort it out of the system safely. If HQ finds it first, they will redirect you to a rally point where you'll meet up with the transport.
			string_id message = new string_id (c_stringFile, "s_51398083");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm on my way.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Redirect?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e42b260e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3bee14c0");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 194);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch194 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We need you to search Corellia space for the refugee transport. If you find it - escort it out of the system safely. If HQ finds it first, they will redirect you to a rally point where you'll meet up with the transport.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on my way.
	if (response == "s_e42b260e")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Good luck!
			string_id message = new string_id (c_stringFile, "s_422");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Redirect?
	if (response == "s_3bee14c0")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: Yeah. Likely the transport will be trying to comm Alliance HQ. If they get through - they'll coordinate with them to find a rally point. You fly there - take over the escort, and make sure the transport leaves Corellia space in one piece.
			string_id message = new string_id (c_stringFile, "s_564340f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm on my way!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_426");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 196);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch196 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yeah. Likely the transport will be trying to comm Alliance HQ. If they get through - they'll coordinate with them to find a rally point. You fly there - take over the escort, and make sure the transport leaves Corellia space in one piece.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on my way!
	if (response == "s_426")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Good luck!
			string_id message = new string_id (c_stringFile, "s_428");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch198 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You said it! We need you to track down the transport and escort it safely out of Corellia space. You ready?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on my way.
	if (response == "s_432")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave2");

			//-- NPC: Good luck!
			string_id message = new string_id (c_stringFile, "s_434");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where was it last seen?
	if (response == "s_bccfa654")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: No idea. The comm traffic is a mess. We've got their navigation route, though. I'll upload that to your ship so you can follow their path.
			string_id message = new string_id (c_stringFile, "s_e2e4a27d");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch201 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a couple more things for me.  Now, about that lost transport...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You need me to find it, right?
	if (response == "s_af95b1e2")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			corellia_rebel_trainer_1_action_grantQuestThree (player, npc);

			//-- NPC: Am I that obvious? Search for the transport. When you find it - escort it out of the system before the Empire can finish 'em off, okay?
			string_id message = new string_id (c_stringFile, "s_e564c71b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I look?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is this trans so important?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm on it!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ad33f74a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3f36d6ff");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b897f5e1");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 187);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Salute) For the Alliance!
	if (response == "s_49bfaf2")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_shoulders");

			//-- NPC: Do you even know what HQ wants you to do?
			string_id message = new string_id (c_stringFile, "s_82d3ef4");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Find the transport, right?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Not really.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_59f3a8d");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3269c6d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 192);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Refugees?! Those monsters!
	if (response == "s_5adefc5c")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestThree (player, npc);

			//-- NPC: You said it! We need you to track down the transport and escort it safely out of Corellia space. You ready?
			string_id message = new string_id (c_stringFile, "s_1bd844f1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm on my way.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where was it last seen?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_432");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bccfa654");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 198);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_438")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Slow down, there, %NU.  I need to know you can be trusted to complete assignments as they are given.  I'll train you AFTER you've finished doing a couple more things for me.  Now, about that lost transport...
			string_id message = new string_id (c_stringFile, "s_190d7fcd");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You need me to find it, right?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Salute) For the Alliance!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Refugees?! Those monsters!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_af95b1e2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49bfaf2");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5adefc5c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_438");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 186);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch202 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hey! So what happened up there?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Standard space-hero stuff.
	if (response == "s_e37282e3")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "laugh");

			corellia_rebel_trainer_1_action_giveRewardQuest3 (player, npc);

			//-- NPC: Ha! Excellent! Keep up the heroics! There'll be more for you to do later. Check back with me after you get some rest.  Also, I think you've earned this.
			string_id message = new string_id (c_stringFile, "s_7bebfa97");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is it?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1c8bddbb");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 203);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			corellia_rebel_trainer_1_action_giveRewardQuest3 (player, npc);

			//-- NPC: You're one in a million. You know that? Just keep it up. There will be more opportunities to use your heroism in the future. Check back with me after you catch some rest, okay?  And hey, I think you've earned the right to wear this.
			string_id message = new string_id (c_stringFile, "s_8bc574b8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is it?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1c8bddbb");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 203);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Salute) The Alliance transport has been rescued!
	if (response == "s_9df39ab2")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			corellia_rebel_trainer_1_action_giveRewardQuest3 (player, npc);

			//-- NPC: Affirmative! Outstanding! Heh... take some time off and swing back by when you're ready for the next assignment, soldier!  Also, I've got something for you...
			string_id message = new string_id (c_stringFile, "s_41fb4738");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is it?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1c8bddbb");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 203);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Mission accomplished.
	if (response == "s_20ef9c42")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: Any Imperial entanglements?
			string_id message = new string_id (c_stringFile, "s_40b1665a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Nothing I couldn't handle.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: They seemed bent on killing those refugees!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_766563c7");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2d736852");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 208);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch203 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ha! Excellent! Keep up the heroics! There'll be more for you to do later. Check back with me after you get some rest.  Also, I think you've earned this.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is it?
	if (response == "s_1c8bddbb")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isWookieeOrIthorian (player, npc))
		{
			//-- NPC: It's a multi-pocket bandolier.  It'll help you keep your things organized.
			string_id message = new string_id (c_stringFile, "s_88620d24");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: It's a flight suit!  You'll look like a real soldier in this, huh?
			string_id message = new string_id (c_stringFile, "s_420fb842");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch206 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You're one in a million. You know that? Just keep it up. There will be more opportunities to use your heroism in the future. Check back with me after you catch some rest, okay?  And hey, I think you've earned the right to wear this.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is it?
	if (response == "s_1c8bddbb")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isWookieeOrIthorian (player, npc))
		{
			//-- NPC: It's a multi-pocket bandolier.  It'll help you keep your things organized.
			string_id message = new string_id (c_stringFile, "s_88620d24");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: It's a flight suit!  You'll look like a real soldier in this, huh?
			string_id message = new string_id (c_stringFile, "s_420fb842");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch207 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Affirmative! Outstanding! Heh... take some time off and swing back by when you're ready for the next assignment, soldier!  Also, I've got something for you...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is it?
	if (response == "s_1c8bddbb")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isWookieeOrIthorian (player, npc))
		{
			//-- NPC: It's a multi-pocket bandolier.  It'll help you keep your things organized.
			string_id message = new string_id (c_stringFile, "s_88620d24");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: It's a flight suit!  You'll look like a real soldier in this, huh?
			string_id message = new string_id (c_stringFile, "s_420fb842");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch208 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Any Imperial entanglements?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Nothing I couldn't handle.
	if (response == "s_766563c7")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			corellia_rebel_trainer_1_action_giveRewardQuest3 (player, npc);

			//-- NPC: Of course not. You're really gaining quite a reputation around here. Take some time for yourself. Come back here when you're ready to fly again, but in the meantime, check this out...
			string_id message = new string_id (c_stringFile, "s_ff6358f3");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is it?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1c8bddbb");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 203);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: They seemed bent on killing those refugees!
	if (response == "s_2d736852")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slump_head");

			corellia_rebel_trainer_1_action_giveRewardQuest3 (player, npc);

			//-- NPC: Yeah. The Empire isn't interested in simple military victory, it seems. They're up to something much more sinister... But oh!  I have something for you.
			string_id message = new string_id (c_stringFile, "s_3a1791eb");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch209 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Of course not. You're really gaining quite a reputation around here. Take some time for yourself. Come back here when you're ready to fly again, but in the meantime, check this out...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is it?
	if (response == "s_1c8bddbb")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isWookieeOrIthorian (player, npc))
		{
			//-- NPC: It's a multi-pocket bandolier.  It'll help you keep your things organized.
			string_id message = new string_id (c_stringFile, "s_88620d24");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: It's a flight suit!  You'll look like a real soldier in this, huh?
			string_id message = new string_id (c_stringFile, "s_420fb842");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch211 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hey! Good to see ya again. Got a new mission brewing. You are going to LOVE this!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: All right. Let's hear it!
	if (response == "s_1bdcc6fa")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestFour (player, npc);

			//-- NPC: Most of the grief we've been getting here in Corellia can be traced back to a single operation and a lone commander. Believe it or not... we know right were to find this guy! And, you're gonna bring him down!
			string_id message = new string_id (c_stringFile, "s_96595faf");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who's this commander?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where will I find him?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You're the cause of my grief, Kreezo.
			boolean hasResponse2 = false;
			if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Sounds easy enough, I'll take care of it!
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_492633c2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44ca831b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_632bed94");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6f169e12");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 212);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Salute) Affirmative!
	if (response == "s_6b490480")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestFour (player, npc);

			//-- NPC: Most of our problems here in Corellia are the work of one TIE Veteran pilot. He's moved a lot of trainees into the area with hopes of overwhelming us with superior numbers. We want you to take him out. It'll set the Empire back pretty far, I think...
			string_id message = new string_id (c_stringFile, "s_75a759b0");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Salute) Yes sir!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How will I know this pilot?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_469");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_87a8cca7");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 217);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: For the Alliance... always.
	if (response == "s_2477af4a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestFour (player, npc);

			//-- NPC: So you know - the operations being carried out against our transports are the work of one lone commander. The Empire dispatched him here some time ago. His mission is to destabilize Alliance traffic so that they can capture our munitions, and kidnap our special-operations personnel.
			string_id message = new string_id (c_stringFile, "s_1f34ee71");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What more do we know of this TIE veteran?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What other targets are in the area?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will bring honor to the Alliance.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cf04e474");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d779178a");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52e212a5");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 221);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_484")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Not quite yet, %NU.  I just need for you to complete one more assignment.  Are you up for it?
			string_id message = new string_id (c_stringFile, "s_b8281380");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: All right. Let's hear it!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Salute) Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: For the Alliance... always.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1bdcc6fa");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6b490480");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2477af4a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_484");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 211);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch212 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Most of the grief we've been getting here in Corellia can be traced back to a single operation and a lone commander. Believe it or not... we know right were to find this guy! And, you're gonna bring him down!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who's this commander?
	if (response == "s_492633c2")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: He's an old Imperial Ace pilot traveling incognito. He'll be flying a standard TIE fighter. Your targeting system will recognize his signal as that of a 'TIE Veteran' pilot.
			string_id message = new string_id (c_stringFile, "s_7f50c50e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who's this commander?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where will I find him?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You're the cause of my grief, Kreezo.
			boolean hasResponse2 = false;
			if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Sounds easy enough, I'll take care of it!
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_492633c2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44ca831b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_632bed94");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6f169e12");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 212);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where will I find him?
	if (response == "s_44ca831b")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: We have a nav point for you. Very likely he can be found in this area along with several of his trainees. Be careful - they're just trainees... but there might be a lot of them.
			string_id message = new string_id (c_stringFile, "s_3de34560");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who's this commander?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where will I find him?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You're the cause of my grief, Kreezo.
			boolean hasResponse2 = false;
			if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Sounds easy enough, I'll take care of it!
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_492633c2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44ca831b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_632bed94");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6f169e12");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 212);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're the cause of my grief, Kreezo.
	if (response == "s_632bed94")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slump_head");

			//-- NPC: Aw. How could you say that? After all I've done for you?
			string_id message = new string_id (c_stringFile, "s_e66b30af");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who's this commander?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where will I find him?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You're the cause of my grief, Kreezo.
			boolean hasResponse2 = false;
			if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Sounds easy enough, I'll take care of it!
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_492633c2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44ca831b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_632bed94");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6f169e12");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 212);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds easy enough, I'll take care of it!
	if (response == "s_6f169e12")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			doAnimationAction (player, "goodbye");

			//-- NPC: I'm sure you will, don't get too confident though. Good luck!
			string_id message = new string_id (c_stringFile, "s_4aa8e211");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch213 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: He's an old Imperial Ace pilot traveling incognito. He'll be flying a standard TIE fighter. Your targeting system will recognize his signal as that of a 'TIE Veteran' pilot.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who's this commander?
	if (response == "s_492633c2")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: He's an old Imperial Ace pilot traveling incognito. He'll be flying a standard TIE fighter. Your targeting system will recognize his signal as that of a 'TIE Veteran' pilot.
			string_id message = new string_id (c_stringFile, "s_7f50c50e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who's this commander?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where will I find him?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You're the cause of my grief, Kreezo.
			boolean hasResponse2 = false;
			if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Sounds easy enough, I'll take care of it!
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_492633c2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44ca831b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_632bed94");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6f169e12");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 212);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where will I find him?
	if (response == "s_44ca831b")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: We have a nav point for you. Very likely he can be found in this area along with several of his trainees. Be careful - they're just trainees... but there might be a lot of them.
			string_id message = new string_id (c_stringFile, "s_3de34560");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who's this commander?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where will I find him?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You're the cause of my grief, Kreezo.
			boolean hasResponse2 = false;
			if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Sounds easy enough, I'll take care of it!
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_492633c2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44ca831b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_632bed94");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6f169e12");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 212);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're the cause of my grief, Kreezo.
	if (response == "s_632bed94")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slump_head");

			//-- NPC: Aw. How could you say that? After all I've done for you?
			string_id message = new string_id (c_stringFile, "s_e66b30af");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who's this commander?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where will I find him?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You're the cause of my grief, Kreezo.
			boolean hasResponse2 = false;
			if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Sounds easy enough, I'll take care of it!
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_492633c2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44ca831b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_632bed94");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6f169e12");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 212);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds easy enough, I'll take care of it!
	if (response == "s_6f169e12")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			doAnimationAction (player, "goodbye");

			//-- NPC: I'm sure you will, don't get too confident though. Good luck!
			string_id message = new string_id (c_stringFile, "s_4aa8e211");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch214 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We have a nav point for you. Very likely he can be found in this area along with several of his trainees. Be careful - they're just trainees... but there might be a lot of them.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who's this commander?
	if (response == "s_492633c2")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: He's an old Imperial Ace pilot traveling incognito. He'll be flying a standard TIE fighter. Your targeting system will recognize his signal as that of a 'TIE Veteran' pilot.
			string_id message = new string_id (c_stringFile, "s_7f50c50e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who's this commander?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where will I find him?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You're the cause of my grief, Kreezo.
			boolean hasResponse2 = false;
			if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Sounds easy enough, I'll take care of it!
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_492633c2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44ca831b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_632bed94");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6f169e12");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 212);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where will I find him?
	if (response == "s_44ca831b")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: We have a nav point for you. Very likely he can be found in this area along with several of his trainees. Be careful - they're just trainees... but there might be a lot of them.
			string_id message = new string_id (c_stringFile, "s_3de34560");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who's this commander?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where will I find him?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You're the cause of my grief, Kreezo.
			boolean hasResponse2 = false;
			if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Sounds easy enough, I'll take care of it!
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_492633c2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44ca831b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_632bed94");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6f169e12");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 212);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're the cause of my grief, Kreezo.
	if (response == "s_632bed94")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slump_head");

			//-- NPC: Aw. How could you say that? After all I've done for you?
			string_id message = new string_id (c_stringFile, "s_e66b30af");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who's this commander?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where will I find him?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You're the cause of my grief, Kreezo.
			boolean hasResponse2 = false;
			if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Sounds easy enough, I'll take care of it!
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_492633c2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44ca831b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_632bed94");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6f169e12");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 212);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds easy enough, I'll take care of it!
	if (response == "s_6f169e12")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			doAnimationAction (player, "goodbye");

			//-- NPC: I'm sure you will, don't get too confident though. Good luck!
			string_id message = new string_id (c_stringFile, "s_4aa8e211");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch215 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Aw. How could you say that? After all I've done for you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who's this commander?
	if (response == "s_492633c2")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: He's an old Imperial Ace pilot traveling incognito. He'll be flying a standard TIE fighter. Your targeting system will recognize his signal as that of a 'TIE Veteran' pilot.
			string_id message = new string_id (c_stringFile, "s_7f50c50e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who's this commander?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where will I find him?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You're the cause of my grief, Kreezo.
			boolean hasResponse2 = false;
			if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Sounds easy enough, I'll take care of it!
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_492633c2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44ca831b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_632bed94");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6f169e12");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 212);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where will I find him?
	if (response == "s_44ca831b")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: We have a nav point for you. Very likely he can be found in this area along with several of his trainees. Be careful - they're just trainees... but there might be a lot of them.
			string_id message = new string_id (c_stringFile, "s_3de34560");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who's this commander?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where will I find him?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You're the cause of my grief, Kreezo.
			boolean hasResponse2 = false;
			if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Sounds easy enough, I'll take care of it!
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_492633c2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44ca831b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_632bed94");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6f169e12");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 212);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're the cause of my grief, Kreezo.
	if (response == "s_632bed94")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slump_head");

			//-- NPC: Aw. How could you say that? After all I've done for you?
			string_id message = new string_id (c_stringFile, "s_e66b30af");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who's this commander?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where will I find him?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You're the cause of my grief, Kreezo.
			boolean hasResponse2 = false;
			if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Sounds easy enough, I'll take care of it!
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_492633c2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44ca831b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_632bed94");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6f169e12");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 212);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds easy enough, I'll take care of it!
	if (response == "s_6f169e12")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			doAnimationAction (player, "goodbye");

			//-- NPC: I'm sure you will, don't get too confident though. Good luck!
			string_id message = new string_id (c_stringFile, "s_4aa8e211");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch217 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Most of our problems here in Corellia are the work of one TIE Veteran pilot. He's moved a lot of trainees into the area with hopes of overwhelming us with superior numbers. We want you to take him out. It'll set the Empire back pretty far, I think...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Salute) Yes sir!
	if (response == "s_469")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Good luck, man.
			string_id message = new string_id (c_stringFile, "s_fe6d50dd");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Good luck.
			string_id message = new string_id (c_stringFile, "s_472");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How will I know this pilot?
	if (response == "s_87a8cca7")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: He's a veteran pilot traveling incognito. Should be in a standard TIE fighter. Your tactical computer will recognize his signal as a 'TIE Veteran.'
			string_id message = new string_id (c_stringFile, "s_72767fa4");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Salute) Yes sir!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How will I know this pilot?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_469");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_87a8cca7");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 217);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch220 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: He's a veteran pilot traveling incognito. Should be in a standard TIE fighter. Your tactical computer will recognize his signal as a 'TIE Veteran.'

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Salute) Yes sir!
	if (response == "s_469")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Good luck, man.
			string_id message = new string_id (c_stringFile, "s_fe6d50dd");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Good luck.
			string_id message = new string_id (c_stringFile, "s_472");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How will I know this pilot?
	if (response == "s_87a8cca7")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: He's a veteran pilot traveling incognito. Should be in a standard TIE fighter. Your tactical computer will recognize his signal as a 'TIE Veteran.'
			string_id message = new string_id (c_stringFile, "s_72767fa4");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Salute) Yes sir!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How will I know this pilot?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_469");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_87a8cca7");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 217);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch221 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So you know - the operations being carried out against our transports are the work of one lone commander. The Empire dispatched him here some time ago. His mission is to destabilize Alliance traffic so that they can capture our munitions, and kidnap our special-operations personnel.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What more do we know of this TIE veteran?
	if (response == "s_cf04e474")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: This TIE pilot is flying a standard fighter. Your tactical computer will recognize him as a 'TIE Veteran.'
			string_id message = new string_id (c_stringFile, "s_6d453fbf");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What more do we know of this TIE veteran?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What other targets are in the area?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will bring honor to the Alliance.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cf04e474");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d779178a");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52e212a5");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 221);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What other targets are in the area?
	if (response == "s_d779178a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Expect the rally point to be patrolled by junior TIE cadets. They will be quick to respond if they see you first - so be very careful. Keep your eye out for the veteran TIE fighter pilot, eliminate him, and get back here as soon as you can.
			string_id message = new string_id (c_stringFile, "s_c3d77bb4");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What more do we know of this TIE veteran?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What other targets are in the area?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will bring honor to the Alliance.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cf04e474");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d779178a");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52e212a5");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 221);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will bring honor to the Alliance.
	if (response == "s_52e212a5")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			//-- NPC: Just bring us victory, my friend.
			string_id message = new string_id (c_stringFile, "s_f11f8879");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch222 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: This TIE pilot is flying a standard fighter. Your tactical computer will recognize him as a 'TIE Veteran.'

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What more do we know of this TIE veteran?
	if (response == "s_cf04e474")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: This TIE pilot is flying a standard fighter. Your tactical computer will recognize him as a 'TIE Veteran.'
			string_id message = new string_id (c_stringFile, "s_6d453fbf");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What more do we know of this TIE veteran?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What other targets are in the area?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will bring honor to the Alliance.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cf04e474");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d779178a");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52e212a5");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 221);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What other targets are in the area?
	if (response == "s_d779178a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Expect the rally point to be patrolled by junior TIE cadets. They will be quick to respond if they see you first - so be very careful. Keep your eye out for the veteran TIE fighter pilot, eliminate him, and get back here as soon as you can.
			string_id message = new string_id (c_stringFile, "s_c3d77bb4");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What more do we know of this TIE veteran?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What other targets are in the area?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will bring honor to the Alliance.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cf04e474");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d779178a");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52e212a5");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 221);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will bring honor to the Alliance.
	if (response == "s_52e212a5")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			//-- NPC: Just bring us victory, my friend.
			string_id message = new string_id (c_stringFile, "s_f11f8879");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch223 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Expect the rally point to be patrolled by junior TIE cadets. They will be quick to respond if they see you first - so be very careful. Keep your eye out for the veteran TIE fighter pilot, eliminate him, and get back here as soon as you can.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What more do we know of this TIE veteran?
	if (response == "s_cf04e474")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: This TIE pilot is flying a standard fighter. Your tactical computer will recognize him as a 'TIE Veteran.'
			string_id message = new string_id (c_stringFile, "s_6d453fbf");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What more do we know of this TIE veteran?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What other targets are in the area?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will bring honor to the Alliance.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cf04e474");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d779178a");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52e212a5");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 221);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What other targets are in the area?
	if (response == "s_d779178a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Expect the rally point to be patrolled by junior TIE cadets. They will be quick to respond if they see you first - so be very careful. Keep your eye out for the veteran TIE fighter pilot, eliminate him, and get back here as soon as you can.
			string_id message = new string_id (c_stringFile, "s_c3d77bb4");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What more do we know of this TIE veteran?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What other targets are in the area?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will bring honor to the Alliance.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cf04e474");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d779178a");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52e212a5");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 221);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will bring honor to the Alliance.
	if (response == "s_52e212a5")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			//-- NPC: Just bring us victory, my friend.
			string_id message = new string_id (c_stringFile, "s_f11f8879");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch225 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Not quite yet, %NU.  I just need for you to complete one more assignment.  Are you up for it?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: All right. Let's hear it!
	if (response == "s_1bdcc6fa")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestFour (player, npc);

			//-- NPC: Most of the grief we've been getting here in Corellia can be traced back to a single operation and a lone commander. Believe it or not... we know right were to find this guy! And, you're gonna bring him down!
			string_id message = new string_id (c_stringFile, "s_96595faf");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who's this commander?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Where will I find him?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You're the cause of my grief, Kreezo.
			boolean hasResponse2 = false;
			if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Sounds easy enough, I'll take care of it!
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_492633c2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44ca831b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_632bed94");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6f169e12");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 212);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Salute) Affirmative!
	if (response == "s_6b490480")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestFour (player, npc);

			//-- NPC: Most of our problems here in Corellia are the work of one TIE Veteran pilot. He's moved a lot of trainees into the area with hopes of overwhelming us with superior numbers. We want you to take him out. It'll set the Empire back pretty far, I think...
			string_id message = new string_id (c_stringFile, "s_75a759b0");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Salute) Yes sir!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How will I know this pilot?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_469");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_87a8cca7");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 217);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: For the Alliance... always.
	if (response == "s_2477af4a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_rebel_trainer_1_action_grantQuestFour (player, npc);

			//-- NPC: So you know - the operations being carried out against our transports are the work of one lone commander. The Empire dispatched him here some time ago. His mission is to destabilize Alliance traffic so that they can capture our munitions, and kidnap our special-operations personnel.
			string_id message = new string_id (c_stringFile, "s_1f34ee71");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What more do we know of this TIE veteran?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What other targets are in the area?
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will bring honor to the Alliance.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cf04e474");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d779178a");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52e212a5");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 221);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When will you train me?
	if (response == "s_484")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Not quite yet, %NU.  I just need for you to complete one more assignment.  Are you up for it?
			string_id message = new string_id (c_stringFile, "s_b8281380");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: All right. Let's hear it!
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Salute) Affirmative!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: For the Alliance... always.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: When will you train me?
			boolean hasResponse3 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1bdcc6fa");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6b490480");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2477af4a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_484");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 211);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch226 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I see you've survived!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That TIE Veteran was nothing.
	if (response == "s_83c26b3")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "bow");

			corellia_rebel_trainer_1_action_giveRewardQuest4 (player, npc);

			//-- NPC: You sure do impress me, sir. You're a great combat pilot. Check back with me any time you are ready for training.
			string_id message = new string_id (c_stringFile, "s_c85ee89f");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			corellia_rebel_trainer_1_action_giveRewardQuest4 (player, npc);

			//-- NPC: You sure do impress me, my lady. You're a great combat pilot. Check back with me any time you are ready for training.
			string_id message = new string_id (c_stringFile, "s_59125af6");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Salute) Affirmative!
	if (response == "s_491")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			corellia_rebel_trainer_1_action_giveRewardQuest4 (player, npc);

			//-- NPC: Great work, pilot! Please come back and see me if you are in need of training.
			string_id message = new string_id (c_stringFile, "s_29f6dd14");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Force is with me.
	if (response == "s_cade4505")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			doAnimationAction (npc, "bow");

			corellia_rebel_trainer_1_action_giveRewardQuest4 (player, npc);

			//-- NPC: Without a doubt, my friend. Return to me whenever you are ready for training.
			string_id message = new string_id (c_stringFile, "s_8464e33e");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			corellia_rebel_trainer_1_action_giveRewardQuest4 (player, npc);

			//-- NPC: Without a doubt, my lady. Return to me whenever you are ready for training.
			string_id message = new string_id (c_stringFile, "s_6a314d1b");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch232 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hi there! You now have all the experience you need to be trained in something new. I can teach you the proper handling of superior starfighters. Specifically, I can give you certifications to fly the Y-Wing. Are you interested in this?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_611")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "celebrate");

			corellia_rebel_trainer_1_action_grantSkillSTARSHIPS_01 (player, npc);

			//-- NPC: Congratulations. You are now rated to fly the Y-Wing starfighter.
			string_id message = new string_id (c_stringFile, "s_613");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch234 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You have enough experience for more training.  Are you ready to learn?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready.
	if (response == "s_614")
	{
		//-- [NOTE] 
		if (!corellia_rebel_trainer_1_condition_hasSkillSTARSHIPS_01 (player, npc))
		{
			//-- NPC: Good. I will teach you the proper handling of superior starfighters. Specifically, I can give you certifications to fly the Y-Wing. Are you interested in this?
			string_id message = new string_id (c_stringFile, "s_615");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_624");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 235);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!corellia_rebel_trainer_1_condition_hasSkillWEAPONS_01 (player, npc))
		{
			//-- NPC: Good. I will teach you to use more exotic, more effective components Are you interested in this?
			string_id message = new string_id (c_stringFile, "s_616");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_628");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 237);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!corellia_rebel_trainer_1_condition_hasSkillPROCEDURES_01 (player, npc))
		{
			//-- NPC: Good. I will give you access to special Alliance piloting abilities. Are you interested in this?
			string_id message = new string_id (c_stringFile, "s_617");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_632");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 239);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good. I will teach you droid programming that will help you enhance your starship in battle. Are you interested in this?
			string_id message = new string_id (c_stringFile, "s_618");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_636");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 241);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch235 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. I will teach you the proper handling of superior starfighters. Specifically, I can give you certifications to fly the Y-Wing. Are you interested in this?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_624")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "celebrate");

			corellia_rebel_trainer_1_action_purchaseStarshipSkill01 (player, npc);

			//-- NPC: Congratulations. You are now rated to fly the Y-Wing starfighter.
			string_id message = new string_id (c_stringFile, "s_626");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch237 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. I will teach you to use more exotic, more effective components Are you interested in this?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_628")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "celebrate1");

			corellia_rebel_trainer_1_action_purchaseWeaponSkill01 (player, npc);

			//-- NPC: Congratulations. You have achieved the first rank of Weapons specialization.
			string_id message = new string_id (c_stringFile, "s_630");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch239 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. I will give you access to special Alliance piloting abilities. Are you interested in this?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_632")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "celebrate1");

			corellia_rebel_trainer_1_action_purchaseProcedureSkill01 (player, npc);

			//-- NPC: Great! You are now a better Alliance pilot!
			string_id message = new string_id (c_stringFile, "s_634");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch241 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. I will teach you droid programming that will help you enhance your starship in battle. Are you interested in this?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_636")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "applause_excited");

			corellia_rebel_trainer_1_action_purchaseDroidSkill01 (player, npc);

			//-- NPC: Great! You now have basic droid programming abilities!
			string_id message = new string_id (c_stringFile, "s_638");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch243 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good to see you again. How are things going?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Things'd be better if I had a mission.
	if (response == "s_b4be0022")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh");

			//-- NPC: Ha! I bet! How about a duty mission then? We have openings in our patrol circuit for pilots who want to clear Corellia of Imperial fighters. There's also a dire need for fighter escorts. The Empire is cracking down on all freighters in this system...
			string_id message = new string_id (c_stringFile, "s_f7ed6410");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a duty mission?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Blasting TIE fighters sounds fun.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Protecting our escorts is the right thing for me.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6106187c");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14f13684");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e6de46a8");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 244);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Salute) Requesting a mission, sir!
	if (response == "s_83a93ead")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: There are some open duty missions, if you're interested. HQ wants volunteers for a long-range patrol. Sweep-and-clear sorta stuff. There's also a need for more fighter escorts... since we're shuffling a lot of resources here in Corellia space.
			string_id message = new string_id (c_stringFile, "s_78a5e1fa");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a duty mission?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Add me to the patrol duty roster, sir!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will protect the Alliance transports!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_589");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d3ba53db");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b17f599d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 248);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Our work is not finished, Kreezo.
	if (response == "s_e96daa14")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: I agree. The Empire is still giving us a lot of trouble here in Corellia. It's a very delicate balance. How do you wanna helping us out by taking a duty mission?
			string_id message = new string_id (c_stringFile, "s_a4bd6cd1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a duty mission?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I should sweep and clear Corellia space.
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I would like to protect Alliance transports.
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_599");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46fa0a69");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5c625403");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 252);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to join-up with the ground forces.
	if (response == "s_1b107d8a")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Woah!  I didn't see that coming!  You're sure you know what you're getting into?  You could be opening yourself to attack when you least expect it... even as a covert operative.
			string_id message = new string_id (c_stringFile, "s_28eea20");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I know
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_13d3df42");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 256);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch244 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ha! I bet! How about a duty mission then? We have openings in our patrol circuit for pilots who want to clear Corellia of Imperial fighters. There's also a dire need for fighter escorts. The Empire is cracking down on all freighters in this system...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a duty mission?
	if (response == "s_6106187c")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: A duty mission is THE best way to get experience as a pilot. I know that you're anxious to get training, and experience from these missions will get you there faster. Duty missions have no real end so you can just finish up whenever you want. What do you think?
			string_id message = new string_id (c_stringFile, "s_59bfc3b4");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a duty mission?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Add me to the patrol duty roster, sir!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will protect the Alliance transports!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_589");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d3ba53db");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b17f599d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 248);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Blasting TIE fighters sounds fun.
	if (response == "s_14f13684")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			corellia_rebel_trainer_1_action_grantDUTY_Destroy_01 (player, npc);

			//-- NPC: Well... be careful, then. Follow the navigation points and defeat any hostiles that come your way. These 'duty' missions have been prepared for you to gain some much needed space combat experience. You can return to the ground at any time when you feel that you have learned enough.
			string_id message = new string_id (c_stringFile, "s_10d17e63");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Protecting our escorts is the right thing for me.
	if (response == "s_e6de46a8")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			corellia_rebel_trainer_1_action_grantDUTY_Escort_01 (player, npc);

			//-- NPC: I'm sure the transport pilots would agree! Follow all nav points, and protect all transports that come under your supervision. These 'duty' missions have been prepared for you to gain some much needed space combat experience. You can return to the ground at any time when you feel that you have learned enough. Good luck!
			string_id message = new string_id (c_stringFile, "s_69e5db34");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch245 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A duty mission is THE best way to get experience as a pilot. I know that you're anxious to get training, and experience from these missions will get you there faster. Duty missions have no real end so you can just finish up whenever you want. What do you think?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a duty mission?
	if (response == "s_589")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: A duty mission is THE best way to get experience as a pilot. I know that you're anxious to get training, and experience from these missions will get you there faster. Duty missions have no real end so you can just finish up whenever you want. What do you think?
			string_id message = new string_id (c_stringFile, "s_591");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a duty mission?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Add me to the patrol duty roster, sir!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will protect the Alliance transports!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_589");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d3ba53db");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b17f599d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 248);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Add me to the patrol duty roster, sir!
	if (response == "s_d3ba53db")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			corellia_rebel_trainer_1_action_grantDUTY_Destroy_01 (player, npc);

			//-- NPC: Done. Fly into Corellia space and follow the nav points. Destroy any hostiles you encounter. Good luck!
			string_id message = new string_id (c_stringFile, "s_dc243da2");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will protect the Alliance transports!
	if (response == "s_b17f599d")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			corellia_rebel_trainer_1_action_grantDUTY_Escort_01 (player, npc);

			//-- NPC: That will make them very happy, pilot. Follow the navigation route and protect every Alliance transport that HQ puts under your care. I'll see ya when you're done.
			string_id message = new string_id (c_stringFile, "s_b282cc98");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch248 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There are some open duty missions, if you're interested. HQ wants volunteers for a long-range patrol. Sweep-and-clear sorta stuff. There's also a need for more fighter escorts... since we're shuffling a lot of resources here in Corellia space.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a duty mission?
	if (response == "s_589")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: A duty mission is THE best way to get experience as a pilot. I know that you're anxious to get training, and experience from these missions will get you there faster. Duty missions have no real end so you can just finish up whenever you want. What do you think?
			string_id message = new string_id (c_stringFile, "s_591");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a duty mission?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Add me to the patrol duty roster, sir!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will protect the Alliance transports!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_589");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d3ba53db");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b17f599d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 248);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Add me to the patrol duty roster, sir!
	if (response == "s_d3ba53db")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			corellia_rebel_trainer_1_action_grantDUTY_Destroy_01 (player, npc);

			//-- NPC: Done. Fly into Corellia space and follow the nav points. Destroy any hostiles you encounter. Good luck!
			string_id message = new string_id (c_stringFile, "s_dc243da2");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will protect the Alliance transports!
	if (response == "s_b17f599d")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			corellia_rebel_trainer_1_action_grantDUTY_Escort_01 (player, npc);

			//-- NPC: That will make them very happy, pilot. Follow the navigation route and protect every Alliance transport that HQ puts under your care. I'll see ya when you're done.
			string_id message = new string_id (c_stringFile, "s_b282cc98");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch249 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A duty mission is THE best way to get experience as a pilot. I know that you're anxious to get training, and experience from these missions will get you there faster. Duty missions have no real end so you can just finish up whenever you want. What do you think?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a duty mission?
	if (response == "s_589")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: A duty mission is THE best way to get experience as a pilot. I know that you're anxious to get training, and experience from these missions will get you there faster. Duty missions have no real end so you can just finish up whenever you want. What do you think?
			string_id message = new string_id (c_stringFile, "s_591");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a duty mission?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Add me to the patrol duty roster, sir!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will protect the Alliance transports!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_589");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d3ba53db");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b17f599d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 248);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Add me to the patrol duty roster, sir!
	if (response == "s_d3ba53db")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			corellia_rebel_trainer_1_action_grantDUTY_Destroy_01 (player, npc);

			//-- NPC: Done. Fly into Corellia space and follow the nav points. Destroy any hostiles you encounter. Good luck!
			string_id message = new string_id (c_stringFile, "s_dc243da2");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will protect the Alliance transports!
	if (response == "s_b17f599d")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			corellia_rebel_trainer_1_action_grantDUTY_Escort_01 (player, npc);

			//-- NPC: That will make them very happy, pilot. Follow the navigation route and protect every Alliance transport that HQ puts under your care. I'll see ya when you're done.
			string_id message = new string_id (c_stringFile, "s_b282cc98");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch252 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I agree. The Empire is still giving us a lot of trouble here in Corellia. It's a very delicate balance. How do you wanna helping us out by taking a duty mission?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a duty mission?
	if (response == "s_599")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: A duty mission is THE best way to get experience as a pilot. I know that you're anxious to get training, and experience from these missions will get you there faster. Duty missions have no real end so you can just finish up whenever you want. What do you think?
			string_id message = new string_id (c_stringFile, "s_601");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a duty mission?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Add me to the patrol duty roster, sir!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will protect the Alliance transports!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_589");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d3ba53db");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b17f599d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 248);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I should sweep and clear Corellia space.
	if (response == "s_46fa0a69")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			corellia_rebel_trainer_1_action_grantDUTY_Destroy_01 (player, npc);

			//-- NPC: Good idea. I've added you to the duty roster. Patrol the Corellia system and eliminate any hostiles you encounter. I'll see you when you're done.
			string_id message = new string_id (c_stringFile, "s_779b8c40");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to protect Alliance transports.
	if (response == "s_5c625403")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			corellia_rebel_trainer_1_action_grantDUTY_Escort_01 (player, npc);

			//-- NPC: Sounds like a plan. I'll upload your pilot ID to the escort duty roster. Our transports will comm you in space. Make sure they get to their destinations safely.
			string_id message = new string_id (c_stringFile, "s_d47c0f9c");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch253 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A duty mission is THE best way to get experience as a pilot. I know that you're anxious to get training, and experience from these missions will get you there faster. Duty missions have no real end so you can just finish up whenever you want. What do you think?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a duty mission?
	if (response == "s_589")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: A duty mission is THE best way to get experience as a pilot. I know that you're anxious to get training, and experience from these missions will get you there faster. Duty missions have no real end so you can just finish up whenever you want. What do you think?
			string_id message = new string_id (c_stringFile, "s_591");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a duty mission?
			boolean hasResponse0 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Add me to the patrol duty roster, sir!
			boolean hasResponse1 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I will protect the Alliance transports!
			boolean hasResponse2 = false;
			if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_589");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d3ba53db");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b17f599d");

				utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 248);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Add me to the patrol duty roster, sir!
	if (response == "s_d3ba53db")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			corellia_rebel_trainer_1_action_grantDUTY_Destroy_01 (player, npc);

			//-- NPC: Done. Fly into Corellia space and follow the nav points. Destroy any hostiles you encounter. Good luck!
			string_id message = new string_id (c_stringFile, "s_dc243da2");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will protect the Alliance transports!
	if (response == "s_b17f599d")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			corellia_rebel_trainer_1_action_grantDUTY_Escort_01 (player, npc);

			//-- NPC: That will make them very happy, pilot. Follow the navigation route and protect every Alliance transport that HQ puts under your care. I'll see ya when you're done.
			string_id message = new string_id (c_stringFile, "s_b282cc98");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_rebel_trainer_1_handleBranch256 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Woah!  I didn't see that coming!  You're sure you know what you're getting into?  You could be opening yourself to attack when you least expect it... even as a covert operative.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I know
	if (response == "s_13d3df42")
	{
		//-- [NOTE] 
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_chest");

			//-- NPC: Excellent!  The Rebel Alliance can use some more boots on the ground, too. You can change your level of commitment to the Rebellion using the /pvp command. This will allow you to switch between being a combatant and in special forces.
			string_id message = new string_id (c_stringFile, "s_2098126f");
			utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.corellia_rebel_trainer_1");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	setCondition( self, CONDITION_SPACE_INTERESTING );
	factions.setFaction( self, factions.FACTION_REBEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	setCondition( self, CONDITION_SPACE_INTERESTING );
	factions.setFaction( self, factions.FACTION_REBEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);

	faceTo( self, player );
	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.corellia_rebel_trainer_1");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (corellia_rebel_trainer_1_condition_hasVeryFirstQuest (player, npc))
	{
		doAnimationAction (npc, "point_away");

		//-- NPC: You've got your assignment, and the control device for your ship in your datapad.  Go to the Starport and access the terminal to launch into space.
		string_id message = new string_id (c_stringFile, "s_c19ed115");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: How do I complete my assignment?
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Where should I go now?
		boolean hasResponse1 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: My starship? In a datapad?
		boolean hasResponse2 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: How do I get back here?
		boolean hasResponse3 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_7d5c71fb");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_dda9e202");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_cb506bf8");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_4b0e9ff2");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 1);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!corellia_rebel_trainer_1_condition_hasSpaceExpansion (player, npc))
	{
		doAnimationAction (npc, "shake_head_no");

		//-- NPC: You don't look like a pilot to me.  There's nothing I can do for you.
		string_id message = new string_id (c_stringFile, "s_e8850b0f");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_rebel_trainer_1_condition_isPrivateerPilot (player, npc))
	{
		corellia_rebel_trainer_1_action_anim_greetSmuggler (player, npc);

		//-- NPC: The Alliance will have nothing to do with you bloodthirsty smugglers! Begone!
		string_id message = new string_id (c_stringFile, "s_25387b43");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Fine!
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm a CorSec pilot!
		boolean hasResponse1 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I'm a RSF Pilot!
		boolean hasResponse2 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_3fa4f0ff");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_34e352c7");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_a42bf003");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 7);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_rebel_trainer_1_condition_isImperialPilot (player, npc))
	{
		corellia_rebel_trainer_1_action_anim_greetImperial (player, npc);

		//-- NPC: You've got a lot of nerve coming here and talking to me, Imperial! Get out of here now!
		string_id message = new string_id (c_stringFile, "s_1a5bf5f0");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] This is what the NPC says when he talks to a player who is not currently signed-up with any pilot profession.
	if (!corellia_rebel_trainer_1_condition_hasNoviceSkillBox (player, npc))
	{
		doAnimationAction (npc, "greet");

		corellia_rebel_trainer_1_action_eraseClientPath (player, npc);

		//-- NPC: Haven't I seen you before? I am Kreezo of the Rebel Alliance. Yes - yes, we have met before! Are you still interested in becoming a Rebel fighter pilot?
		string_id message = new string_id (c_stringFile, "s_b40cd69a");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: (Shrug)
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I want to join the Rebellion!
		boolean hasResponse1 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: You don't know me, Kreezo.
		boolean hasResponse2 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_26a260");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_866deb6e");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_f5e65db0");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 12);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_rebel_trainer_1_condition_isNotRebel (player, npc))
	{
		//-- NPC: I am only authorized to work with Rebel agents %NU, try visiting one of our Recruiters in the area to sign up.
		string_id message = new string_id (c_stringFile, "s_94b9286d");
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!corellia_rebel_trainer_1_condition_onMyTrack (player, npc))
	{
		//-- NPC: Have we met? No? But you are a Rebel pilot, aren't you? What can I do for you?
		string_id message = new string_id (c_stringFile, "s_535b6177");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Do you have any missions I could fly?
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1583743c");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 79);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!corellia_rebel_trainer_1_condition_hasSpaceShip (player, npc))
	{
		doAnimationAction (npc, "nod_head_multiple");

		corellia_rebel_trainer_1_action_grantSpaceShip (player, npc);

		//-- NPC: I don't know how you expect to fly for the Rebel Alliance if you don't even have a ship!  Here, I'll add the control codes to your datapad for one of our low-end fighters.  You should upgrade this as soon as possible.
		string_id message = new string_id (c_stringFile, "s_d9d2746c");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] You are a member of the Smuggler's Alliance and you already have a quest.  Go do it!
	if (corellia_rebel_trainer_1_condition_hasRebelQuest (player, npc))
	{
		corellia_rebel_trainer_1_action_anim_pointUp (player, npc);

		//-- NPC: See that up there? That's space... You should be there finishing your mission. Right?
		string_id message = new string_id (c_stringFile, "s_790cea65");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_rebel_trainer_1_condition_has_GRADUATED_goto_LOK (player, npc))
	{
		doAnimationAction (npc, "shrug_shoulders");

		//-- NPC: What are you doing here? You should be working for Lady Viopa on Lok... right?
		string_id message = new string_id (c_stringFile, "s_24d9c943");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: How do I get there?
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_b3bebc5e");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 84);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] You have all the tier-1 skills, so would you like some tier-2 content?
	if (corellia_rebel_trainer_1_condition_hasAllTierOneSkills (player, npc))
	{
		doAnimationAction (npc, "shake_head_no");

		//-- NPC: Hey, so... the Alliance has asked me to recommend pilots that are ready for more challenge. Evidently something big is going on above planet Lok. Rebel Intelligence is all over it... and they need pilots.
		string_id message = new string_id (c_stringFile, "s_b2b30e20");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yeah, so?
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Let me at 'em!
		boolean hasResponse1 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_386363ba");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_c999ae60");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 86);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_rebel_trainer_1_condition_hasFailedQuestOne_PATROL (player, npc))
	{
		doAnimationAction (npc, "shrug_hands");

		//-- NPC: Okay, so what happened? We need that route data as soon as possible!
		string_id message = new string_id (c_stringFile, "s_67119f16");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I was unable to complete the mission.
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I aborted the mission.
		boolean hasResponse1 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2f6cbd7e");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_c549da6d");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 98);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_rebel_trainer_1_condition_hasFailedQuestOne (player, npc))
	{
		doAnimationAction (npc, "point_accusingly");

		//-- NPC: What happened on your patrol, pilot?
		string_id message = new string_id (c_stringFile, "s_e2d918c4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I was jumped by TIE fighters.
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I couldn't finish the mission.
		boolean hasResponse1 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_328afd9b");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_e8f4f19d");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 102);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_rebel_trainer_1_condition_hasFailedQuestTwo (player, npc))
	{
		doAnimationAction (npc, "listen");

		//-- NPC: So let's hear all the gory details.
		string_id message = new string_id (c_stringFile, "s_e46d50f4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I couldn't kill them all.
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Give me another chance!
		boolean hasResponse1 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: There were too many of them.
		boolean hasResponse2 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_5f930245");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_8b760dea");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_9c5aabe");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 113);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_rebel_trainer_1_condition_hasFailedQuestThree (player, npc))
	{
		doAnimationAction (npc, "explain");

		//-- NPC: So, lucky for you that wasn't the last refugee transport from the convoy. You ready to try again?
		string_id message = new string_id (c_stringFile, "s_43092a4a");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Guess so.
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Right away, sir!
		boolean hasResponse1 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Without question.
		boolean hasResponse2 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2a1af6a8");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_64355c70");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_e102b38d");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 117);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_rebel_trainer_1_condition_hasFailedQuestFour (player, npc))
	{
		doAnimationAction (npc, "shake_head_no");

		//-- NPC: Too much for you, huh?
		string_id message = new string_id (c_stringFile, "s_3339950");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: They got lucky.
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No, sir! Again, sir!
		boolean hasResponse1 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I won't fail a second time.
		boolean hasResponse2 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_af180d19");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_afd8ea50");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_d2b22f30");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 122);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] grantQuest 1
	if (!corellia_rebel_trainer_1_condition_hasCompletedQuestOne (player, npc))
	{
		//-- NPC: Hey there! Ready to get started?
		string_id message = new string_id (c_stringFile, "s_ae0c01b4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: (Shrug and smile.)
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Affirmative!
		boolean hasResponse1 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I am ready, Kreezo.
		boolean hasResponse2 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: When will you train me?
		boolean hasResponse3 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_d731f764");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_90377ed4");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_b4bce31a");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_b39049de");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 126);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] Completed quest 1 - no reward yet
	if (!corellia_rebel_trainer_1_condition_beenRewardedForQuestOne (player, npc))
	{
		doAnimationAction (npc, "salute2");

		//-- NPC: So, let's hear it! What happened out there?
		string_id message = new string_id (c_stringFile, "s_66010040");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: TIE Fighters attacked me!
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: The patrol was interrupted by an Imperial ambush!
		boolean hasResponse1 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Nothing special.
		boolean hasResponse2 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_5bec38ba");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_43a157c9");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_941b03d0");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 149);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!corellia_rebel_trainer_1_condition_hasCompletedQuestTwo (player, npc))
	{
		doAnimationAction (npc, "nod_head_once");

		//-- NPC: Got another one for ya! It's time to get even with those TIE fighters that jumped you on your last patrol. You ready?
		string_id message = new string_id (c_stringFile, "s_282d2761");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Sure. Why not.
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: (Salute) Yes sir!
		boolean hasResponse1 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I am more than ready, Kreezo.
		boolean hasResponse2 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: When will you train me?
		boolean hasResponse3 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_c92d07b4");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_5792c0f4");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_e2d604a4");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_370");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 155);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] won quest 2 - not rewarded yet
	if (!corellia_rebel_trainer_1_condition_beenRewardedForQuestTwo (player, npc))
	{
		corellia_rebel_trainer_1_action_giveRewardQuest2 (player, npc);

		//-- NPC: Alliance HQ already sent word! You blasted those TIE fighters to dust! You wanna share some details?
		string_id message = new string_id (c_stringFile, "s_9f5447cf");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: A magician never reveals his secrets!
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: A magician never reveals her secrets!
		boolean hasResponse1 = false;
		if (!corellia_rebel_trainer_1_condition_isGenderMale (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: (Provide a detailed report)
		boolean hasResponse2 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: I don't remember much.
		boolean hasResponse3 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_b4ce2d62");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_c8cdb11");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_c4e77d66");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_656e3c93");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 172);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!corellia_rebel_trainer_1_condition_hasCompletedQuestThree (player, npc))
	{
		doAnimationAction (npc, "shake_head_disgust");

		//-- NPC: We have terrible news from Alliance HQ. A refugee convoy was attacked by TIE fighters. Their fighter escort held the TIEs long enough for the transport to escape... but now the transport is lost...
		string_id message = new string_id (c_stringFile, "s_aa03098a");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: You need me to find it, right?
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: (Salute) For the Alliance!
		boolean hasResponse1 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Refugees?! Those monsters!
		boolean hasResponse2 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: When will you train me?
		boolean hasResponse3 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_af95b1e2");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_49bfaf2");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_5adefc5c");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_438");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 186);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!corellia_rebel_trainer_1_condition_beenRewardedForQuestThree (player, npc))
	{
		doAnimationAction (npc, "greet");

		//-- NPC: Hey! So what happened up there?
		string_id message = new string_id (c_stringFile, "s_bb9e839f");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Standard space-hero stuff.
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: (Salute) The Alliance transport has been rescued!
		boolean hasResponse1 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Mission accomplished.
		boolean hasResponse2 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_e37282e3");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_9df39ab2");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20ef9c42");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 202);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!corellia_rebel_trainer_1_condition_hasCompletedQuestFour (player, npc))
	{
		doAnimationAction (npc, "greet");

		//-- NPC: Hey! Good to see ya again. Got a new mission brewing. You are going to LOVE this!
		string_id message = new string_id (c_stringFile, "s_32190415");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: All right. Let's hear it!
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: (Salute) Affirmative!
		boolean hasResponse1 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: For the Alliance... always.
		boolean hasResponse2 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: When will you train me?
		boolean hasResponse3 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1bdcc6fa");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6b490480");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2477af4a");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_484");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 211);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!corellia_rebel_trainer_1_condition_beenRewardedForQuestFour (player, npc))
	{
		doAnimationAction (npc, "applause_excited");

		//-- NPC: I see you've survived!
		string_id message = new string_id (c_stringFile, "s_e5a5e513");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: That TIE Veteran was nothing.
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: (Salute) Affirmative!
		boolean hasResponse1 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: The Force is with me.
		boolean hasResponse2 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_83c26b3");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_491");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_cade4505");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 226);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_rebel_trainer_1_condition_isReadyForFirstTraining (player, npc))
	{
		//-- NPC: Hi there! You now have all the experience you need to be trained in something new. I can teach you the proper handling of superior starfighters. Specifically, I can give you certifications to fly the Y-Wing. Are you interested in this?
		string_id message = new string_id (c_stringFile, "s_a0f35e59");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes.
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_611");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 232);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_rebel_trainer_1_condition_isReadyForMoreTraining (player, npc))
	{
		doAnimationAction (npc, "explain");

		//-- NPC: You have enough experience for more training.  Are you ready to learn?
		string_id message = new string_id (c_stringFile, "s_246d08d7");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am ready.
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_614");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 234);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "greet");

		//-- NPC: Good to see you again. How are things going?
		string_id message = new string_id (c_stringFile, "s_7fcd3228");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Things'd be better if I had a mission.
		boolean hasResponse0 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: (Salute) Requesting a mission, sir!
		boolean hasResponse1 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Our work is not finished, Kreezo.
		boolean hasResponse2 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: I want to join-up with the ground forces.
		boolean hasResponse3 = false;
		if (corellia_rebel_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_b4be0022");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_83a93ead");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_e96daa14");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1b107d8a");

			utils.setScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId", 243);

			npcStartConversation (player, npc, "corellia_rebel_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "corellia_rebel_trainer_1")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

	if (branchId == 1 && corellia_rebel_trainer_1_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && corellia_rebel_trainer_1_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && corellia_rebel_trainer_1_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && corellia_rebel_trainer_1_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && corellia_rebel_trainer_1_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && corellia_rebel_trainer_1_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && corellia_rebel_trainer_1_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && corellia_rebel_trainer_1_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && corellia_rebel_trainer_1_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && corellia_rebel_trainer_1_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && corellia_rebel_trainer_1_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && corellia_rebel_trainer_1_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && corellia_rebel_trainer_1_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && corellia_rebel_trainer_1_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && corellia_rebel_trainer_1_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && corellia_rebel_trainer_1_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && corellia_rebel_trainer_1_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && corellia_rebel_trainer_1_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && corellia_rebel_trainer_1_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && corellia_rebel_trainer_1_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 27 && corellia_rebel_trainer_1_handleBranch27 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 28 && corellia_rebel_trainer_1_handleBranch28 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && corellia_rebel_trainer_1_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && corellia_rebel_trainer_1_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 31 && corellia_rebel_trainer_1_handleBranch31 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 32 && corellia_rebel_trainer_1_handleBranch32 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && corellia_rebel_trainer_1_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 34 && corellia_rebel_trainer_1_handleBranch34 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 36 && corellia_rebel_trainer_1_handleBranch36 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 37 && corellia_rebel_trainer_1_handleBranch37 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 38 && corellia_rebel_trainer_1_handleBranch38 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 39 && corellia_rebel_trainer_1_handleBranch39 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 41 && corellia_rebel_trainer_1_handleBranch41 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 42 && corellia_rebel_trainer_1_handleBranch42 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 43 && corellia_rebel_trainer_1_handleBranch43 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 44 && corellia_rebel_trainer_1_handleBranch44 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 45 && corellia_rebel_trainer_1_handleBranch45 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 46 && corellia_rebel_trainer_1_handleBranch46 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 47 && corellia_rebel_trainer_1_handleBranch47 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 48 && corellia_rebel_trainer_1_handleBranch48 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 49 && corellia_rebel_trainer_1_handleBranch49 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 50 && corellia_rebel_trainer_1_handleBranch50 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 51 && corellia_rebel_trainer_1_handleBranch51 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 53 && corellia_rebel_trainer_1_handleBranch53 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 54 && corellia_rebel_trainer_1_handleBranch54 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 55 && corellia_rebel_trainer_1_handleBranch55 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 56 && corellia_rebel_trainer_1_handleBranch56 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 57 && corellia_rebel_trainer_1_handleBranch57 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 58 && corellia_rebel_trainer_1_handleBranch58 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 59 && corellia_rebel_trainer_1_handleBranch59 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 60 && corellia_rebel_trainer_1_handleBranch60 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 61 && corellia_rebel_trainer_1_handleBranch61 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 63 && corellia_rebel_trainer_1_handleBranch63 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 64 && corellia_rebel_trainer_1_handleBranch64 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 65 && corellia_rebel_trainer_1_handleBranch65 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 66 && corellia_rebel_trainer_1_handleBranch66 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 68 && corellia_rebel_trainer_1_handleBranch68 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 69 && corellia_rebel_trainer_1_handleBranch69 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 70 && corellia_rebel_trainer_1_handleBranch70 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 71 && corellia_rebel_trainer_1_handleBranch71 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 72 && corellia_rebel_trainer_1_handleBranch72 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 75 && corellia_rebel_trainer_1_handleBranch75 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 76 && corellia_rebel_trainer_1_handleBranch76 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 77 && corellia_rebel_trainer_1_handleBranch77 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 79 && corellia_rebel_trainer_1_handleBranch79 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 80 && corellia_rebel_trainer_1_handleBranch80 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 84 && corellia_rebel_trainer_1_handleBranch84 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 86 && corellia_rebel_trainer_1_handleBranch86 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 87 && corellia_rebel_trainer_1_handleBranch87 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 88 && corellia_rebel_trainer_1_handleBranch88 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 89 && corellia_rebel_trainer_1_handleBranch89 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 92 && corellia_rebel_trainer_1_handleBranch92 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 93 && corellia_rebel_trainer_1_handleBranch93 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 94 && corellia_rebel_trainer_1_handleBranch94 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 95 && corellia_rebel_trainer_1_handleBranch95 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 98 && corellia_rebel_trainer_1_handleBranch98 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 102 && corellia_rebel_trainer_1_handleBranch102 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 103 && corellia_rebel_trainer_1_handleBranch103 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 106 && corellia_rebel_trainer_1_handleBranch106 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 107 && corellia_rebel_trainer_1_handleBranch107 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 113 && corellia_rebel_trainer_1_handleBranch113 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 117 && corellia_rebel_trainer_1_handleBranch117 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 122 && corellia_rebel_trainer_1_handleBranch122 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 126 && corellia_rebel_trainer_1_handleBranch126 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 127 && corellia_rebel_trainer_1_handleBranch127 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 128 && corellia_rebel_trainer_1_handleBranch128 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 130 && corellia_rebel_trainer_1_handleBranch130 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 131 && corellia_rebel_trainer_1_handleBranch131 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 132 && corellia_rebel_trainer_1_handleBranch132 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 133 && corellia_rebel_trainer_1_handleBranch133 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 136 && corellia_rebel_trainer_1_handleBranch136 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 139 && corellia_rebel_trainer_1_handleBranch139 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 140 && corellia_rebel_trainer_1_handleBranch140 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 141 && corellia_rebel_trainer_1_handleBranch141 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 144 && corellia_rebel_trainer_1_handleBranch144 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 147 && corellia_rebel_trainer_1_handleBranch147 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 148 && corellia_rebel_trainer_1_handleBranch148 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 149 && corellia_rebel_trainer_1_handleBranch149 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 152 && corellia_rebel_trainer_1_handleBranch152 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 155 && corellia_rebel_trainer_1_handleBranch155 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 156 && corellia_rebel_trainer_1_handleBranch156 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 157 && corellia_rebel_trainer_1_handleBranch157 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 158 && corellia_rebel_trainer_1_handleBranch158 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 161 && corellia_rebel_trainer_1_handleBranch161 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 162 && corellia_rebel_trainer_1_handleBranch162 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 163 && corellia_rebel_trainer_1_handleBranch163 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 166 && corellia_rebel_trainer_1_handleBranch166 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 167 && corellia_rebel_trainer_1_handleBranch167 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 168 && corellia_rebel_trainer_1_handleBranch168 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 171 && corellia_rebel_trainer_1_handleBranch171 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 172 && corellia_rebel_trainer_1_handleBranch172 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 175 && corellia_rebel_trainer_1_handleBranch175 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 176 && corellia_rebel_trainer_1_handleBranch176 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 177 && corellia_rebel_trainer_1_handleBranch177 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 178 && corellia_rebel_trainer_1_handleBranch178 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 183 && corellia_rebel_trainer_1_handleBranch183 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 186 && corellia_rebel_trainer_1_handleBranch186 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 187 && corellia_rebel_trainer_1_handleBranch187 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 188 && corellia_rebel_trainer_1_handleBranch188 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 189 && corellia_rebel_trainer_1_handleBranch189 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 190 && corellia_rebel_trainer_1_handleBranch190 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 192 && corellia_rebel_trainer_1_handleBranch192 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 194 && corellia_rebel_trainer_1_handleBranch194 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 196 && corellia_rebel_trainer_1_handleBranch196 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 198 && corellia_rebel_trainer_1_handleBranch198 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 201 && corellia_rebel_trainer_1_handleBranch201 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 202 && corellia_rebel_trainer_1_handleBranch202 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 203 && corellia_rebel_trainer_1_handleBranch203 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 206 && corellia_rebel_trainer_1_handleBranch206 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 207 && corellia_rebel_trainer_1_handleBranch207 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 208 && corellia_rebel_trainer_1_handleBranch208 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 209 && corellia_rebel_trainer_1_handleBranch209 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 211 && corellia_rebel_trainer_1_handleBranch211 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 212 && corellia_rebel_trainer_1_handleBranch212 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 213 && corellia_rebel_trainer_1_handleBranch213 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 214 && corellia_rebel_trainer_1_handleBranch214 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 215 && corellia_rebel_trainer_1_handleBranch215 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 217 && corellia_rebel_trainer_1_handleBranch217 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 220 && corellia_rebel_trainer_1_handleBranch220 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 221 && corellia_rebel_trainer_1_handleBranch221 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 222 && corellia_rebel_trainer_1_handleBranch222 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 223 && corellia_rebel_trainer_1_handleBranch223 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 225 && corellia_rebel_trainer_1_handleBranch225 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 226 && corellia_rebel_trainer_1_handleBranch226 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 232 && corellia_rebel_trainer_1_handleBranch232 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 234 && corellia_rebel_trainer_1_handleBranch234 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 235 && corellia_rebel_trainer_1_handleBranch235 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 237 && corellia_rebel_trainer_1_handleBranch237 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 239 && corellia_rebel_trainer_1_handleBranch239 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 241 && corellia_rebel_trainer_1_handleBranch241 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 243 && corellia_rebel_trainer_1_handleBranch243 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 244 && corellia_rebel_trainer_1_handleBranch244 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 245 && corellia_rebel_trainer_1_handleBranch245 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 248 && corellia_rebel_trainer_1_handleBranch248 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 249 && corellia_rebel_trainer_1_handleBranch249 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 252 && corellia_rebel_trainer_1_handleBranch252 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 253 && corellia_rebel_trainer_1_handleBranch253 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 256 && corellia_rebel_trainer_1_handleBranch256 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.corellia_rebel_trainer_1.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

