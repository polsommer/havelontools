// ======================================================================
//
// nova_orion_intro.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.space_quest;
include library.space_skill;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/nova_orion_intro";

// ======================================================================
// Script Conditions
// ======================================================================

boolean nova_orion_intro_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean nova_orion_intro_condition_onquest (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "nova_orion_intro_01", "hidden_signal");
}

// ----------------------------------------------------------------------

boolean nova_orion_intro_condition_lastStep (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "nova_orion_intro_01", "return_sucess") ||
			groundquests.hasCompletedQuest(player, "nova_orion_intro_01"));
}

// ----------------------------------------------------------------------

boolean nova_orion_intro_condition_questFinished (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "nova_orion_intro_01");
}

// ----------------------------------------------------------------------

boolean nova_orion_intro_condition_canTakeMission (obj_id player, obj_id npc)
{
	return space_skill.isMasterPilot(player);
}

// ======================================================================
// Script Actions
// ======================================================================

void nova_orion_intro_action_giveQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "nova_orion_intro_01");
}

// ----------------------------------------------------------------------

void nova_orion_intro_action_clearAndRegrant (obj_id player, obj_id npc)
{
	groundquests.clearQuest(player, "nova_orion_intro_01");
	space_quest.clearQuestFlags(player, "patrol", "nova_intro_dath_01");
	space_quest.clearQuestFlags(player, "patrol", "nova_intro_yavin_01");
	space_quest.clearQuestFlags(player, "patrol", "nova_intro_lok_01");
	space_quest.clearQuestFlags(player, "patrol", "nova_intro_dantooine_01");
	groundquests.grantQuest(player, "nova_orion_intro_01");
}

// ----------------------------------------------------------------------

void nova_orion_intro_action_finalSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "nova_orion_intro_return_success");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int nova_orion_intro_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Thanks again for your help %TU, have you found Willard yet?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I find him?
	if (response == "s_31")
	{
		//-- [NOTE] 
		if (nova_orion_intro_condition__defaultCondition (player, npc))
		{
			//-- NPC: Just hyperspace to Ord Mantell, the Nova Orion Sector.
			string_id message = new string_id (c_stringFile, "s_30");
			utils.removeScriptVar (player, "conversation.nova_orion_intro.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_intro_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back %TU. I heard all about your exploits out there. You should talk to my colleague, Willard Wassleman III. He can get you a position within the company. We can really use a pilot like you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I find him?
	if (response == "s_29")
	{
		//-- [NOTE] 
		if (nova_orion_intro_condition__defaultCondition (player, npc))
		{
			//-- NPC: Just hyperspace to Ord Mantell, the Nova Orion Sector.
			string_id message = new string_id (c_stringFile, "s_30");
			utils.removeScriptVar (player, "conversation.nova_orion_intro.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_intro_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What are you doing here Pilot? You need to get out there and help.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I lost the flight path.
	if (response == "s_12")
	{
		//-- [NOTE] 
		if (nova_orion_intro_condition__defaultCondition (player, npc))
		{
			nova_orion_intro_action_clearAndRegrant (player, npc);

			//-- NPC: You did what? Fine here it is, please hurry.
			string_id message = new string_id (c_stringFile, "s_13");
			utils.removeScriptVar (player, "conversation.nova_orion_intro.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just picking up supplies.
	if (response == "s_14")
	{
		//-- [NOTE] 
		if (nova_orion_intro_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well do hurry, we need to find out what happened to that freighter.
			string_id message = new string_id (c_stringFile, "s_16");
			utils.removeScriptVar (player, "conversation.nova_orion_intro.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_intro_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome pilot. I represent Nova Orion Industries, and we have a problem you might be able to help with.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kind of problem?
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (nova_orion_intro_condition__defaultCondition (player, npc))
		{
			//-- NPC: One of our freighters went missing, and we need someone to find out what happened. And, if necessary, escort it to safety.
			string_id message = new string_id (c_stringFile, "s_22");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure I can do this.
			boolean hasResponse0 = false;
			if (nova_orion_intro_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_24");

				utils.setScriptVar (player, "conversation.nova_orion_intro.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.nova_orion_intro.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_intro_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: One of our freighters went missing, and we need someone to find out what happened. And, if necessary, escort it to safety.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure I can do this.
	if (response == "s_24")
	{
		//-- [NOTE] 
		if (nova_orion_intro_condition__defaultCondition (player, npc))
		{
			nova_orion_intro_action_giveQuest (player, npc);

			//-- NPC: Great! You will be compensated. Here is the freighters flight path. Follow it from the end backward till you find out what happened.
			string_id message = new string_id (c_stringFile, "s_26");
			utils.removeScriptVar (player, "conversation.nova_orion_intro.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.nova_orion_intro");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.nova_orion_intro");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (nova_orion_intro_condition_questFinished (player, npc))
	{
		//-- NPC: Thanks again for your help %TU, have you found Willard yet?
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: How do I find him?
		boolean hasResponse0 = false;
		if (nova_orion_intro_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_31");

			utils.setScriptVar (player, "conversation.nova_orion_intro.branchId", 1);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "nova_orion_intro", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (nova_orion_intro_condition_lastStep (player, npc))
	{
		nova_orion_intro_action_finalSignal (player, npc);

		//-- NPC: Welcome back %TU. I heard all about your exploits out there. You should talk to my colleague, Willard Wassleman III. He can get you a position within the company. We can really use a pilot like you.
		string_id message = new string_id (c_stringFile, "s_6");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: How do I find him?
		boolean hasResponse0 = false;
		if (nova_orion_intro_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_29");

			utils.setScriptVar (player, "conversation.nova_orion_intro.branchId", 2);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "nova_orion_intro", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (nova_orion_intro_condition_onquest (player, npc))
	{
		//-- NPC: What are you doing here Pilot? You need to get out there and help.
		string_id message = new string_id (c_stringFile, "s_8");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I lost the flight path.
		boolean hasResponse0 = false;
		if (nova_orion_intro_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Just picking up supplies.
		boolean hasResponse1 = false;
		if (nova_orion_intro_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_12");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_14");

			utils.setScriptVar (player, "conversation.nova_orion_intro.branchId", 4);

			npcStartConversation (player, npc, "nova_orion_intro", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (nova_orion_intro_condition_canTakeMission (player, npc))
	{
		//-- NPC: Welcome pilot. I represent Nova Orion Industries, and we have a problem you might be able to help with.
		string_id message = new string_id (c_stringFile, "s_18");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What kind of problem?
		boolean hasResponse0 = false;
		if (nova_orion_intro_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20");

			utils.setScriptVar (player, "conversation.nova_orion_intro.branchId", 7);

			npcStartConversation (player, npc, "nova_orion_intro", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (nova_orion_intro_condition__defaultCondition (player, npc))
	{
		//-- NPC: Do you know any Master pilots that can help me?
		string_id message = new string_id (c_stringFile, "s_28");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "nova_orion_intro")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.nova_orion_intro.branchId");

	if (branchId == 1 && nova_orion_intro_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && nova_orion_intro_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && nova_orion_intro_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && nova_orion_intro_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && nova_orion_intro_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.nova_orion_intro.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

