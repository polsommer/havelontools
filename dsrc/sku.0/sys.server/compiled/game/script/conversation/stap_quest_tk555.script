// ======================================================================
//
// stap_quest_tk555.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.create;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/stap_quest_tk555";

// ======================================================================
// Script Conditions
// ======================================================================

boolean stap_quest_tk555_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean stap_quest_tk555_condition_stapQuestActive (obj_id player, obj_id npc)
{
	if (groundquests.isTaskActive(player, "lifeday_stap_1", "talkTK"))
		return true;

	return false;
}

// ----------------------------------------------------------------------

boolean stap_quest_tk555_condition_alreadyHasStap (obj_id player, obj_id npc)
{
	return hasObjVar(player, "boughtStap");
}

// ======================================================================
// Script Actions
// ======================================================================

void stap_quest_tk555_action_moveAlong (obj_id player, obj_id npc)
{
	playMusic(player, "sound/voice_stormtrooper_move_along.snd");
}

// ----------------------------------------------------------------------

void stap_quest_tk555_action_finishTask_hasStap (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "talkedTK");
	groundquests.sendSignal(player, "hasStap");
}

// ----------------------------------------------------------------------

void stap_quest_tk555_action_finishTask_needsStap (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "talkedTK");
	groundquests.sendSignal(player, "needsStap");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int stap_quest_tk555_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yeah? What do you want? Can't you see I'm busy here.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That candy doesn't belong to you!
	if (response == "s_24")
	{
		doAnimationAction (player, "point_accusingly");

		//-- [NOTE] 
		if (stap_quest_tk555_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nervous");

			//-- NPC: What... what do you mean? I bought this!
			string_id message = new string_id (c_stringFile, "s_26");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's Life Day candy for poor children!
			boolean hasResponse0 = false;
			if (stap_quest_tk555_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				utils.setScriptVar (player, "conversation.stap_quest_tk555.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.stap_quest_tk555.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int stap_quest_tk555_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What... what do you mean? I bought this!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's Life Day candy for poor children!
	if (response == "s_41")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (stap_quest_tk555_condition__defaultCondition (player, npc))
		{
			//-- NPC: For children? Oh boy, what have I done now...
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: It's going to be very interesting to see what your superiors say about this.
			boolean hasResponse0 = false;
			if (stap_quest_tk555_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				utils.setScriptVar (player, "conversation.stap_quest_tk555.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.stap_quest_tk555.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int stap_quest_tk555_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: For children? Oh boy, what have I done now...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It's going to be very interesting to see what your superiors say about this.
	if (response == "s_43")
	{
		//-- [NOTE] 
		if (stap_quest_tk555_condition_alreadyHasStap (player, npc))
		{
			doAnimationAction (npc, "scared");

			//-- NPC: Oh no, please don't report me! There must be some sort of arrangement we can come to? 
			string_id message = new string_id (c_stringFile, "s_16");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Okay, you can pay 10,000 credits to the Mos Espa orphanage!
			boolean hasResponse0 = false;
			if (stap_quest_tk555_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_17");

				utils.setScriptVar (player, "conversation.stap_quest_tk555.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.stap_quest_tk555.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (stap_quest_tk555_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "scared");

			//-- NPC: Oh no, please don't report me! Maybe we can come to an arrangement? If you don't report me, I will let you in on a sweet deal with one of the junk dealers here in Mos Espa.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What kind of deal?
			boolean hasResponse0 = false;
			if (stap_quest_tk555_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_45");

				utils.setScriptVar (player, "conversation.stap_quest_tk555.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.stap_quest_tk555.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int stap_quest_tk555_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh no, please don't report me! There must be some sort of arrangement we can come to? 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Okay, you can pay 10,000 credits to the Mos Espa orphanage!
	if (response == "s_17")
	{
		doAnimationAction (player, "threaten");

		//-- [NOTE] 
		if (stap_quest_tk555_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			stap_quest_tk555_action_finishTask_hasStap (player, npc);

			//-- NPC: Now you're just being unfair! Fine fine, I will do what you ask. Can I finish this box of candy now?
			string_id message = new string_id (c_stringFile, "s_18");
			utils.removeScriptVar (player, "conversation.stap_quest_tk555.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int stap_quest_tk555_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh no, please don't report me! Maybe we can come to an arrangement? If you don't report me, I will let you in on a sweet deal with one of the junk dealers here in Mos Espa.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kind of deal?
	if (response == "s_45")
	{
		doAnimationAction (player, "rub_chin_thoughtful");

		//-- [NOTE] 
		if (stap_quest_tk555_condition__defaultCondition (player, npc))
		{
			//-- NPC: A junk dealer named Watto owes me a favor. I was going to cash it in myself for a sweet speeder at a heavily discounted price. I will let Watto know that we are even as soon as he sells it to you instead.
			string_id message = new string_id (c_stringFile, "s_46");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will take that deal but you will also pay 10,000 credits to the Mos Espa orphanage!
			boolean hasResponse0 = false;
			if (stap_quest_tk555_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				utils.setScriptVar (player, "conversation.stap_quest_tk555.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.stap_quest_tk555.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int stap_quest_tk555_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A junk dealer named Watto owes me a favor. I was going to cash it in myself for a sweet speeder at a heavily discounted price. I will let Watto know that we are even as soon as he sells it to you instead.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will take that deal but you will also pay 10,000 credits to the Mos Espa orphanage!
	if (response == "s_47")
	{
		doAnimationAction (player, "threaten");

		//-- [NOTE] 
		if (stap_quest_tk555_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			stap_quest_tk555_action_finishTask_needsStap (player, npc);

			//-- NPC: Now you're just being unfair! Fine fine, I will do what you ask. Can I finish this box of candy now?
			string_id message = new string_id (c_stringFile, "s_48");
			utils.removeScriptVar (player, "conversation.stap_quest_tk555.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.stap_quest_tk555");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.stap_quest_tk555");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (stap_quest_tk555_condition_stapQuestActive (player, npc))
	{
		//-- NPC: Yeah? What do you want? Can't you see I'm busy here.
		string_id message = new string_id (c_stringFile, "s_13");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: That candy doesn't belong to you!
		boolean hasResponse0 = false;
		if (stap_quest_tk555_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_24");

			utils.setScriptVar (player, "conversation.stap_quest_tk555.branchId", 1);

			npcStartConversation (player, npc, "stap_quest_tk555", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (stap_quest_tk555_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "dismiss");

		stap_quest_tk555_action_moveAlong (player, npc);

		//-- NPC: Can't you see I'm busy? Move along.
		string_id message = new string_id (c_stringFile, "s_40");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "stap_quest_tk555")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.stap_quest_tk555.branchId");

	if (branchId == 1 && stap_quest_tk555_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && stap_quest_tk555_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && stap_quest_tk555_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && stap_quest_tk555_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && stap_quest_tk555_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && stap_quest_tk555_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.stap_quest_tk555.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

