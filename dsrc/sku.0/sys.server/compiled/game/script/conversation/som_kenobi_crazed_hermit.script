// ======================================================================
//
// som_kenobi_crazed_hermit.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.jedi;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/som_kenobi_crazed_hermit";

// ======================================================================
// Script Conditions
// ======================================================================

boolean som_kenobi_crazed_hermit_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean som_kenobi_crazed_hermit_condition_playerJedi (obj_id player, obj_id npc)
{
	return jedi.isForceSensitive (player);
}

// ----------------------------------------------------------------------

boolean som_kenobi_crazed_hermit_condition_hermitChat2 (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "som_kenobi_main_quest_1", "talkHermit2");
}

// ----------------------------------------------------------------------

boolean som_kenobi_crazed_hermit_condition_hermitChat1 (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "som_kenobi_main_quest_1", "talkHermit1");
}

// ----------------------------------------------------------------------

boolean som_kenobi_crazed_hermit_condition_underAttack (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "som_kenobi_main_quest_1", "attacked");
}

// ======================================================================
// Script Actions
// ======================================================================

void som_kenobi_crazed_hermit_action_signalTalked1 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "talkedHermit1");
}

// ----------------------------------------------------------------------

void som_kenobi_crazed_hermit_action_removeInvuln (obj_id player, obj_id npc)
{
	setInvulnerable (npc, false);
}

// ----------------------------------------------------------------------

void som_kenobi_crazed_hermit_action_attack (obj_id player, obj_id npc)
{
	startCombat(npc, player);
	clearCondition(npc, CONDITION_CONVERSABLE);
}

// ----------------------------------------------------------------------

void som_kenobi_crazed_hermit_action_signalTalked2 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "talkedHermit2");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int som_kenobi_crazed_hermit_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No more fun left. They are quiet now. Finally, quiet...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please, I implore you, give me the crystal. It's hurting you.
	if (response == "s_69")
	{
		doAnimationAction (player, "implore");

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "sigh_deeply");

			//-- NPC: Sssh, I'm tired. Tired of it all. Please, no more. I can't take any more of this...
			string_id message = new string_id (c_stringFile, "s_71");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can help you. Just let me hold the gem for a second.
			boolean hasResponse0 = false;
			if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_72");

				utils.setScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, and you will join them unless you hand over that gem!
	if (response == "s_70")
	{
		doAnimationAction (player, "point_accusingly");

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: Don't yell! I'm so tired, tired of it all. Please, just be quiet...
			string_id message = new string_id (c_stringFile, "s_86");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Give me the crystal and it will stop!
			boolean hasResponse0 = false;
			if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I will kill the one that's making the sounds. It will be over.
			boolean hasResponse1 = false;
			if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: [Use the Force] If you give the crystal to me, it will stop.
			boolean hasResponse2 = false;
			if (som_kenobi_crazed_hermit_condition_playerJedi (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_87");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_88");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				utils.setScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_crazed_hermit_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Sssh, I'm tired. Tired of it all. Please, no more. I can't take any more of this...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can help you. Just let me hold the gem for a second.
	if (response == "s_72")
	{
		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "scared");

			//-- NPC: Yes, that might be it. But no, I can't. He won't let me. He's mine and I'm his.
			string_id message = new string_id (c_stringFile, "s_73");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You don't need him anymore. You can be truly free.
			boolean hasResponse0 = false;
			if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I can stop your torment. Give me the gem and it will go away.
			boolean hasResponse1 = false;
			if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: [Use the Force] But the sounds will fade. You will be in peace.
			boolean hasResponse2 = false;
			if (som_kenobi_crazed_hermit_condition_playerJedi (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_75");

				utils.setScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_crazed_hermit_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, that might be it. But no, I can't. He won't let me. He's mine and I'm his.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You don't need him anymore. You can be truly free.
	if (response == "s_74")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "helpme");

			//-- NPC: But who will keep the sounds away? They hurt so much and they keep coming back. I can't do this by myself.
			string_id message = new string_id (c_stringFile, "s_78");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I promise they will go away when you give me the gem.
			boolean hasResponse0 = false;
			if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I will help you. I will make them go away.
			boolean hasResponse1 = false;
			if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_79");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				utils.setScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can stop your torment. Give me the gem and it will go away.
	if (response == "s_77")
	{
		doAnimationAction (player, "implore");

		som_kenobi_crazed_hermit_action_removeInvuln (player, npc);

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "twitch");

			som_kenobi_crazed_hermit_action_attack (player, npc);

			//-- NPC: Yes, yes, maybe you are right. Maybe he's right? No... NO! He's tricking you! Only I can make the sounds go away. Now kill him. Kill him!
			string_id message = new string_id (c_stringFile, "s_85");
			utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Use the Force] But the sounds will fade. You will be in peace.
	if (response == "s_75")
	{
		som_kenobi_crazed_hermit_action_removeInvuln (player, npc);

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "twitch");

			som_kenobi_crazed_hermit_action_attack (player, npc);

			//-- NPC: But the sounds will go away. I will fin... No you won't! He's tricking you! Only I can make the sounds go away. Now kill him. Kill him!
			string_id message = new string_id (c_stringFile, "s_76");
			utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_crazed_hermit_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: But who will keep the sounds away? They hurt so much and they keep coming back. I can't do this by myself.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I promise they will go away when you give me the gem.
	if (response == "s_79")
	{
		som_kenobi_crazed_hermit_action_removeInvuln (player, npc);

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			som_kenobi_crazed_hermit_action_attack (player, npc);

			//-- NPC: You promise? Everyone keeps promising but no one tells the truth. Maybe this one is different though. Maybe he's right...no, NO! He's not right. He's trying to hurt you! Only I can make the sounds go away. You must kill him. Kill him now!
			string_id message = new string_id (c_stringFile, "s_81");
			utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will help you. I will make them go away.
	if (response == "s_80")
	{
		doAnimationAction (player, "offer_affection");

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shiver");

			som_kenobi_crazed_hermit_action_signalTalked2 (player, npc);

			//-- NPC: You...you will help me? He might be telling the truth...no you say? He's lying? I don't believe you! This one is kind. He's not like the others! I will give you to him. I don't need you anymore now that I have him! < The hermit shakes as he holds out his hand and slowly lets go of the crystal shard. As soon as it touches your palm, you can feel the terror within. Whispers in your head. Screams of pain. >
			string_id message = new string_id (c_stringFile, "s_82");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Ugh...how...how do you feel?
			boolean hasResponse0 = false;
			if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83");

				utils.setScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_crazed_hermit_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You...you will help me? He might be telling the truth...no you say? He's lying? I don't believe you! This one is kind. He's not like the others! I will give you to him. I don't need you anymore now that I have him! < The hermit shakes as he holds out his hand and slowly lets go of the crystal shard. As soon as it touches your palm, you can feel the terror within. Whispers in your head. Screams of pain. >

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ugh...how...how do you feel?
	if (response == "s_83")
	{
		doAnimationAction (player, "twitch");

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "heavy_cough_vomit");

			//-- NPC: I'm free, at last. The madness is gone. I am forever in your debt, friend, but now, please leave me. I want only silence, the sweet silence.
			string_id message = new string_id (c_stringFile, "s_84");
			utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_crazed_hermit_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Don't yell! I'm so tired, tired of it all. Please, just be quiet...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Give me the crystal and it will stop!
	if (response == "s_87")
	{
		som_kenobi_crazed_hermit_action_removeInvuln (player, npc);

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "twitch");

			som_kenobi_crazed_hermit_action_attack (player, npc);

			//-- NPC: It would stop? Finally be quiet? Yes! I need the silence. Please... No... NO! It's a trick. He only wants it for himself! Only I can make the sounds go away! Kill him. Kill him now!
			string_id message = new string_id (c_stringFile, "s_91");
			utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will kill the one that's making the sounds. It will be over.
	if (response == "s_88")
	{
		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "squirm");

			//-- NPC: You know of him? You can make him go away? He says that he can make him go away, make the sounds stop. Yes I believe him. You've done nothing for me. But he, he can help!
			string_id message = new string_id (c_stringFile, "s_92");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, but I need the gem to find him. Hand it to me.
			boolean hasResponse0 = false;
			if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, I can find him and kill him. It will all be over.
			boolean hasResponse1 = false;
			if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_94");

				utils.setScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Use the Force] If you give the crystal to me, it will stop.
	if (response == "s_89")
	{
		som_kenobi_crazed_hermit_action_removeInvuln (player, npc);

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			som_kenobi_crazed_hermit_action_attack (player, npc);

			//-- NPC: If I give you the crystal, it will finally... No it won't! He's tricking you! Only I can make the sounds go away. Now kill him. Kill him!
			string_id message = new string_id (c_stringFile, "s_90");
			utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_crazed_hermit_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You know of him? You can make him go away? He says that he can make him go away, make the sounds stop. Yes I believe him. You've done nothing for me. But he, he can help!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, but I need the gem to find him. Hand it to me.
	if (response == "s_95")
	{
		doAnimationAction (player, "nod");

		som_kenobi_crazed_hermit_action_removeInvuln (player, npc);

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			som_kenobi_crazed_hermit_action_attack (player, npc);

			//-- NPC: Yes! No... No, you're lying. You don't know where he is! There's only one way left. Please. Kill me. Kill me now or I will kill you!
			string_id message = new string_id (c_stringFile, "s_96");
			utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I can find him and kill him. It will all be over.
	if (response == "s_94")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shiver");

			som_kenobi_crazed_hermit_action_signalTalked2 (player, npc);

			//-- NPC: Finally, it will all be over. No, he can help me, I know it! You are lying. He's not like the others! He's my savior. You have done nothing for me! Here, take it. Take it now! < The hermit shakes as he holds out his hand and slowly lets go of the crystal shard. As soon as it touches your palm, you can feel the terror within. Whispers in your head. Screams of pain. >
			string_id message = new string_id (c_stringFile, "s_97");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Ugh...fin...finally, I thought you would never come to reason.
			boolean hasResponse0 = false;
			if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				utils.setScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_crazed_hermit_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Finally, it will all be over. No, he can help me, I know it! You are lying. He's not like the others! He's my savior. You have done nothing for me! Here, take it. Take it now! < The hermit shakes as he holds out his hand and slowly lets go of the crystal shard. As soon as it touches your palm, you can feel the terror within. Whispers in your head. Screams of pain. >

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ugh...fin...finally, I thought you would never come to reason.
	if (response == "s_98")
	{
		doAnimationAction (player, "twitch");

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "heavy_cough_vomit");

			//-- NPC: It's so beautiful... Thank you, friend. Now please, please leave. I want nothing but the silence, the sweet silence.
			string_id message = new string_id (c_stringFile, "s_99");
			utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_crazed_hermit_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Did you hurt those beautiful animals?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was forced to. They were trying to kill me.
	if (response == "s_37")
	{
		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "squirm");

			//-- NPC: Exactly what I said as the gem was screaming at me!
			string_id message = new string_id (c_stringFile, "s_40");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You don't say...this gem, can I see it?
			boolean hasResponse0 = false;
			if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				utils.setScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Beautiful? Whatever, I'm not here to talk about critters.
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "blame");

			//-- NPC: Talk? That's all you ever do! Go there, go here, do that.
			string_id message = new string_id (c_stringFile, "s_58");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What are you blabbing about? I need something you have.
			boolean hasResponse0 = false;
			if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_60");

				utils.setScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_crazed_hermit_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Exactly what I said as the gem was screaming at me!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You don't say...this gem, can I see it?
	if (response == "s_41")
	{
		doAnimationAction (player, "rub_chin_thoughtful");

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "gesticulate_wildly");

			//-- NPC: Gem? They are everywhere! Up, down, wherever they please! I can't stand them anymore. Always blabbing. Never quiet. I have to get away. Go where it's quiet!
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You're not making any sense, friend. Please calm down.
			boolean hasResponse0 = false;
			if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [Use the Force] Sssh, calm yourself.
			boolean hasResponse1 = false;
			if (som_kenobi_crazed_hermit_condition_playerJedi (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_crazed_hermit_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Gem? They are everywhere! Up, down, wherever they please! I can't stand them anymore. Always blabbing. Never quiet. I have to get away. Go where it's quiet!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're not making any sense, friend. Please calm down.
	if (response == "s_44")
	{
		doAnimationAction (player, "slow_down");

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "heavy_cough_vomit");

			//-- NPC: Do you think that it's easy?! Carrying the curse?! Aww, the noises. Make them stop!
			string_id message = new string_id (c_stringFile, "s_46");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What can I do? How can I help you?
			boolean hasResponse0 = false;
			if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				utils.setScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId", 20);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Use the Force] Sssh, calm yourself.
	if (response == "s_52")
	{
		doAnimationAction (player, "shush");

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "scream");

			doAnimationAction (player, "taken_aback");

			som_kenobi_crazed_hermit_action_signalTalked1 (player, npc);

			//-- NPC: Your insolence will not go unpunished! Kneel before me and accept your fate as your life trickles down onto the molten ground!
			string_id message = new string_id (c_stringFile, "s_54");
			utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_crazed_hermit_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Do you think that it's easy?! Carrying the curse?! Aww, the noises. Make them stop!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What can I do? How can I help you?
	if (response == "s_48")
	{
		doAnimationAction (player, "offer_affection");

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "scream");

			doAnimationAction (player, "taken_aback");

			som_kenobi_crazed_hermit_action_signalTalked1 (player, npc);

			//-- NPC: Help me? Help me?! You're the one that needs help! Accept your faith, puny one. Do not fight it!
			string_id message = new string_id (c_stringFile, "s_50");
			utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_crazed_hermit_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Talk? That's all you ever do! Go there, go here, do that.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What are you blabbing about? I need something you have.
	if (response == "s_60")
	{
		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "gesticulate_wildly");

			//-- NPC: Everyone wants something. You, you want the gem. They all do. They don't know though, they don't understand!
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, I want the gem and you will give it to me, or you might get hurt.
			boolean hasResponse0 = false;
			if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [Use the Force] Hand me the gem, now!
			boolean hasResponse1 = false;
			if (som_kenobi_crazed_hermit_condition_playerJedi (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_64");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				utils.setScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_crazed_hermit_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Everyone wants something. You, you want the gem. They all do. They don't know though, they don't understand!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I want the gem and you will give it to me, or you might get hurt.
	if (response == "s_64")
	{
		doAnimationAction (player, "point_accusingly");

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "implore");

			//-- NPC: No pain! I don't need more pain! Do you need pain? No, what am I saying. We can just walk away, always walk away.
			string_id message = new string_id (c_stringFile, "s_66");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You're not going anywhere. Now hand over the crystal.
			boolean hasResponse0 = false;
			if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				utils.setScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Use the Force] Hand me the gem, now!
	if (response == "s_104")
	{
		doAnimationAction (player, "shush");

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "scream");

			som_kenobi_crazed_hermit_action_signalTalked1 (player, npc);

			//-- NPC: Where you're going, you won't need it! You're nothing but a puppet and it's time to cut the strings!
			string_id message = new string_id (c_stringFile, "s_106");
			utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_crazed_hermit_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No pain! I don't need more pain! Do you need pain? No, what am I saying. We can just walk away, always walk away.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're not going anywhere. Now hand over the crystal.
	if (response == "s_100")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "scream");

			som_kenobi_crazed_hermit_action_signalTalked1 (player, npc);

			//-- NPC: No! You kneel before me and accept what's coming your way! This is your final moment. Welcome it with grace!
			string_id message = new string_id (c_stringFile, "s_102");
			utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.som_kenobi_crazed_hermit");

	ai_lib.setDefaultCalmBehavior (self, ai_lib.BEHAVIOR_SENTINEL);
	setInvulnerable (self, true);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	ai_lib.setDefaultCalmBehavior (self, ai_lib.BEHAVIOR_SENTINEL);
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.som_kenobi_crazed_hermit");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (som_kenobi_crazed_hermit_condition_hermitChat2 (player, npc))
	{
		doAnimationAction (npc, "shiver");

		//-- NPC: No more fun left. They are quiet now. Finally, quiet...
		string_id message = new string_id (c_stringFile, "s_67");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Please, I implore you, give me the crystal. It's hurting you.
		boolean hasResponse0 = false;
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Yes, and you will join them unless you hand over that gem!
		boolean hasResponse1 = false;
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_69");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_70");

			utils.setScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId", 1);

			npcStartConversation (player, npc, "som_kenobi_crazed_hermit", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_kenobi_crazed_hermit_condition_hermitChat1 (player, npc))
	{
		doAnimationAction (npc, "bounce");

		//-- NPC: Did you hurt those beautiful animals?
		string_id message = new string_id (c_stringFile, "s_93");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I was forced to. They were trying to kill me.
		boolean hasResponse0 = false;
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Beautiful? Whatever, I'm not here to talk about critters.
		boolean hasResponse1 = false;
		if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_37");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_56");

			utils.setScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId", 17);

			npcStartConversation (player, npc, "som_kenobi_crazed_hermit", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_kenobi_crazed_hermit_condition_underAttack (player, npc))
	{
		doAnimationAction (npc, "clap_rousing");

		//-- NPC: Hahaha, they are dancing! So pretty. Look at them! You're missing it!
		string_id message = new string_id (c_stringFile, "s_108");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_kenobi_crazed_hermit_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "dismiss");

		//-- NPC: Please, leave me alone. I need to rest.
		string_id message = new string_id (c_stringFile, "s_110");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "som_kenobi_crazed_hermit")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

	if (branchId == 1 && som_kenobi_crazed_hermit_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && som_kenobi_crazed_hermit_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && som_kenobi_crazed_hermit_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && som_kenobi_crazed_hermit_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && som_kenobi_crazed_hermit_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && som_kenobi_crazed_hermit_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && som_kenobi_crazed_hermit_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && som_kenobi_crazed_hermit_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && som_kenobi_crazed_hermit_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && som_kenobi_crazed_hermit_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && som_kenobi_crazed_hermit_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && som_kenobi_crazed_hermit_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && som_kenobi_crazed_hermit_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && som_kenobi_crazed_hermit_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && som_kenobi_crazed_hermit_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.som_kenobi_crazed_hermit.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

