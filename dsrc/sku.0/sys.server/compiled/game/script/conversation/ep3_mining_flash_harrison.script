// ======================================================================
//
// ep3_mining_flash_harrison.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/ep3_mining_flash_harrison";

// ======================================================================
// Script Conditions
// ======================================================================

boolean ep3_mining_flash_harrison_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean ep3_mining_flash_harrison_condition_hasCompletedAllQuests (obj_id player, obj_id npc)
{
	// Returns TRUE of these quests are complete
	return (groundquests.hasCompletedQuest(player, "ep3_mining_quest_1"));
}

// ----------------------------------------------------------------------

boolean ep3_mining_flash_harrison_condition_hasCompletedQuestOne (obj_id player, obj_id npc)
{
	// Returns TRUE of this quest is complete
	return (groundquests.hasCompletedQuest(player, "ep3_mining_quest_1"));
}

// ----------------------------------------------------------------------

boolean ep3_mining_flash_harrison_condition_isOnQuestOne (obj_id player, obj_id npc)
{
	// Returns TRUE if the quest is active on the player
	return (groundquests.isQuestActive(player, "ep3_mining_quest_1"));
}

// ======================================================================
// Script Actions
// ======================================================================

void ep3_mining_flash_harrison_action_grantQuestOne (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "ep3_mining_quest_1");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int ep3_mining_flash_harrison_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What are you standing around here for?  Go!  Off!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright, alright...
	if (response == "s_240")
	{
		//-- [NOTE] 
		if (ep3_mining_flash_harrison_condition__defaultCondition (player, npc))
		{
			//-- NPC: That's more like it.
			string_id message = new string_id (c_stringFile, "s_45");
			utils.removeScriptVar (player, "conversation.ep3_mining_flash_harrison.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_flash_harrison_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Bah!  Me, the best mining pilot in the Galaxy, stuck here on the lost planet of the furballs by Imperial order!  This is no place for Flash Harrison, mighty pilot!  Who are you, anyway?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You look like you could use a hand.
	if (response == "s_25")
	{
		//-- [NOTE] 
		if (ep3_mining_flash_harrison_condition__defaultCondition (player, npc))
		{
			//-- NPC: Who, me?  You really think you can 'give a hand' to Flash Harrison, greatest pilot in the Galaxy?  Huh...I suppose you can.  Between you and me, I'm working for the Corellian Engineering Corporation on a mining project in Kashyyyk, but the Imperials suspect that I'm a Rebel sympathizer!
			string_id message = new string_id (c_stringFile, "s_26");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's too bad.
			boolean hasResponse0 = false;
			if (ep3_mining_flash_harrison_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				utils.setScriptVar (player, "conversation.ep3_mining_flash_harrison.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_mining_flash_harrison.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_flash_harrison_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Who, me?  You really think you can 'give a hand' to Flash Harrison, greatest pilot in the Galaxy?  Huh...I suppose you can.  Between you and me, I'm working for the Corellian Engineering Corporation on a mining project in Kashyyyk, but the Imperials suspect that I'm a Rebel sympathizer!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's too bad.
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (ep3_mining_flash_harrison_condition__defaultCondition (player, npc))
		{
			//-- NPC: Tell me about it!  They took my ship, and I'm stuck here with these filthy, dangerous Wookiees.  I'll get off this rock as soon as I can, but until then, can you get a message to our base of operations on Talus?
			string_id message = new string_id (c_stringFile, "s_36");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Absolutely.
			boolean hasResponse0 = false;
			if (ep3_mining_flash_harrison_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Not today.  Good luck escaping.
			boolean hasResponse1 = false;
			if (ep3_mining_flash_harrison_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_38");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_42");

				utils.setScriptVar (player, "conversation.ep3_mining_flash_harrison.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_mining_flash_harrison.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_flash_harrison_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Tell me about it!  They took my ship, and I'm stuck here with these filthy, dangerous Wookiees.  I'll get off this rock as soon as I can, but until then, can you get a message to our base of operations on Talus?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Absolutely.
	if (response == "s_38")
	{
		//-- [NOTE] 
		if (ep3_mining_flash_harrison_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_on_dismissing");

			ep3_mining_flash_harrison_action_grantQuestOne (player, npc);

			//-- NPC: You may not be the best pilot in the Galaxy-- like me--but you'll have to do.  Good luck, pilot!
			string_id message = new string_id (c_stringFile, "s_40");
			utils.removeScriptVar (player, "conversation.ep3_mining_flash_harrison.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not today.  Good luck escaping.
	if (response == "s_42")
	{
		//-- [NOTE] 
		if (ep3_mining_flash_harrison_condition__defaultCondition (player, npc))
		{
			//-- NPC: Hey, you can't just leave me here!  Come back!
			string_id message = new string_id (c_stringFile, "s_46");
			utils.removeScriptVar (player, "conversation.ep3_mining_flash_harrison.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.ep3_mining_flash_harrison");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Flash Harrison");

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Flash Harrison");

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.ep3_mining_flash_harrison");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (ep3_mining_flash_harrison_condition_hasCompletedAllQuests (player, npc))
	{
		//-- NPC: What are you staring at?
		string_id message = new string_id (c_stringFile, "s_256");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_mining_flash_harrison_condition_isOnQuestOne (player, npc))
	{
		doAnimationAction (npc, "wave_on_dismissing");

		//-- NPC: What are you standing around here for?  Go!  Off!
		string_id message = new string_id (c_stringFile, "s_239");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Alright, alright...
		boolean hasResponse0 = false;
		if (ep3_mining_flash_harrison_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_240");

			utils.setScriptVar (player, "conversation.ep3_mining_flash_harrison.branchId", 2);

			npcStartConversation (player, npc, "ep3_mining_flash_harrison", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!ep3_mining_flash_harrison_condition_hasCompletedAllQuests (player, npc))
	{
		doAnimationAction (npc, "hair_flip");

		//-- NPC: Bah!  Me, the best mining pilot in the Galaxy, stuck here on the lost planet of the furballs by Imperial order!  This is no place for Flash Harrison, mighty pilot!  Who are you, anyway?
		string_id message = new string_id (c_stringFile, "s_117");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: You look like you could use a hand.
		boolean hasResponse0 = false;
		if (ep3_mining_flash_harrison_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_25");

			utils.setScriptVar (player, "conversation.ep3_mining_flash_harrison.branchId", 4);

			npcStartConversation (player, npc, "ep3_mining_flash_harrison", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_mining_flash_harrison_condition__defaultCondition (player, npc))
	{
		//-- NPC: We have no further business to discuss.
		string_id message = new string_id (c_stringFile, "s_234");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "ep3_mining_flash_harrison")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.ep3_mining_flash_harrison.branchId");

	if (branchId == 2 && ep3_mining_flash_harrison_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && ep3_mining_flash_harrison_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && ep3_mining_flash_harrison_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && ep3_mining_flash_harrison_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.ep3_mining_flash_harrison.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

