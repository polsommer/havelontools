// ======================================================================
//
// jedi_robe_jinsu_taker.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.static_item;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/jedi_robe_jinsu_taker";

// ======================================================================
// Script Conditions
// ======================================================================

boolean jedi_robe_jinsu_taker_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean jedi_robe_jinsu_taker_condition_readyToHandOverJinsu (obj_id player, obj_id npc)
{
	if ( hasCompletedCollectionSlotPrereq(player, "col_lightsaber_1h_01_02") )
	{
		if ( !hasCompletedCollectionSlot(player, "col_lightsaber_1h_01_02") )
		{
			string jinsuTemplate = "object/weapon/melee/sword/crafted_saber/sword_lightsaber_mandalorian.iff";
			if ( utils.playerHasItemByTemplateInInventoryOrEquipped(player, jinsuTemplate) )
			{
				return true;
			}
		}
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean jedi_robe_jinsu_taker_condition_alreadyGaveJinsu (obj_id player, obj_id npc)
{
	return hasCompletedCollectionSlot(player, "col_lightsaber_1h_01_02");
}

// ----------------------------------------------------------------------

boolean jedi_robe_jinsu_taker_condition_takeJinsu (obj_id player, obj_id npc)
{
	obj_id jinsuSaber = obj_id.NULL_ID;
	string desiredTemplate = "object/weapon/melee/sword/crafted_saber/sword_lightsaber_mandalorian.iff";
	
	obj_id[] contents = getInventoryAndEquipment(player);
	if (contents != null)
	{
		for(int i = 0; i<contents.length; i++)
		{
			obj_id inventoryObject = contents[i];
			string inventoryObjectTemplate = getTemplateName(contents[i]);
			if( inventoryObjectTemplate.equals(desiredTemplate) )
			{
				jinsuSaber = inventoryObject;
				break;
			}
		}
	}

	obj_id playerInv = utils.getInventoryContainer(player);
	if ( isIdValid(jinsuSaber) && isIdValid(playerInv) )
	{	
		putInOverloaded(jinsuSaber, playerInv);
		
		obj_id jinsuInv = getObjectInSlot(jinsuSaber, "saber_inv");
		if ( isIdValid(jinsuInv) )
		{
			obj_id[] jinsuCrystals = getContents(jinsuInv);
			if ( jinsuCrystals != null && jinsuCrystals.length > 0 )
			{
				for ( int i = 0; i < jinsuCrystals.length; i++ )
				{
					obj_id crystal = jinsuCrystals[i];
					if ( isIdValid(crystal) )
					{
						putInOverloaded(crystal, playerInv);
					}
				}
			}
		}
		
		destroyObject(jinsuSaber);
		modifyCollectionSlotValue(player, "col_lightsaber_1h_01_02", 1);
		return true;
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean jedi_robe_jinsu_taker_condition_canReceive5GenPvP (obj_id player, obj_id npc)
{
	obj_id pvpSaberSchematic1Hand = utils.getStaticItemInInventory(player, "item_schematic_pvp_bf_saber_03_01");
	if(isIdValid(pvpSaberSchematic1Hand) && hasCompletedCollection(player, "col_lightsaber_1h_01"))
	{
		return true;
	}
	
	obj_id pvpSaberSchematic2Hand = utils.getStaticItemInInventory(player, "item_schematic_pvp_bf_saber_03_02");
	if(isIdValid(pvpSaberSchematic2Hand) && hasCompletedCollection(player, "col_lightsaber_2h_01"))
	{
		return true;
	}
	
	obj_id pvpSaberSchematicStaff = utils.getStaticItemInInventory(player, "item_schematic_pvp_bf_saber_03_03");
	if(isIdValid(pvpSaberSchematicStaff) && hasCompletedCollection(player, "col_lightsaber_polearm_01"))
	{
		return true;
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean jedi_robe_jinsu_taker_condition_canTrade1Hand (obj_id player, obj_id npc)
{
	return isIdValid(utils.getStaticItemInInventory(player, "item_schematic_pvp_bf_saber_03_01"));
}

// ----------------------------------------------------------------------

boolean jedi_robe_jinsu_taker_condition_canTrade2Hand (obj_id player, obj_id npc)
{
	return isIdValid(utils.getStaticItemInInventory(player, "item_schematic_pvp_bf_saber_03_02"));
}

// ----------------------------------------------------------------------

boolean jedi_robe_jinsu_taker_condition_canTradeStaff (obj_id player, obj_id npc)
{
	return isIdValid(utils.getStaticItemInInventory(player, "item_schematic_pvp_bf_saber_03_03"));
}

// ----------------------------------------------------------------------

boolean jedi_robe_jinsu_taker_condition_canReceive5thGenSaber (obj_id player, obj_id npc)
{
	return jedi_robe_jinsu_taker_condition_canReceive5GenPvP(player, npc) || jedi_robe_jinsu_taker_condition_canReceive5GenGCW(player, npc);
}

// ----------------------------------------------------------------------

boolean jedi_robe_jinsu_taker_condition_canReceive5GenGCW (obj_id player, obj_id npc)
{
	obj_id gcwSaberSchematic1Hand = utils.getStaticItemInInventory(player, "item_schematic_pvp_gcw_saber_1h_gen4");
	if(isIdValid(gcwSaberSchematic1Hand) && hasCompletedCollection(player, "col_lightsaber_1h_01"))
	{
		return true;
	}
		
	obj_id gcwSaberSchematic2Hand = utils.getStaticItemInInventory(player, "item_schematic_pvp_gcw_saber_2h_gen4");
	if(isIdValid(gcwSaberSchematic2Hand) && hasCompletedCollection(player, "col_lightsaber_2h_01"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean jedi_robe_jinsu_taker_condition_canTradeGcw1Hand (obj_id player, obj_id npc)
{
	return isIdValid(utils.getStaticItemInInventory(player, "item_schematic_pvp_gcw_saber_1h_gen4"));
}

// ----------------------------------------------------------------------

boolean jedi_robe_jinsu_taker_condition_canTradeGcw2Hand (obj_id player, obj_id npc)
{
	return isIdValid(utils.getStaticItemInInventory(player, "item_schematic_pvp_gcw_saber_2h_gen4"));
}

// ======================================================================
// Script Actions
// ======================================================================

void jedi_robe_jinsu_taker_action_upgrade1HandPvP (obj_id player, obj_id npc)
{
	obj_id oldSchematic = utils.getStaticItemInInventory(player, "item_schematic_pvp_bf_saber_03_01");
	obj_id newSchematic = static_item.createNewItemFunction("item_schematic_pvp_bf_saber_03_04", player);
	
	if((isIdValid(oldSchematic) && utils.getContainingPlayer(oldSchematic) == player) && isIdValid(newSchematic))
	{
		CustomerServiceLog("jediSaberTrade", getFirstName(player) + "(" + player + ") has upgraded their saber schematic "+ getStaticItemName(oldSchematic)+ "(" + oldSchematic + ") to a 5th Gen version "+ getStaticItemName(newSchematic) +"("+newSchematic+"). This will destroy the old one.");
		destroyObject(oldSchematic);
	}
	else
	{
		sendSystemMessage(player, new string_id("spam", "couldnt_upgrade_saber_schematic"));
		CustomerServiceLog("jediSaberTrade", getFirstName(player) + "(" + player + ") could NOT upgrade their schematic "+ getStaticItemName(oldSchematic)+ "(" + oldSchematic + ") to a 5th Gen version. One of these statements returned false: (isIdValid(oldSchematic) && utils.getContainingPlayer(oldSchematic) == player) = " + (isIdValid(oldSchematic) && utils.getContainingPlayer(oldSchematic) == player)+ "or isIdValid(newSchematic) = " + isIdValid(newSchematic));
	}
}

// ----------------------------------------------------------------------

void jedi_robe_jinsu_taker_action_upgrade2HandPvP (obj_id player, obj_id npc)
{
	obj_id oldSchematic = utils.getStaticItemInInventory(player, "item_schematic_pvp_bf_saber_03_02");
	obj_id newSchematic = static_item.createNewItemFunction("item_schematic_pvp_bf_saber_03_05", player);
	
	if((isIdValid(oldSchematic) && utils.getContainingPlayer(oldSchematic) == player) && isIdValid(newSchematic))
	{
		CustomerServiceLog("jediSaberTrade", getFirstName(player) + "(" + player + ") has upgraded their saber schematic "+ getStaticItemName(oldSchematic)+ "(" + oldSchematic + ") to a 5th Gen version "+ getStaticItemName(newSchematic) +"("+newSchematic+"). This will destroy the old one.");
		destroyObject(oldSchematic);
	}
	else
	{
		sendSystemMessage(player, new string_id("spam", "couldnt_upgrade_saber_schematic"));
		CustomerServiceLog("jediSaberTrade", getFirstName(player) + "(" + player + ") could NOT upgrade their schematic "+ getStaticItemName(oldSchematic)+ "(" + oldSchematic + ") to a 5th Gen version. One of these statements returned false: (isIdValid(oldSchematic) && utils.getContainingPlayer(oldSchematic) == player) = " + (isIdValid(oldSchematic) && utils.getContainingPlayer(oldSchematic) == player)+ "or isIdValid(newSchematic) = " + isIdValid(newSchematic));
	}
}

// ----------------------------------------------------------------------

void jedi_robe_jinsu_taker_action_upgradeStaffPvP (obj_id player, obj_id npc)
{
	obj_id oldSchematic = utils.getStaticItemInInventory(player, "item_schematic_pvp_bf_saber_03_03");
	obj_id newSchematic = static_item.createNewItemFunction("item_schematic_pvp_bf_saber_03_06", player);
	
	if((isIdValid(oldSchematic) && utils.getContainingPlayer(oldSchematic) == player) && isIdValid(newSchematic))
	{
		CustomerServiceLog("jediSaberTrade", getFirstName(player) + "(" + player + ") has upgraded their saber schematic "+ getStaticItemName(oldSchematic)+ "(" + oldSchematic + ") to a 5th Gen version "+ getStaticItemName(newSchematic) +"("+newSchematic+"). This will destroy the old one.");
		destroyObject(oldSchematic);
	}
	else
	{
		sendSystemMessage(player, new string_id("spam", "couldnt_upgrade_saber_schematic"));
		CustomerServiceLog("jediSaberTrade", getFirstName(player) + "(" + player + ") could NOT upgrade their schematic "+ getStaticItemName(oldSchematic)+ "(" + oldSchematic + ") to a 5th Gen version. One of these statements returned false: (isIdValid(oldSchematic) && utils.getContainingPlayer(oldSchematic) == player) = " + (isIdValid(oldSchematic) && utils.getContainingPlayer(oldSchematic) == player)+ "or isIdValid(newSchematic) = " + isIdValid(newSchematic));
	}
}

// ----------------------------------------------------------------------

void jedi_robe_jinsu_taker_action_upgradeGcw1Handed (obj_id player, obj_id npc)
{
	obj_id oldSchematic = utils.getStaticItemInInventory(player, "item_schematic_pvp_gcw_saber_1h_gen4");
	obj_id newSchematic = static_item.createNewItemFunction("item_schematic_pvp_gcw_saber_1h_gen5", player);
	
	if((isIdValid(oldSchematic) && utils.getContainingPlayer(oldSchematic) == player) && isIdValid(newSchematic))
	{
		CustomerServiceLog("jediSaberTrade", getFirstName(player) + "(" + player + ") has upgraded their saber schematic "+ getStaticItemName(oldSchematic)+ "(" + oldSchematic + ") to a 5th Gen version "+ getStaticItemName(newSchematic) +"("+newSchematic+"). This will destroy the old one.");
		destroyObject(oldSchematic);
	}
	else
	{
		sendSystemMessage(player, new string_id("spam", "couldnt_upgrade_saber_schematic"));
		CustomerServiceLog("jediSaberTrade", getFirstName(player) + "(" + player + ") could NOT upgrade their schematic "+ getStaticItemName(oldSchematic)+ "(" + oldSchematic + ") to a 5th Gen version. One of these statements returned false: (isIdValid(oldSchematic) && utils.getContainingPlayer(oldSchematic) == player) = " + (isIdValid(oldSchematic) && utils.getContainingPlayer(oldSchematic) == player)+ "or isIdValid(newSchematic) = " + isIdValid(newSchematic));
	}
}

// ----------------------------------------------------------------------

void jedi_robe_jinsu_taker_action_upgradeGcw2Handed (obj_id player, obj_id npc)
{
	obj_id oldSchematic = utils.getStaticItemInInventory(player, "item_schematic_pvp_gcw_saber_2h_gen4");
	obj_id newSchematic = static_item.createNewItemFunction("item_schematic_pvp_gcw_saber_2h_gen5", player);
	
	if((isIdValid(oldSchematic) && utils.getContainingPlayer(oldSchematic) == player) && isIdValid(newSchematic))
	{
		CustomerServiceLog("jediSaberTrade", getFirstName(player) + "(" + player + ") has upgraded their saber schematic "+ getStaticItemName(oldSchematic)+ "(" + oldSchematic + ") to a 5th Gen version "+ getStaticItemName(newSchematic) +"("+newSchematic+"). This will destroy the old one.");
		destroyObject(oldSchematic);
	}
	else
	{
		sendSystemMessage(player, new string_id("spam", "couldnt_upgrade_saber_schematic"));
		CustomerServiceLog("jediSaberTrade", getFirstName(player) + "(" + player + ") could NOT upgrade their schematic "+ getStaticItemName(oldSchematic)+ "(" + oldSchematic + ") to a 5th Gen version. One of these statements returned false: (isIdValid(oldSchematic) && utils.getContainingPlayer(oldSchematic) == player) = " + (isIdValid(oldSchematic) && utils.getContainingPlayer(oldSchematic) == player)+ "or isIdValid(newSchematic) = " + isIdValid(newSchematic));
	}
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int jedi_robe_jinsu_taker_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back %TU. I see that you have a schematic for a new saber. Would you like to learn how to make it more powerful?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes I would.
	if (response == "s_29")
	{
		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which Saber would you like to upgrade?
			string_id message = new string_id (c_stringFile, "s_35");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: The Sith Saber please.
			boolean hasResponse0 = false;
			if (jedi_robe_jinsu_taker_condition_canTrade1Hand (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: The Two-Handed Mysterious Saber please.
			boolean hasResponse1 = false;
			if (jedi_robe_jinsu_taker_condition_canTrade2Hand (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: The Double-Bladed Darth Phobos Saber please
			boolean hasResponse2 = false;
			if (jedi_robe_jinsu_taker_condition_canTradeStaff (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: This Fourth Generation One-Handed Lightsaber Hilt purchased from a GCW Vendor.
			boolean hasResponse3 = false;
			if (jedi_robe_jinsu_taker_condition_canTradeGcw1Hand (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: This Fourth Generation Two-Handed Lightsaber Hilt purchased from a GCW Vendor.
			boolean hasResponse4 = false;
			if (jedi_robe_jinsu_taker_condition_canTradeGcw2Hand (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I have decided not do this after all.
			boolean hasResponse5 = false;
			if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_38");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_45");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_64");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				utils.setScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thank you, I like it the way it is.
	if (response == "s_33")
	{
		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you will it.
			string_id message = new string_id (c_stringFile, "s_51");
			utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int jedi_robe_jinsu_taker_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Which Saber would you like to upgrade?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Sith Saber please.
	if (response == "s_38")
	{
		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition_canTrade1Hand (player, npc))
		{
			jedi_robe_jinsu_taker_action_upgrade1HandPvP (player, npc);

			//-- NPC: Good, let me just upgrade your schematic...
			string_id message = new string_id (c_stringFile, "s_40");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you!
			boolean hasResponse0 = false;
			if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_42");

				utils.setScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			//-- NPC: It appears I was mistaken. Return to me with another schematic when you are ready.
			string_id message = new string_id (c_stringFile, "s_53");
			utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Two-Handed Mysterious Saber please.
	if (response == "s_45")
	{
		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition_canTrade2Hand (player, npc))
		{
			jedi_robe_jinsu_taker_action_upgrade2HandPvP (player, npc);

			//-- NPC: Good, let me just upgrade your schematic... There, your upgraded schematic will produce a much more powerful saber now.
			string_id message = new string_id (c_stringFile, "s_48");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you!
			boolean hasResponse0 = false;
			if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_42");

				utils.setScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			//-- NPC: It appears I was mistaken. Return to me with another schematic when you are ready.
			string_id message = new string_id (c_stringFile, "s_54");
			utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Double-Bladed Darth Phobos Saber please
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition_canTradeStaff (player, npc))
		{
			jedi_robe_jinsu_taker_action_upgradeStaffPvP (player, npc);

			//-- NPC: Good, let me just upgrade your schematic... There, your upgraded schematic will produce a much more powerful saber now.
			string_id message = new string_id (c_stringFile, "s_50");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you!
			boolean hasResponse0 = false;
			if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_42");

				utils.setScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			//-- NPC: It appears I was mistaken. Return to me with another schematic when you are ready.
			string_id message = new string_id (c_stringFile, "s_55");
			utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: This Fourth Generation One-Handed Lightsaber Hilt purchased from a GCW Vendor.
	if (response == "s_63")
	{
		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition_canTradeGcw1Hand (player, npc))
		{
			jedi_robe_jinsu_taker_action_upgradeGcw1Handed (player, npc);

			//-- NPC: Good, let me just upgrade your schematic... There, your upgraded schematic will produce a much more powerful saber now.
			string_id message = new string_id (c_stringFile, "s_65");
			utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			//-- NPC: It appears I was mistaken. Return to me with another schematic when you are ready.
			string_id message = new string_id (c_stringFile, "s_67");
			utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: This Fourth Generation Two-Handed Lightsaber Hilt purchased from a GCW Vendor.
	if (response == "s_64")
	{
		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition_canTradeGcw2Hand (player, npc))
		{
			jedi_robe_jinsu_taker_action_upgradeGcw2Handed (player, npc);

			//-- NPC: Good, let me just upgrade your schematic... There, your upgraded schematic will produce a much more powerful saber now.
			string_id message = new string_id (c_stringFile, "s_66");
			utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			//-- NPC: It appears I was mistaken. Return to me with another schematic when you are ready.
			string_id message = new string_id (c_stringFile, "s_68");
			utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have decided not do this after all.
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you will it.
			string_id message = new string_id (c_stringFile, "s_57");
			utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int jedi_robe_jinsu_taker_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good, let me just upgrade your schematic...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you!
	if (response == "s_42")
	{
		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			//-- NPC: Continue to seek enlightenment my friend.
			string_id message = new string_id (c_stringFile, "s_44");
			utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int jedi_robe_jinsu_taker_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good, let me just upgrade your schematic... There, your upgraded schematic will produce a much more powerful saber now.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you!
	if (response == "s_42")
	{
		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			//-- NPC: Continue to seek enlightenment my friend.
			string_id message = new string_id (c_stringFile, "s_44");
			utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int jedi_robe_jinsu_taker_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good, let me just upgrade your schematic... There, your upgraded schematic will produce a much more powerful saber now.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you!
	if (response == "s_42")
	{
		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			//-- NPC: Continue to seek enlightenment my friend.
			string_id message = new string_id (c_stringFile, "s_44");
			utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int jedi_robe_jinsu_taker_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There is much untapped potential within you. You have already taken the first step. Do you seek to continue?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I do.
	if (response == "s_36")
	{
		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Then I must ask for something from you. Your Jinsu Razor, please.
			string_id message = new string_id (c_stringFile, "s_39");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Okay, take it.
			boolean hasResponse0 = false;
			if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What?!!? No!
			boolean hasResponse1 = false;
			if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_60");

				utils.setScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I do not.
	if (response == "s_70")
	{
		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "applause_polite");

			//-- NPC: Knowledge of your limits is a wisdom most choose to ignore.
			string_id message = new string_id (c_stringFile, "s_72");
			utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int jedi_robe_jinsu_taker_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well. Then I must ask for something from you. Your Jinsu Razor, please.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Okay, take it.
	if (response == "s_43")
	{
		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition_takeJinsu (player, npc))
		{
			doAnimationAction (npc, "bow");

			//-- NPC: So I shall. Continue on your path...that which you seek is within reach.
			string_id message = new string_id (c_stringFile, "s_49");
			utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shoo");

			//-- NPC: Ah, you use deception. I no longer sense your Jinsu Razor. As you wish, but begone.
			string_id message = new string_id (c_stringFile, "s_58");
			utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What?!!? No!
	if (response == "s_60")
	{
		//-- [NOTE] 
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: You hold onto the past too dearly.
			string_id message = new string_id (c_stringFile, "s_62");
			utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.jedi_robe_jinsu_taker");

	setCondition (self, CONDITION_CONVERSABLE);
	ai_lib.setDefaultCalmBehavior(self, ai_lib.BEHAVIOR_SENTINEL);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	ai_lib.setDefaultCalmBehavior(self, ai_lib.BEHAVIOR_SENTINEL);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);
	faceTo( self, player );
	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.jedi_robe_jinsu_taker");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (jedi_robe_jinsu_taker_condition_canReceive5thGenSaber (player, npc))
	{
		//-- NPC: Welcome back %TU. I see that you have a schematic for a new saber. Would you like to learn how to make it more powerful?
		string_id message = new string_id (c_stringFile, "s_27");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes I would.
		boolean hasResponse0 = false;
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No thank you, I like it the way it is.
		boolean hasResponse1 = false;
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_29");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_33");

			utils.setScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId", 1);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "jedi_robe_jinsu_taker", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (jedi_robe_jinsu_taker_condition_alreadyGaveJinsu (player, npc))
	{
		//-- NPC: I have done all that I can for you, friend.
		string_id message = new string_id (c_stringFile, "s_30");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (jedi_robe_jinsu_taker_condition_readyToHandOverJinsu (player, npc))
	{
		//-- NPC: There is much untapped potential within you. You have already taken the first step. Do you seek to continue?
		string_id message = new string_id (c_stringFile, "s_32");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I do.
		boolean hasResponse0 = false;
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I do not.
		boolean hasResponse1 = false;
		if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_36");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_70");

			utils.setScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId", 17);

			npcStartConversation (player, npc, "jedi_robe_jinsu_taker", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (jedi_robe_jinsu_taker_condition__defaultCondition (player, npc))
	{
		//-- NPC: The path to enlightenment often requires one to relinquish that which they hold dear.
		string_id message = new string_id (c_stringFile, "s_74");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "jedi_robe_jinsu_taker")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

	if (branchId == 1 && jedi_robe_jinsu_taker_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && jedi_robe_jinsu_taker_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && jedi_robe_jinsu_taker_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && jedi_robe_jinsu_taker_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && jedi_robe_jinsu_taker_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && jedi_robe_jinsu_taker_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && jedi_robe_jinsu_taker_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.jedi_robe_jinsu_taker.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

