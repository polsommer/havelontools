// ======================================================================
//
// emp_day_disk_guy_1.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.30 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/emp_day_disk_guy_1";

// ======================================================================
// Script Conditions
// ======================================================================

boolean emp_day_disk_guy_1_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean emp_day_disk_guy_1_condition_hasTask3a (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_imperial");
	int task3a = groundquests.getTaskId(questId, "diskGuy1");
	return questIsTaskActive(questId, task3a, player);
}

// ======================================================================
// Script Actions
// ======================================================================

void emp_day_disk_guy_1_action_triggerAndWp (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "disk_guy_1");

	if(hasObjVar(player, "empire_day.waypoint") )
	{
		obj_id oldWaypoint = getObjIdObjVar(player, "empire_day.waypoint");
		destroyWaypointInDatapad(oldWaypoint, player);
		removeObjVar(player, "empire_day.waypoint");
	}

	location destination = new location(6711, 330, -5940, "corellia");

	obj_id waypoint = createWaypointInDatapad(player, destination);
	setObjVar(player, "empire_day.waypoint", waypoint);
	setWaypointName(waypoint, "Med Center Contact");
	sendSystemMessage(player, new string_id("event/empire_day", "sys_msg_wp_contact") );
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int emp_day_disk_guy_1_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm? Whaddya want?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I believe you have a disk for me?
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (emp_day_disk_guy_1_condition__defaultCondition (player, npc))
		{
			emp_day_disk_guy_1_action_triggerAndWp (player, npc);

			//-- NPC: Hmm? Oh yeah. I was expectin' ya. Here ya go.
			string_id message = new string_id (c_stringFile, "s_104");
			utils.removeScriptVar (player, "conversation.emp_day_disk_guy_1.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Nothing.
	if (response == "s_106")
	{
		//-- [NOTE] 
		if (emp_day_disk_guy_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yer an odd one.
			string_id message = new string_id (c_stringFile, "s_108");
			utils.removeScriptVar (player, "conversation.emp_day_disk_guy_1.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.emp_day_disk_guy_1");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.emp_day_disk_guy_1");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (emp_day_disk_guy_1_condition_hasTask3a (player, npc))
	{
		//-- NPC: Hmm? Whaddya want?
		string_id message = new string_id (c_stringFile, "s_100");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I believe you have a disk for me?
		boolean hasResponse0 = false;
		if (emp_day_disk_guy_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Nothing.
		boolean hasResponse1 = false;
		if (emp_day_disk_guy_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_102");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_106");

			utils.setScriptVar (player, "conversation.emp_day_disk_guy_1.branchId", 1);

			npcStartConversation (player, npc, "emp_day_disk_guy_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (emp_day_disk_guy_1_condition__defaultCondition (player, npc))
	{
		//-- NPC: Eh? I'm just admirin' the scenery.
		string_id message = new string_id (c_stringFile, "s_110");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "emp_day_disk_guy_1")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.emp_day_disk_guy_1.branchId");

	if (branchId == 1 && emp_day_disk_guy_1_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.emp_day_disk_guy_1.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

