// ======================================================================
//
// som_kenobi_serpent_thief.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.jedi;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/som_kenobi_serpent_thief";

// ======================================================================
// Script Conditions
// ======================================================================

boolean som_kenobi_serpent_thief_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean som_kenobi_serpent_thief_condition_playerJedi (obj_id player, obj_id npc)
{
	return jedi.isForceSensitive (player);
}

// ----------------------------------------------------------------------

boolean som_kenobi_serpent_thief_condition_thief (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "som_kenobi_serpent_shard_1", "talkThief");
}

// ======================================================================
// Script Actions
// ======================================================================

void som_kenobi_serpent_thief_action_talked (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "talkedThief");
	setInvulnerable (npc, false);
}

// ----------------------------------------------------------------------

void som_kenobi_serpent_thief_action_attack (obj_id player, obj_id npc)
{
	startCombat(npc, player);
	clearCondition(npc, CONDITION_CONVERSABLE);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int som_kenobi_serpent_thief_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, hello there, sweetie. What are you doing all the way out here?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I could say the same to you, M'Lady...
	if (response == "s_111")
	{
		doAnimationAction (player, "bow");

		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh_titter");

			//-- NPC: True...but I do believe I asked first.
			string_id message = new string_id (c_stringFile, "s_61");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I guess so. I'm out looking for something a friend lost.
			boolean hasResponse0 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				utils.setScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What am I doing out here?! What about yourself?
	if (response == "s_112")
	{
		doAnimationAction (player, "taken_aback");

		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh_titter");

			//-- NPC: No fair. I asked first.
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Fine! I'm here looking for a thief.
			boolean hasResponse0 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_120");

				utils.setScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_serpent_thief_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: True...but I do believe I asked first.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I guess so. I'm out looking for something a friend lost.
	if (response == "s_63")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: Oh really? Well, I've been here for a while. If you tell me what it is, maybe I've seen it?
			string_id message = new string_id (c_stringFile, "s_64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Well, it was stolen from him, so I'm not sure I can trust you.
			boolean hasResponse0 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: It was a small crystal shard with a flaw of a snake on it.
			boolean hasResponse1 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_68");

				utils.setScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_serpent_thief_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh really? Well, I've been here for a while. If you tell me what it is, maybe I've seen it?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well, it was stolen from him, so I'm not sure I can trust you.
	if (response == "s_66")
	{
		doAnimationAction (player, "rub_chin_thoughtful");

		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_to_self");

			//-- NPC: You can't trust little old me? Have you had any luck so far? I might be your best bet, sweetie.
			string_id message = new string_id (c_stringFile, "s_116");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I suppose you are right. It's a little crystal shard.
			boolean hasResponse0 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_117");

				utils.setScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It was a small crystal shard with a flaw of a snake on it.
	if (response == "s_68")
	{
		doAnimationAction (player, "explain");

		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Oh really? Yeah, I've seen that.
			string_id message = new string_id (c_stringFile, "s_69");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where did you see it?
			boolean hasResponse0 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_70");

				utils.setScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_serpent_thief_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You can't trust little old me? Have you had any luck so far? I might be your best bet, sweetie.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I suppose you are right. It's a little crystal shard.
	if (response == "s_117")
	{
		doAnimationAction (player, "sigh_deeply");

		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh_titter");

			//-- NPC: You may have to be a bit more specific.
			string_id message = new string_id (c_stringFile, "s_118");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, of course. It has a small flaw on it -- the shape of a snake.
			boolean hasResponse0 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_119");

				utils.setScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_serpent_thief_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You may have to be a bit more specific.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, of course. It has a small flaw on it -- the shape of a snake.
	if (response == "s_119")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Oh really? Yeah, I've seen that.
			string_id message = new string_id (c_stringFile, "s_69");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where did you see it?
			boolean hasResponse0 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_70");

				utils.setScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_serpent_thief_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh really? Yeah, I've seen that.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where did you see it?
	if (response == "s_70")
	{
		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "thumb_up");

			//-- NPC: Let me think, sweetie... Oh yeah, the last time I saw it, it was in my pocket.
			string_id message = new string_id (c_stringFile, "s_71");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I thought so. If you give it back, I'll forget this ever happened.
			boolean hasResponse0 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				utils.setScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_serpent_thief_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Let me think, sweetie... Oh yeah, the last time I saw it, it was in my pocket.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I thought so. If you give it back, I'll forget this ever happened.
	if (response == "s_91")
	{
		doAnimationAction (player, "point_forward");

		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: I'm afraid I can't do that, cutie.
			string_id message = new string_id (c_stringFile, "s_93");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why not? Don't make this any harder than it needs to be.
			boolean hasResponse0 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [Use the Force] You will give it to me.
			boolean hasResponse1 = false;
			if (som_kenobi_serpent_thief_condition_playerJedi (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_serpent_thief_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm afraid I can't do that, cutie.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why not? Don't make this any harder than it needs to be.
	if (response == "s_95")
	{
		doAnimationAction (player, "shrug_hands");

		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_shoulders");

			//-- NPC: Because I need it, sweetie. I'm also afraid that I can't let you leave now. My apologies, but this will have to be your burial ground.
			string_id message = new string_id (c_stringFile, "s_101");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Threats will get you nowhere.
			boolean hasResponse0 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				utils.setScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Use the Force] You will give it to me.
	if (response == "s_97")
	{
		doAnimationAction (player, "wave_finger_warning");

		som_kenobi_serpent_thief_action_talked (player, npc);

		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh_cackle");

			som_kenobi_serpent_thief_action_attack (player, npc);

			//-- NPC: You think you have power?! I will show you power, you feeble fool!
			string_id message = new string_id (c_stringFile, "s_99");
			utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_serpent_thief_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Because I need it, sweetie. I'm also afraid that I can't let you leave now. My apologies, but this will have to be your burial ground.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Threats will get you nowhere.
	if (response == "s_103")
	{
		doAnimationAction (player, "shake_head_no");

		som_kenobi_serpent_thief_action_talked (player, npc);

		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			som_kenobi_serpent_thief_action_attack (player, npc);

			//-- NPC: Very well. We shall see how action works then!
			string_id message = new string_id (c_stringFile, "s_115");
			utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_serpent_thief_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No fair. I asked first.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Fine! I'm here looking for a thief.
	if (response == "s_120")
	{
		doAnimationAction (player, "sigh_deeply");

		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nervous");

			//-- NPC: Oh my. What did they take?
			string_id message = new string_id (c_stringFile, "s_121");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: A small crystal shard with a little serpent on it.
			boolean hasResponse0 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I know you're not the thief?
			boolean hasResponse1 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_123");

				utils.setScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_serpent_thief_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh my. What did they take?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: A small crystal shard with a little serpent on it.
	if (response == "s_122")
	{
		doAnimationAction (player, "explain");

		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			//-- NPC: Really? I've seen that!
			string_id message = new string_id (c_stringFile, "s_124");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where?!
			boolean hasResponse0 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_125");

				utils.setScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I know you're not the thief?
	if (response == "s_123")
	{
		doAnimationAction (player, "point_accusingly");

		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh_titter");

			//-- NPC: Me? Now you're being silly. Listen, how much luck have you had so far? I might be your best lead.
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I suppose. It's a small crystal with a serpent on it.
			boolean hasResponse0 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				utils.setScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_serpent_thief_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Really? I've seen that!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where?!
	if (response == "s_125")
	{
		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "thumb_up");

			//-- NPC: Let me see...that's right, the last time I saw it it was in my pocket.
			string_id message = new string_id (c_stringFile, "s_126");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: As I suspected. Well you have only one choice, give it to me.
			boolean hasResponse0 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_serpent_thief_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Let me see...that's right, the last time I saw it it was in my pocket.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: As I suspected. Well you have only one choice, give it to me.
	if (response == "s_127")
	{
		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: Oh no, I couldn't do that, sweetie.
			string_id message = new string_id (c_stringFile, "s_128");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: If you don't give it up right now, I'm forced to hurt you.
			boolean hasResponse0 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [Use the Force] You will give it to me.
			boolean hasResponse1 = false;
			if (som_kenobi_serpent_thief_condition_playerJedi (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_129");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				utils.setScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_serpent_thief_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh no, I couldn't do that, sweetie.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: If you don't give it up right now, I'm forced to hurt you.
	if (response == "s_129")
	{
		doAnimationAction (player, "threaten");

		som_kenobi_serpent_thief_action_talked (player, npc);

		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			som_kenobi_serpent_thief_action_attack (player, npc);

			//-- NPC: No no, you got it all wrong. Since you've come here, I can't let you leave and I will most definitely hurt you.
			string_id message = new string_id (c_stringFile, "s_134");
			utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Use the Force] You will give it to me.
	if (response == "s_131")
	{
		doAnimationAction (player, "wave_finger_warning");

		som_kenobi_serpent_thief_action_talked (player, npc);

		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh_cackle");

			som_kenobi_serpent_thief_action_attack (player, npc);

			//-- NPC: You think you have power?! I will show you power, you feeble fool!
			string_id message = new string_id (c_stringFile, "s_133");
			utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_serpent_thief_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Me? Now you're being silly. Listen, how much luck have you had so far? I might be your best lead.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I suppose. It's a small crystal with a serpent on it.
	if (response == "s_136")
	{
		doAnimationAction (player, "rub_chin_thoughtful");

		//-- [NOTE] 
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			//-- NPC: Really? I've seen that!
			string_id message = new string_id (c_stringFile, "s_124");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where?!
			boolean hasResponse0 = false;
			if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_125");

				utils.setScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.som_kenobi_serpent_thief");

	ai_lib.setDefaultCalmBehavior (self, ai_lib.BEHAVIOR_SENTINEL);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	ai_lib.setDefaultCalmBehavior (self, ai_lib.BEHAVIOR_SENTINEL);	
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.som_kenobi_serpent_thief");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (som_kenobi_serpent_thief_condition_thief (player, npc))
	{
		doAnimationAction (npc, "curtsey");

		//-- NPC: Well, hello there, sweetie. What are you doing all the way out here?
		string_id message = new string_id (c_stringFile, "s_110");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I could say the same to you, M'Lady...
		boolean hasResponse0 = false;
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: What am I doing out here?! What about yourself?
		boolean hasResponse1 = false;
		if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_111");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_112");

			utils.setScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId", 1);

			npcStartConversation (player, npc, "som_kenobi_serpent_thief", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_kenobi_serpent_thief_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "laugh_titter");

		//-- NPC: You're a cute one, maybe too cute...
		string_id message = new string_id (c_stringFile, "s_43");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "som_kenobi_serpent_thief")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

	if (branchId == 1 && som_kenobi_serpent_thief_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && som_kenobi_serpent_thief_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && som_kenobi_serpent_thief_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && som_kenobi_serpent_thief_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && som_kenobi_serpent_thief_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && som_kenobi_serpent_thief_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && som_kenobi_serpent_thief_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && som_kenobi_serpent_thief_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && som_kenobi_serpent_thief_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && som_kenobi_serpent_thief_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && som_kenobi_serpent_thief_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && som_kenobi_serpent_thief_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && som_kenobi_serpent_thief_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && som_kenobi_serpent_thief_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && som_kenobi_serpent_thief_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.som_kenobi_serpent_thief.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

