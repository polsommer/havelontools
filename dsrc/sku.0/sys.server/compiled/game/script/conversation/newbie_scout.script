// ======================================================================
//
// newbie_scout.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/newbie_scout";

// ======================================================================
// Script Conditions
// ======================================================================

boolean newbie_scout_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_completedCensus (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/newbie_scout_v2");
	
	boolean OnTask =  	(questIsQuestComplete(questId1, player));
						
	return OnTask;					
	
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_completedRills (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/newbie_scout_pt5");
	
	boolean OnTask =  	(questIsQuestComplete(questId1, player));
						
	return OnTask;					
	
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_completedMites (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/newbie_scout_pt6");
	
	boolean OnTask =  	(questIsQuestComplete(questId1, player));
						
	return OnTask;					
	
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_onCensus (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/newbie_scout_v2");
	
	boolean OnTask =  	(questIsQuestActive(questId1, player));
						
	return OnTask;					
	
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_onMites (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/newbie_scout_pt6");
	
	boolean OnTask =  	(questIsQuestActive(questId1, player));
						
	return OnTask;					
	
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_onMitesReward (obj_id player, obj_id npc)
{
	if (groundquests.hasCompletedTask(player, "quest/newbie_scout_pt6", "newbie_scout_e60"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_mayorSent (obj_id player, obj_id npc)
{
	return groundquests.isQuestActiveOrComplete(player, "c_scout_trainer");
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_onCensusReward (obj_id player, obj_id npc)
{
	if (groundquests.hasCompletedTask(player, "quest/newbie_scout_v2", "newbie_scout_e100"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_onWomp (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/newbie_scout_pt2");
	
	boolean OnTask =  	(questIsQuestActive(questId1, player));
						
	return OnTask;					
	
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_onWompReward (obj_id player, obj_id npc)
{
	if (groundquests.hasCompletedTask(player, "quest/newbie_scout_pt2", "newbie_scout_e21"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_completedWomp (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/newbie_scout_pt2");
	
	boolean OnTask =  	(questIsQuestComplete(questId1, player));
						
	return OnTask;					
	
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_onKreetle (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/newbie_scout_pt3");
	
	boolean OnTask =  	(questIsQuestActive(questId1, player));
						
	return OnTask;					
	
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_onKreetleReward (obj_id player, obj_id npc)
{
	if (groundquests.hasCompletedTask(player, "quest/newbie_scout_pt3", "newbie_scout_e31"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_completedKreetle (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/newbie_scout_pt3");
	
	boolean OnTask =  	(questIsQuestComplete(questId1, player));
						
	return OnTask;					
	
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_onWorrt (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/newbie_scout_pt4");
	
	boolean OnTask =  	(questIsQuestActive(questId1, player));
						
	return OnTask;					
	
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_onWorrtReward (obj_id player, obj_id npc)
{
	if (groundquests.hasCompletedTask(player, "quest/newbie_scout_pt4", "newbie_scout_e41"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_completeWorrts (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/newbie_scout_pt4");
	
	boolean OnTask =  	(questIsQuestComplete(questId1, player));
						
	return OnTask;					
	
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_onRills (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/newbie_scout_pt5");
	
	boolean OnTask =  	(questIsQuestActive(questId1, player));
						
	return OnTask;					
	
}

// ----------------------------------------------------------------------

boolean newbie_scout_condition_onRillsReward (obj_id player, obj_id npc)
{
	if (groundquests.hasCompletedTask(player, "quest/newbie_scout_pt5", "newbie_scout_e50"))
	{
		return true;
	}
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void newbie_scout_action_startCensus (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "quest/newbie_scout_v2");
}

// ----------------------------------------------------------------------

void newbie_scout_action_startKreetle (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "quest/newbie_scout_pt3");
}

// ----------------------------------------------------------------------

void newbie_scout_action_startMites (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "quest/newbie_scout_pt6");
}

// ----------------------------------------------------------------------

void newbie_scout_action_sendRillSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "newbie_scout_trap_rills");
}

// ----------------------------------------------------------------------

void newbie_scout_action_endFromMayor (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "newbie_speak_entha");
}

// ----------------------------------------------------------------------

void newbie_scout_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void newbie_scout_action_signalCensusReward (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "newbie_scout_launch_e9");
}

// ----------------------------------------------------------------------

void newbie_scout_action_startWomp (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "quest/newbie_scout_pt2");
}

// ----------------------------------------------------------------------

void newbie_scout_action_signalWompReward (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "newbie_scout_launch_e24");
}

// ----------------------------------------------------------------------

void newbie_scout_action_signalKreetleReward (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "newbie_scout_launch_e34");
}

// ----------------------------------------------------------------------

void newbie_scout_action_startWorrts (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "quest/newbie_scout_pt4");
}

// ----------------------------------------------------------------------

void newbie_scout_action_signalWorrtReward (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "newbie_scout_launch_e44");
}

// ----------------------------------------------------------------------

void newbie_scout_action_startRills (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "quest/newbie_scout_pt5");
}

// ----------------------------------------------------------------------

void newbie_scout_action_signalRillsReward (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "newbie_scout_launch_e53");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int newbie_scout_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Looks like we got everything under control. The mayor really owes you one.  If it wasn't for you this place would have been overrun and destroyed. You should go back and get every credit you can from him.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I intend to.
	if (response == "s_722")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good for you. 
			string_id message = new string_id (c_stringFile, "s_724");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Destroyed by these vermin? Be serious.
	if (response == "s_80")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: I am. You get grunge fever and you only have a 70 percent chance of living. Those kreetle burrows almost cut off this city from the poorer farmers in the region. And the tempest rills would have chewed through every power conduit in the city. I know vermin killing doesn't sound very heroic but you saved this city from a major catastrophe. Its not all about saving princesses and blowing up the bad guy's ship. 
			string_id message = new string_id (c_stringFile, "s_81");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I hadn't thought of it that way. 
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I am. You get grunge fever and you only have a 70 percent chance of living. Those kreetle burrows almost cut off this city from the poorer farmers in the region. And the tempest rills would have chewed through every power conduit in the city. I know vermin killing doesn't sound very heroic but you saved this city from a major catastrophe. Its not all about saving princesses and blowing up the bad guy's ship. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I hadn't thought of it that way. 
	if (response == "s_82")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: I'd say you've done well.
			string_id message = new string_id (c_stringFile, "s_83");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ready to spend more time in the hills?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure. Just point the way.
	if (response == "s_130")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_startMites (player, npc);

			//-- NPC: I need those mite egg sacks ASAP.
			string_id message = new string_id (c_stringFile, "s_131");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is it this time?
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: Rockmite colonies are starting to over run the rest of the eco-system. Unlike the rills I can't have you just kill them. If their population is disrupted the stink bug population will get out of hand. 
			string_id message = new string_id (c_stringFile, "s_136");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can see that being a problem.
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_138");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Rockmite colonies are starting to over run the rest of the eco-system. Unlike the rills I can't have you just kill them. If their population is disrupted the stink bug population will get out of hand. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can see that being a problem.
	if (response == "s_138")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes it is. So I want you to gather egg sacks from the rockmites. Rockmites will not nest where other rockmites have nested. So I plan to synthesize the hormone that the egg sack excrete. Then I will spread that around the city. This will drive the nesting mothers way from the city, but still keep enough rockmites in the area to keep the stink bugs under control. You game?
			string_id message = new string_id (c_stringFile, "s_140");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure am.
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No right now.
			boolean hasResponse1 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_144");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes it is. So I want you to gather egg sacks from the rockmites. Rockmites will not nest where other rockmites have nested. So I plan to synthesize the hormone that the egg sack excrete. Then I will spread that around the city. This will drive the nesting mothers way from the city, but still keep enough rockmites in the area to keep the stink bugs under control. You game?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure am.
	if (response == "s_142")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_startMites (player, npc);

			//-- NPC: I need those mite egg sacks ASAP.
			string_id message = new string_id (c_stringFile, "s_131");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No right now.
	if (response == "s_144")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_sendRillSignal (player, npc);

			//-- NPC: All right, then. Good bye.
			string_id message = new string_id (c_stringFile, "s_75");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well the power company can rest easy. I will inform them. Talk with me again if you want more work.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks I will.
	if (response == "s_127")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_signalRillsReward (player, npc);

			//-- NPC: Take care.
			string_id message = new string_id (c_stringFile, "s_128");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The tempest rills are making lots of problems for me. Please get on with it. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just getting to it.
	if (response == "s_74")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_sendRillSignal (player, npc);

			//-- NPC: All right, then. Good bye.
			string_id message = new string_id (c_stringFile, "s_75");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Got something interesting for you. You ready?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just dump and off I go.
	if (response == "s_112")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_startRills (player, npc);

			//-- NPC: Remember it's tempest rills. Look for them up in the hills just outside of the city.
			string_id message = new string_id (c_stringFile, "s_113");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So what do you need?
	if (response == "s_114")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: Some idiot brought in some tempest rills as pets. Once they stopped being cute he released them into the wild. I need them destroyed.
			string_id message = new string_id (c_stringFile, "s_115");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: OK I am on it.
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: And this is bad because...?
			boolean hasResponse1 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am out of here.
			boolean hasResponse2 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_117");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 17);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Some idiot brought in some tempest rills as pets. Once they stopped being cute he released them into the wild. I need them destroyed.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: OK I am on it.
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_startRills (player, npc);

			//-- NPC: Remember it's tempest rills. Look for them up in the hills just outside of the city.
			string_id message = new string_id (c_stringFile, "s_113");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: And this is bad because...?
	if (response == "s_117")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: Because these rills will cross breed with the normal variety around the city. Tempest rills chew on the insulation of power cables.  If they cross breed then every single rill in the city will be its own little blackout waiting to happen. We need to kill them before they spread.
			string_id message = new string_id (c_stringFile, "s_118");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: OK, I'm on it.
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I have more important things to do. 
			boolean hasResponse1 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_119");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_120");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am out of here.
	if (response == "s_121")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: Yea you looked like someone who wouldn't know a real problem if it bit him. 
			string_id message = new string_id (c_stringFile, "s_174");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Because these rills will cross breed with the normal variety around the city. Tempest rills chew on the insulation of power cables.  If they cross breed then every single rill in the city will be its own little blackout waiting to happen. We need to kill them before they spread.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: OK, I'm on it.
	if (response == "s_119")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_startRills (player, npc);

			//-- NPC: Remember it's tempest rills. Look for them up in the hills just outside of the city.
			string_id message = new string_id (c_stringFile, "s_113");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have more important things to do. 
	if (response == "s_120")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: Yea you looked like someone who wouldn't know a real problem if it bit him. 
			string_id message = new string_id (c_stringFile, "s_174");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Great Job. I need to store these away. But I should have something for you when I get back. Talk to me again if you are interested in more work. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just dump and off I go.
	if (response == "s_112")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_startRills (player, npc);

			//-- NPC: Remember it's tempest rills. Look for them up in the hills just outside of the city.
			string_id message = new string_id (c_stringFile, "s_113");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So what do you need?
	if (response == "s_114")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: Some idiot brought in some tempest rills as pets. Once they stopped being cute he released them into the wild. I need them destroyed.
			string_id message = new string_id (c_stringFile, "s_115");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: OK I am on it.
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: And this is bad because...?
			boolean hasResponse1 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am out of here.
			boolean hasResponse2 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_117");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 17);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Look I know you are talented, but I need those bones in one piece.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It just takes time.
	if (response == "s_76")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_sendRillSignal (player, npc);

			//-- NPC: All right, then. Good bye.
			string_id message = new string_id (c_stringFile, "s_75");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You ready for the next task?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just dump the info.
	if (response == "s_312")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_startWorrts (player, npc);

			//-- NPC: Here you go. Remember I need intact worrt bones. You can find them outside the city.
			string_id message = new string_id (c_stringFile, "s_104");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is it?
	if (response == "s_103")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: Every once in a while I get to hire some people who know how to use traps and the like. But they need me to supply them with the traps. I need a number of bones from young worrts to make the traps. You want to help?
			string_id message = new string_id (c_stringFile, "s_106");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure.
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why worrt bones?
			boolean hasResponse1 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not right now.
	if (response == "s_105")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: Yea you looked like someone who wouldn't know a real problem if it bit him. 
			string_id message = new string_id (c_stringFile, "s_174");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Every once in a while I get to hire some people who know how to use traps and the like. But they need me to supply them with the traps. I need a number of bones from young worrts to make the traps. You want to help?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure.
	if (response == "s_107")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_startWorrts (player, npc);

			//-- NPC: Here you go. Remember I need intact worrt bones. You can find them outside the city.
			string_id message = new string_id (c_stringFile, "s_104");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why worrt bones?
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are organic and very pliable. These traps can't smell like metal or the animals are spooked.  They also have enough elasticity to serve as high powered springs. So I use worrt bones. You willing to help?
			string_id message = new string_id (c_stringFile, "s_109");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure am.
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll pass.
			boolean hasResponse1 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: They are organic and very pliable. These traps can't smell like metal or the animals are spooked.  They also have enough elasticity to serve as high powered springs. So I use worrt bones. You willing to help?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure am.
	if (response == "s_110")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_startWorrts (player, npc);

			//-- NPC: Here you go. Remember I need intact worrt bones. You can find them outside the city.
			string_id message = new string_id (c_stringFile, "s_104");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll pass.
	if (response == "s_111")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: Yea you looked like someone who wouldn't know a real problem if it bit him. 
			string_id message = new string_id (c_stringFile, "s_174");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. Looks like the farmers can make it to market now. Let me inform the agricultural bureau. Talk to me again when you are ready for the next task.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Glad to help.
	if (response == "s_123")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_signalKreetleReward (player, npc);

			//-- NPC: Thanks again.
			string_id message = new string_id (c_stringFile, "s_124");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch27 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I am still getting reports of Rontos being maimed by stumbling on kreetle burrows.  I really need help with this.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am working on it.
	if (response == "s_78")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_sendRillSignal (player, npc);

			//-- NPC: All right, then. Good bye.
			string_id message = new string_id (c_stringFile, "s_75");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch28 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Now I have to tackle the kreetle problem. You interested?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just dump the details on my datapad.
	if (response == "s_698")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_startKreetle (player, npc);

			//-- NPC: Great. Those kreetles are about to shut commerce down here in the city. Get them under control. 
			string_id message = new string_id (c_stringFile, "s_700");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: On my way.
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_701");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 29);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is the job?
	if (response == "s_97")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: Kreetles are burrowing all over the desert outside of town. Those burrows can be collapsed by the weight of a Ronto or other domesticated animal.
			string_id message = new string_id (c_stringFile, "s_98");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So what?
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 31);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not at the moment.
	if (response == "s_699")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: Yea you looked like someone who wouldn't know a real problem if it bit him. 
			string_id message = new string_id (c_stringFile, "s_174");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Great. Those kreetles are about to shut commerce down here in the city. Get them under control. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On my way.
	if (response == "s_701")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: Hurry. You can find them right outside the city.
			string_id message = new string_id (c_stringFile, "s_704");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch31 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Kreetles are burrowing all over the desert outside of town. Those burrows can be collapsed by the weight of a Ronto or other domesticated animal.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So what?
	if (response == "s_99")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: Most of the poorer farmers use Rontos to pull their wagons and carts filled with whatever harvest they can gather. If the Rontos break their legs the farmers can't bring the harvest into the city. So the kreetles have to go. 
			string_id message = new string_id (c_stringFile, "s_100");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Ok count me in.
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I have better things to do.
			boolean hasResponse1 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 32);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch32 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Most of the poorer farmers use Rontos to pull their wagons and carts filled with whatever harvest they can gather. If the Rontos break their legs the farmers can't bring the harvest into the city. So the kreetles have to go. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ok count me in.
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_startKreetle (player, npc);

			//-- NPC: Great. Those kreetles are about to shut commerce down here in the city. Get them under control. 
			string_id message = new string_id (c_stringFile, "s_700");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: On my way.
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_701");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 29);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have better things to do.
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: Yea you looked like someone who wouldn't know a real problem if it bit him. 
			string_id message = new string_id (c_stringFile, "s_174");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ok I am getting these skins to the medics. Here is something for your efforts. Talk to me again and I should have something else for you. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_94")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_signalWompReward (player, npc);

			//-- NPC: See you soon I hope.
			string_id message = new string_id (c_stringFile, "s_95");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch35 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The public health department has reported another case of grunge fever. We need those samples fast. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am working on it.
	if (response == "s_79")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: Get to it.
			string_id message = new string_id (c_stringFile, "s_122");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch37 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have analyzed the data from the census that you got me. The first problem we need to tackle is the womp rat infestation.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just upload the data to my pad.
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_startWomp (player, npc);

			//-- NPC: Here you go. You can find the womp rats in any of the infested areas.
			string_id message = new string_id (c_stringFile, "s_88");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Womp rats?
	if (response == "s_90")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: I have womp rats spreading grunge fever. This is not a joke. I need to get samples of the infected womp rats to the meds. The fever is transmitted by pus from lesions in the rat's skin. You can tell if the rat is infected if the skin is mottled. Just kill a womp rat and see if the skin is mottled. Oh, and be careful: don't touch the pus.
			string_id message = new string_id (c_stringFile, "s_92");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: On my way.
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pus? Forget it.
			boolean hasResponse1 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_137");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 39);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch39 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have womp rats spreading grunge fever. This is not a joke. I need to get samples of the infected womp rats to the meds. The fever is transmitted by pus from lesions in the rat's skin. You can tell if the rat is infected if the skin is mottled. Just kill a womp rat and see if the skin is mottled. Oh, and be careful: don't touch the pus.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On my way.
	if (response == "s_134")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_startWomp (player, npc);

			//-- NPC: Here you go. You can find the womp rats in any of the infested areas.
			string_id message = new string_id (c_stringFile, "s_88");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Pus? Forget it.
	if (response == "s_137")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_sendRillSignal (player, npc);

			//-- NPC: All right, then. Good bye.
			string_id message = new string_id (c_stringFile, "s_75");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch40 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Great work on that census. The infestations are worse than I thought. Here is something for your trouble. Talk with me if you want more work.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks I will. 
	if (response == "s_145")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_signalCensusReward (player, npc);

			//-- NPC: I have analyzed the data from the census that you got me. The first problem we need to tackle is the womp rat infestation.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Just upload the data to my pad.
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Womp rats?
			boolean hasResponse1 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 37);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch41 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have analyzed the data from the census that you got me. The first problem we need to tackle is the womp rat infestation.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just upload the data to my pad.
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_startWomp (player, npc);

			//-- NPC: Here you go. You can find the womp rats in any of the infested areas.
			string_id message = new string_id (c_stringFile, "s_88");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Womp rats?
	if (response == "s_90")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: I have womp rats spreading grunge fever. This is not a joke. I need to get samples of the infected womp rats to the meds. The fever is transmitted by pus from lesions in the rat's skin. You can tell if the rat is infected if the skin is mottled. Just kill a womp rat and see if the skin is mottled. Oh, and be careful: don't touch the pus.
			string_id message = new string_id (c_stringFile, "s_92");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: On my way.
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pus? Forget it.
			boolean hasResponse1 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_137");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 39);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch43 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I assume that the mayor sent you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes he did.
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_endFromMayor (player, npc);

			//-- NPC: Well at least he is listening. I need people to do some dirty jobs. You interested?
			string_id message = new string_id (c_stringFile, "s_156");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Just tell me what to do.
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How dirty?
			boolean hasResponse1 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Not interested.
			boolean hasResponse2 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_176");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 44);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not really.
	if (response == "s_349")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well I can't hire you without authorization.
			string_id message = new string_id (c_stringFile, "s_179");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch44 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well at least he is listening. I need people to do some dirty jobs. You interested?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just tell me what to do.
	if (response == "s_158")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_startCensus (player, npc);

			//-- NPC: Here you go. I need each spot visited and a census taken.
			string_id message = new string_id (c_stringFile, "s_160");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How dirty?
	if (response == "s_162")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: The public health in Mos Eisely is in danger. If we don't get the vermin under control we will lose this city.
			string_id message = new string_id (c_stringFile, "s_164");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You are kidding.
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_166");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 46);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not interested.
	if (response == "s_176")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: Yea you looked like someone who wouldn't know a real problem if it bit him. 
			string_id message = new string_id (c_stringFile, "s_174");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch46 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The public health in Mos Eisely is in danger. If we don't get the vermin under control we will lose this city.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You are kidding.
	if (response == "s_166")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: I am not. I have reports of massive vermin population increases and  infestation all around the city. I need a complete census of these areas to determine how I am going to deal with this problem. 
			string_id message = new string_id (c_stringFile, "s_168");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: OK I will do it. 
			boolean hasResponse0 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I am passing on this. 
			boolean hasResponse1 = false;
			if (newbie_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_170");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_172");

				utils.setScriptVar (player, "conversation.newbie_scout.branchId", 47);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int newbie_scout_handleBranch47 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I am not. I have reports of massive vermin population increases and  infestation all around the city. I need a complete census of these areas to determine how I am going to deal with this problem. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: OK I will do it. 
	if (response == "s_170")
	{
		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			newbie_scout_action_startCensus (player, npc);

			//-- NPC: Here you go. I need each spot visited and a census taken.
			string_id message = new string_id (c_stringFile, "s_160");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am passing on this. 
	if (response == "s_172")
	{
		doAnimationAction (player, "dismiss");

		//-- [NOTE] 
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: Yea you looked like someone who wouldn't know a real problem if it bit him. 
			string_id message = new string_id (c_stringFile, "s_174");
			utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.newbie_scout");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setCondition (self, CONDITION_INTERESTING);
	ai_lib.setDefaultCalmBehavior(self, ai_lib.BEHAVIOR_SENTINEL);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setCondition (self, CONDITION_INTERESTING);
	ai_lib.setDefaultCalmBehavior(self, ai_lib.BEHAVIOR_SENTINEL);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.newbie_scout");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (newbie_scout_condition_completedMites (player, npc))
	{
		doAnimationAction (npc, "thank");

		newbie_scout_action_facePlayer (player, npc);

		//-- NPC: I can't tell you how much you helped. Thanks again.
		string_id message = new string_id (c_stringFile, "s_148");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition_onMitesReward (player, npc))
	{
		//-- NPC: Looks like we got everything under control. The mayor really owes you one.  If it wasn't for you this place would have been overrun and destroyed. You should go back and get every credit you can from him.
		string_id message = new string_id (c_stringFile, "s_713");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I intend to.
		boolean hasResponse0 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Destroyed by these vermin? Be serious.
		boolean hasResponse1 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_722");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_80");

			utils.setScriptVar (player, "conversation.newbie_scout.branchId", 2);

			npcStartConversation (player, npc, "newbie_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition_onMites (player, npc))
	{
		newbie_scout_action_facePlayer (player, npc);

		//-- NPC: I need those egg sacks.
		string_id message = new string_id (c_stringFile, "s_146");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition_completedRills (player, npc))
	{
		newbie_scout_action_facePlayer (player, npc);

		//-- NPC: Ready to spend more time in the hills?
		string_id message = new string_id (c_stringFile, "s_129");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Sure. Just point the way.
		boolean hasResponse0 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: What is it this time?
		boolean hasResponse1 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_130");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_133");

			utils.setScriptVar (player, "conversation.newbie_scout.branchId", 7);

			npcStartConversation (player, npc, "newbie_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition_onRillsReward (player, npc))
	{
		doAnimationAction (npc, "thank");

		newbie_scout_action_facePlayer (player, npc);

		//-- NPC: Well the power company can rest easy. I will inform them. Talk with me again if you want more work.
		string_id message = new string_id (c_stringFile, "s_126");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Thanks I will.
		boolean hasResponse0 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_127");

			utils.setScriptVar (player, "conversation.newbie_scout.branchId", 11);

			npcStartConversation (player, npc, "newbie_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition_onRills (player, npc))
	{
		doAnimationAction (npc, "thank");

		//-- NPC: The tempest rills are making lots of problems for me. Please get on with it. 
		string_id message = new string_id (c_stringFile, "s_712");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Just getting to it.
		boolean hasResponse0 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_74");

			utils.setScriptVar (player, "conversation.newbie_scout.branchId", 13);

			npcStartConversation (player, npc, "newbie_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition_completeWorrts (player, npc))
	{
		//-- NPC: Got something interesting for you. You ready?
		string_id message = new string_id (c_stringFile, "s_711");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Just dump and off I go.
		boolean hasResponse0 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: So what do you need?
		boolean hasResponse1 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_112");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_114");

			utils.setScriptVar (player, "conversation.newbie_scout.branchId", 15);

			npcStartConversation (player, npc, "newbie_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition_onWorrtReward (player, npc))
	{
		doAnimationAction (npc, "throwat");

		newbie_scout_action_signalWorrtReward (player, npc);

		//-- NPC: Great Job. I need to store these away. But I should have something for you when I get back. Talk to me again if you are interested in more work. 
		string_id message = new string_id (c_stringFile, "s_125");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Just dump and off I go.
		boolean hasResponse0 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: So what do you need?
		boolean hasResponse1 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_112");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_114");

			utils.setScriptVar (player, "conversation.newbie_scout.branchId", 15);

			npcStartConversation (player, npc, "newbie_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition_onWorrt (player, npc))
	{
		//-- NPC: Look I know you are talented, but I need those bones in one piece.
		string_id message = new string_id (c_stringFile, "s_710");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: It just takes time.
		boolean hasResponse0 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_76");

			utils.setScriptVar (player, "conversation.newbie_scout.branchId", 20);

			npcStartConversation (player, npc, "newbie_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition_completedKreetle (player, npc))
	{
		//-- NPC: You ready for the next task?
		string_id message = new string_id (c_stringFile, "s_709");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Just dump the info.
		boolean hasResponse0 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: What is it?
		boolean hasResponse1 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Not right now.
		boolean hasResponse2 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_312");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_103");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_105");

			utils.setScriptVar (player, "conversation.newbie_scout.branchId", 21);

			npcStartConversation (player, npc, "newbie_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition_onKreetleReward (player, npc))
	{
		doAnimationAction (npc, "thank");

		newbie_scout_action_facePlayer (player, npc);

		//-- NPC: Good. Looks like the farmers can make it to market now. Let me inform the agricultural bureau. Talk to me again when you are ready for the next task.
		string_id message = new string_id (c_stringFile, "s_96");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Glad to help.
		boolean hasResponse0 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_123");

			utils.setScriptVar (player, "conversation.newbie_scout.branchId", 25);

			npcStartConversation (player, npc, "newbie_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition_onKreetle (player, npc))
	{
		doAnimationAction (npc, "paper");

		//-- NPC: I am still getting reports of Rontos being maimed by stumbling on kreetle burrows.  I really need help with this.
		string_id message = new string_id (c_stringFile, "s_708");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am working on it.
		boolean hasResponse0 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_78");

			utils.setScriptVar (player, "conversation.newbie_scout.branchId", 27);

			npcStartConversation (player, npc, "newbie_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition_completedWomp (player, npc))
	{
		doAnimationAction (npc, "greet");

		//-- NPC: Now I have to tackle the kreetle problem. You interested?
		string_id message = new string_id (c_stringFile, "s_697");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Just dump the details on my datapad.
		boolean hasResponse0 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: What is the job?
		boolean hasResponse1 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Not at the moment.
		boolean hasResponse2 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_698");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_97");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_699");

			utils.setScriptVar (player, "conversation.newbie_scout.branchId", 28);

			npcStartConversation (player, npc, "newbie_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition_onWompReward (player, npc))
	{
		doAnimationAction (npc, "thank");

		//-- NPC: Ok I am getting these skins to the medics. Here is something for your efforts. Talk to me again and I should have something else for you. 
		string_id message = new string_id (c_stringFile, "s_93");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Thanks.
		boolean hasResponse0 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_94");

			utils.setScriptVar (player, "conversation.newbie_scout.branchId", 33);

			npcStartConversation (player, npc, "newbie_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition_onWomp (player, npc))
	{
		//-- NPC: The public health department has reported another case of grunge fever. We need those samples fast. 
		string_id message = new string_id (c_stringFile, "s_696");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am working on it.
		boolean hasResponse0 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_79");

			utils.setScriptVar (player, "conversation.newbie_scout.branchId", 35);

			npcStartConversation (player, npc, "newbie_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition_completedCensus (player, npc))
	{
		newbie_scout_action_facePlayer (player, npc);

		//-- NPC: I have analyzed the data from the census that you got me. The first problem we need to tackle is the womp rat infestation.
		string_id message = new string_id (c_stringFile, "s_84");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Just upload the data to my pad.
		boolean hasResponse0 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Womp rats?
		boolean hasResponse1 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_86");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_90");

			utils.setScriptVar (player, "conversation.newbie_scout.branchId", 37);

			npcStartConversation (player, npc, "newbie_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition_onCensusReward (player, npc))
	{
		//-- NPC: Great work on that census. The infestations are worse than I thought. Here is something for your trouble. Talk with me if you want more work.
		string_id message = new string_id (c_stringFile, "s_141");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Thanks I will. 
		boolean hasResponse0 = false;
		if (newbie_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_145");

			utils.setScriptVar (player, "conversation.newbie_scout.branchId", 40);

			npcStartConversation (player, npc, "newbie_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition_onCensus (player, npc))
	{
		doAnimationAction (npc, "bang");

		newbie_scout_action_facePlayer (player, npc);

		//-- NPC: I need that survey done ASAP.
		string_id message = new string_id (c_stringFile, "s_151");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (newbie_scout_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "explain");

		newbie_scout_action_facePlayer (player, npc);

		//-- NPC: I assume that the mayor sent you?
		string_id message = new string_id (c_stringFile, "s_343");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes he did.
		boolean hasResponse0 = false;
		if (newbie_scout_condition_mayorSent (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Not really.
		boolean hasResponse1 = false;
		if (!newbie_scout_condition_mayorSent (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_154");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_349");

			utils.setScriptVar (player, "conversation.newbie_scout.branchId", 43);

			npcStartConversation (player, npc, "newbie_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "newbie_scout")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.newbie_scout.branchId");

	if (branchId == 2 && newbie_scout_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && newbie_scout_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && newbie_scout_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && newbie_scout_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && newbie_scout_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && newbie_scout_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && newbie_scout_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && newbie_scout_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && newbie_scout_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && newbie_scout_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && newbie_scout_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && newbie_scout_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && newbie_scout_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && newbie_scout_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && newbie_scout_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && newbie_scout_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 27 && newbie_scout_handleBranch27 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 28 && newbie_scout_handleBranch28 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && newbie_scout_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 31 && newbie_scout_handleBranch31 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 32 && newbie_scout_handleBranch32 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && newbie_scout_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 35 && newbie_scout_handleBranch35 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 37 && newbie_scout_handleBranch37 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 39 && newbie_scout_handleBranch39 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 40 && newbie_scout_handleBranch40 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 41 && newbie_scout_handleBranch41 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 43 && newbie_scout_handleBranch43 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 44 && newbie_scout_handleBranch44 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 46 && newbie_scout_handleBranch46 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 47 && newbie_scout_handleBranch47 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.newbie_scout.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

