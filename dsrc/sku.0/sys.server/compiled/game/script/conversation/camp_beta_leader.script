// ======================================================================
//
// camp_beta_leader.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.features;
include library.groundquests;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/camp_beta_leader";

// ======================================================================
// Script Conditions
// ======================================================================

boolean camp_beta_leader_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean camp_beta_leader_condition_hasRadio (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "outbreak_radio_delivery_01", "findBossInCharge");
}

// ----------------------------------------------------------------------

boolean camp_beta_leader_condition_hasBetsy (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "outbreak_betsy_hidden_content", "hasBetsy");
}

// ======================================================================
// Script Actions
// ======================================================================

void camp_beta_leader_action_deliverRadioSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "hasFoundBoss"); 
}

// ----------------------------------------------------------------------

void camp_beta_leader_action_hasDeliveredBetsy (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "hasDeliveredBetsy");
	if(!hasCompletedCollectionSlot(player, "hidden_content_betsy"))
	{
			modifyCollectionSlotValue(player, "hidden_content_betsy", 1);
	}	
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int camp_beta_leader_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have someone that you may be missing.
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (camp_beta_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "celebrate");

			camp_beta_leader_action_hasDeliveredBetsy (player, npc);

			//-- NPC: Betsy? Where did you find her! Never mind...I don't care. This is the best thing to happen since this nightmare started! Thank you, %TU!
			string_id message = new string_id (c_stringFile, "s_21");
			utils.removeScriptVar (player, "conversation.camp_beta_leader.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int camp_beta_leader_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It's been a while since we have seen a survivor. Glad you found us.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Actually I was sent here to deliver a radio.
	if (response == "s_32")
	{
		//-- [NOTE] 
		if (camp_beta_leader_condition__defaultCondition (player, npc))
		{
			camp_beta_leader_action_deliverRadioSignal (player, npc);

			//-- NPC: A radio? That is the best news I have heard since...uh, in a long time. Please hand it over.
			string_id message = new string_id (c_stringFile, "s_33");
			utils.removeScriptVar (player, "conversation.camp_beta_leader.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int camp_beta_leader_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How did you get stuck in the quarantine zone?
	if (response == "s_53")
	{
		//-- [NOTE] 
		if (camp_beta_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (player, "explain");

			//-- NPC: I happened to be in the wrong place at the wrong time I guess. I was out extracting ore when I heard the first ugly.
			string_id message = new string_id (c_stringFile, "s_64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Ugly?
			boolean hasResponse0 = false;
			if (camp_beta_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_65");

				utils.setScriptVar (player, "conversation.camp_beta_leader.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.camp_beta_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int camp_beta_leader_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I happened to be in the wrong place at the wrong time I guess. I was out extracting ore when I heard the first ugly.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ugly?
	if (response == "s_65")
	{
		//-- [NOTE] 
		if (camp_beta_leader_condition__defaultCondition (player, npc))
		{
			//-- NPC: That is what I call them...anyway, I could hear it scream...or growl...some sort of combination of the two. It was calling the others, calling for back up or something, while staring directly at me and drooling. It was 150 meters away but it was close enough to scare the daylights out of me...
			string_id message = new string_id (c_stringFile, "s_66");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Okay...well, I have to g....
			boolean hasResponse0 = false;
			if (camp_beta_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.camp_beta_leader.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.camp_beta_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int camp_beta_leader_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That is what I call them...anyway, I could hear it scream...or growl...some sort of combination of the two. It was calling the others, calling for back up or something, while staring directly at me and drooling. It was 150 meters away but it was close enough to scare the daylights out of me...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Okay...well, I have to g....
	if (response == "s_67")
	{
		//-- [NOTE] 
		if (camp_beta_leader_condition__defaultCondition (player, npc))
		{
			//-- NPC: Luckily for me, it was missing a foot. It tried to hobble toward me...it stuck it's stump in the ground and made this kind of squish sound hitting the compacted ground.
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: OKAY! Heard enough, I'm going to go now.
			boolean hasResponse0 = false;
			if (camp_beta_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_69");

				utils.setScriptVar (player, "conversation.camp_beta_leader.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.camp_beta_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int camp_beta_leader_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Luckily for me, it was missing a foot. It tried to hobble toward me...it stuck it's stump in the ground and made this kind of squish sound hitting the compacted ground.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: OKAY! Heard enough, I'm going to go now.
	if (response == "s_69")
	{
		//-- [NOTE] 
		if (camp_beta_leader_condition__defaultCondition (player, npc))
		{
			//-- NPC: Betsy sensed a threat and lunged at the ugly.
			string_id message = new string_id (c_stringFile, "s_70");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wait. Who's Betsy?
			boolean hasResponse0 = false;
			if (camp_beta_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				utils.setScriptVar (player, "conversation.camp_beta_leader.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.camp_beta_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int camp_beta_leader_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Betsy sensed a threat and lunged at the ugly.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wait. Who's Betsy?
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (camp_beta_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "cover_eyes");

			//-- NPC: My Carrion Spat, Betsy. She knocked it on the ground and covered my retreat.  I ran up to some rocks and hid. Of course more showed up then and surrounded poor Betsy. Next thing I knew I was running away. I didn't stick around to watch...she was my best friend. Oh dear...Betsy didn't have a chance.
			string_id message = new string_id (c_stringFile, "s_72");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sorry for your loss.
			boolean hasResponse0 = false;
			if (camp_beta_leader_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				utils.setScriptVar (player, "conversation.camp_beta_leader.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.camp_beta_leader.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int camp_beta_leader_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: My Carrion Spat, Betsy. She knocked it on the ground and covered my retreat.  I ran up to some rocks and hid. Of course more showed up then and surrounded poor Betsy. Next thing I knew I was running away. I didn't stick around to watch...she was my best friend. Oh dear...Betsy didn't have a chance.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry for your loss.
	if (response == "s_73")
	{
		//-- [NOTE] 
		if (camp_beta_leader_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "catchbreath");

			//-- NPC: (SOB)
			string_id message = new string_id (c_stringFile, "s_74");
			utils.removeScriptVar (player, "conversation.camp_beta_leader.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (camp_beta_leader_condition_hasBetsy (player, npc))
	{
		//-- NPC: Hello.
		string_id message = new string_id (c_stringFile, "s_19");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I have someone that you may be missing.
		boolean hasResponse0 = false;
		if (camp_beta_leader_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20");

			utils.setScriptVar (player, "conversation.camp_beta_leader.branchId", 1);

			npcStartConversation (player, npc, "camp_beta_leader", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (camp_beta_leader_condition_hasRadio (player, npc))
	{
		//-- NPC: It's been a while since we have seen a survivor. Glad you found us.
		string_id message = new string_id (c_stringFile, "s_31");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Actually I was sent here to deliver a radio.
		boolean hasResponse0 = false;
		if (camp_beta_leader_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_32");

			utils.setScriptVar (player, "conversation.camp_beta_leader.branchId", 3);

			npcStartConversation (player, npc, "camp_beta_leader", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (camp_beta_leader_condition__defaultCondition (player, npc))
	{
		//-- NPC: Yes?
		string_id message = new string_id (c_stringFile, "s_34");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: How did you get stuck in the quarantine zone?
		boolean hasResponse0 = false;
		if (camp_beta_leader_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_53");

			utils.setScriptVar (player, "conversation.camp_beta_leader.branchId", 5);

			npcStartConversation (player, npc, "camp_beta_leader", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "camp_beta_leader")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.camp_beta_leader.branchId");

	if (branchId == 1 && camp_beta_leader_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && camp_beta_leader_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && camp_beta_leader_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && camp_beta_leader_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && camp_beta_leader_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && camp_beta_leader_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && camp_beta_leader_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && camp_beta_leader_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.camp_beta_leader.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

