// ======================================================================
//
// c_tutorial_rm5.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.30 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_tutorial_rm5";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_tutorial_rm5_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_tutorial_rm5_condition_playerOnQuest (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_hall_02");
	int explainWaypoint = groundquests.getTaskId(questId, "explainWaypoint");
	
	boolean onTask = questIsQuestActive(questId, player)&&!questIsTaskComplete(questId, explainWaypoint, player);
	
	return onTask;
}

// ----------------------------------------------------------------------

boolean c_tutorial_rm5_condition_TaskComplete (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_hall_02");
	int explainWaypoint = groundquests.getTaskId(questId, "explainWaypoint"); 
	
	boolean onTask = questIsTaskComplete(questId, explainWaypoint, player);
	
	return onTask;	
}

// ----------------------------------------------------------------------

boolean c_tutorial_rm5_condition_playerOnQuestStep04 (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_hall_01");
	int explainRadar = groundquests.getTaskId(questId, "explainRadar"); 
	
	boolean onTask = questIsQuestActive(questId, player)&&!questIsTaskComplete(questId, explainRadar, player);
	
	return onTask;
}

// ======================================================================
// Script Actions
// ======================================================================

void c_tutorial_rm5_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void c_tutorial_rm5_action_actionSendSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "explainWaypoint");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_tutorial_rm5_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hurry up now, we can't have you straggling behind. The weapons master is waiting for you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Straggling? I'm going as fast as I can!
	if (response == "s_184")
	{
		//-- [NOTE] 
		if (c_tutorial_rm5_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Hmm...well we'll have to do something about that. Hasn't anyone told you where he is?
			string_id message = new string_id (c_stringFile, "s_186");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: No, and I could really use a weapon!
			boolean hasResponse0 = false;
			if (c_tutorial_rm5_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_188");

				utils.setScriptVar (player, "conversation.c_tutorial_rm5.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm5.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Weapons Master? It's about time! Show me the way to him!
	if (response == "s_196")
	{
		//-- [NOTE] 
		if (c_tutorial_rm5_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: Didn't anyone tell you where he is?
			string_id message = new string_id (c_stringFile, "s_198");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: If they had, I wouldn't be here standing talking to you!
			boolean hasResponse0 = false;
			if (c_tutorial_rm5_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.c_tutorial_rm5.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm5.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm5_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm...well we'll have to do something about that. Hasn't anyone told you where he is?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, and I could really use a weapon!
	if (response == "s_188")
	{
		//-- [NOTE] 
		if (c_tutorial_rm5_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_right");

			//-- NPC: The Weapons Master is waiting for you in the next room. He doesn't like people to be late, so hurry!
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Great!
			boolean hasResponse0 = false;
			if (c_tutorial_rm5_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_192");

				utils.setScriptVar (player, "conversation.c_tutorial_rm5.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm5.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm5_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Weapons Master is waiting for you in the next room. He doesn't like people to be late, so hurry!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Great!
	if (response == "s_192")
	{
		//-- [NOTE] 
		if (c_tutorial_rm5_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave1");

			c_tutorial_rm5_action_actionSendSignal (player, npc);

			//-- NPC: Happy training.
			string_id message = new string_id (c_stringFile, "s_194");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm5.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm5_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Didn't anyone tell you where he is?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: If they had, I wouldn't be here standing talking to you!
	if (response == "s_200")
	{
		//-- [NOTE] 
		if (c_tutorial_rm5_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_right");

			//-- NPC: Then I won't bore you with my presence. The Weapons Master is waiting for you in the next room. He does not take kindly to those who would waste his time. Now hurry!
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Finally, I get to shoot something!
			boolean hasResponse0 = false;
			if (c_tutorial_rm5_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				utils.setScriptVar (player, "conversation.c_tutorial_rm5.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm5.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm5_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Then I won't bore you with my presence. The Weapons Master is waiting for you in the next room. He does not take kindly to those who would waste his time. Now hurry!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Finally, I get to shoot something!
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (c_tutorial_rm5_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_on_dismissing");

			c_tutorial_rm5_action_actionSendSignal (player, npc);

			//-- NPC: Yeah, yeah, go get 'em.
			string_id message = new string_id (c_stringFile, "s_206");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm5.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_tutorial_rm5");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Captain Bailie");	
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Captain Bailie");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_tutorial_rm5");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (c_tutorial_rm5_condition_playerOnQuest (player, npc))
	{
		doAnimationAction (npc, "beckon");

		c_tutorial_rm5_action_facePlayer (player, npc);

		//-- NPC: Hurry up now, we can't have you straggling behind. The weapons master is waiting for you.
		string_id message = new string_id (c_stringFile, "s_182");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Straggling? I'm going as fast as I can!
		boolean hasResponse0 = false;
		if (c_tutorial_rm5_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Weapons Master? It's about time! Show me the way to him!
		boolean hasResponse1 = false;
		if (c_tutorial_rm5_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_184");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_196");

			utils.setScriptVar (player, "conversation.c_tutorial_rm5.branchId", 1);

			npcStartConversation (player, npc, "c_tutorial_rm5", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_tutorial_rm5_condition_TaskComplete (player, npc))
	{
		doAnimationAction (npc, "wave_on_dismissing");

		c_tutorial_rm5_action_facePlayer (player, npc);

		//-- NPC: Move along the corridor please.
		string_id message = new string_id (c_stringFile, "s_208");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_tutorial_rm5_condition_playerOnQuestStep04 (player, npc))
	{
		doAnimationAction (npc, "point_forward");

		c_tutorial_rm5_action_facePlayer (player, npc);

		//-- NPC: You need to see Lieutenant Farin in the droid repair shop.
		string_id message = new string_id (c_stringFile, "s_210");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_tutorial_rm5")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_tutorial_rm5.branchId");

	if (branchId == 1 && c_tutorial_rm5_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && c_tutorial_rm5_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && c_tutorial_rm5_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && c_tutorial_rm5_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && c_tutorial_rm5_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_tutorial_rm5.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

