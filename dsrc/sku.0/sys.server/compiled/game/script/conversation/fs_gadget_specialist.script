// ======================================================================
//
// fs_gadget_specialist.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.money;
include library.quests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/fs_gadget_specialist";

// ======================================================================
// Script Conditions
// ======================================================================

boolean fs_gadget_specialist_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean fs_gadget_specialist_condition_onQuestStep01 (obj_id player, obj_id npc)
{
	if ( hasScript(player, "quest.force_sensitive.fs_crafting4_player") )
	{
		if ( quests.isActive("fs_crafting4_quest_01", player) )
		{
			return true;
		}
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean fs_gadget_specialist_condition_onQuestStep02 (obj_id player, obj_id npc)
{
	if ( hasScript(player, "quest.force_sensitive.fs_crafting4_player") )
	{
		if ( quests.isActive("fs_crafting4_quest_02", player) )
		{
			return true;
		}
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean fs_gadget_specialist_condition_onQuestStep03 (obj_id player, obj_id npc)
{
	if ( hasScript(player, "quest.force_sensitive.fs_crafting4_player") )
	{
		if ( quests.isActive("fs_crafting4_quest_03", player) )
		{
			return true;
		}
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean fs_gadget_specialist_condition_onQuestStep04 (obj_id player, obj_id npc)
{
	if ( hasScript(player, "quest.force_sensitive.fs_crafting4_player") )
	{
		if ( quests.isActive("fs_crafting4_quest_04", player) )
		{
			return true;
		}
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean fs_gadget_specialist_condition_onQuestStep05 (obj_id player, obj_id npc)
{
	if ( hasScript(player, "quest.force_sensitive.fs_crafting4_player") )
	{
		if ( quests.isActive("fs_crafting4_quest_05", player) )
		{
			return true;
		}
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean fs_gadget_specialist_condition_onQuestStep06 (obj_id player, obj_id npc)
{
	if ( hasScript(player, "quest.force_sensitive.fs_crafting4_player") )
	{
		if ( quests.isActive("fs_crafting4_quest_06", player) )
		{
			return true;
		}
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean fs_gadget_specialist_condition_noInventorySpace (obj_id player, obj_id npc)
{
	boolean hasNoInvRoom = false;
	obj_id playerInv = utils.getInventoryContainer(player);
	if ( isIdValid(playerInv) )
	{
		int free_space = getVolumeFree(playerInv);
		if (free_space < 1 )
		{
			hasNoInvRoom = true;
		}
	}
	return hasNoInvRoom;
}

// ----------------------------------------------------------------------

boolean fs_gadget_specialist_condition_notEnoughCredits (obj_id player, obj_id npc)
{
	return (!money.hasFunds(player, money.MT_TOTAL, 530));
}

// ----------------------------------------------------------------------

boolean fs_gadget_specialist_condition_returningForKit (obj_id player, obj_id npc)
{
	return hasObjVar(player, "fs_crafting4.gadget.returnForKit");
}

// ----------------------------------------------------------------------

boolean fs_gadget_specialist_condition_onGoGoGadgetQuest (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "corellia_coronet_capitol_problems_go_go_gadget", "go_go_gadget_1");
}

// ----------------------------------------------------------------------

boolean fs_gadget_specialist_condition_goGoGadgetFavorDone (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "corellia_coronet_capitol_problems_go_go_gadget", "go_go_gadget_5");
}

// ======================================================================
// Script Actions
// ======================================================================

void fs_gadget_specialist_action_giveTrackingDeviceKit (obj_id player, obj_id npc)
{
	string kitTemplate = "object/tangible/loot/collectible/kits/fs_tracking_device_kit.iff";
	int kitCost = 530;
	
	obj_id playerInv = getObjectInSlot( player, "inventory" ); 
	if(isIdValid(playerInv)) 
	{
		obj_id kit = createObject(kitTemplate, playerInv, "" );
		if(isIdValid(kit))
		{
			utils.moneyOutMetric(player, "FS_QUESTS", kitCost);
			money.requestPayment(player, npc, kitCost, "pass_fail", null, true);
			
			quests.complete("fs_crafting4_quest_01", player, true);
			
			if ( hasObjVar(player, "fs_crafting4.gadget.returnForKit") )
			{
				removeObjVar(player, "fs_crafting4.gadget.returnForKit");
			}
			
			// Customer Service Log
			string custLogMsg = "FS Phase 4 Crafting Quest: Player %TU has been given the tracking device loot kit.";
			CustomerServiceLog("FS_Phase4_Crafting", custLogMsg, player);
		}
	}
	return;
}

// ----------------------------------------------------------------------

void fs_gadget_specialist_action_setReturningForKit (obj_id player, obj_id npc)
{
	setObjVar(player, "fs_crafting4.gadget.returnForKit", 1);
	return;
}

// ----------------------------------------------------------------------

void fs_gadget_specialist_action_goGoGadgetFavor (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "go_go_gadget_1");
}

// ----------------------------------------------------------------------

void fs_gadget_specialist_action_goGoGadgetEnd (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "go_go_gadget_5");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int fs_gadget_specialist_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back. Still interested in a downed satellite tracking device? The price is 530 credits.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds fair enough. I'll take one.
	if (response == "s_a8749106")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition_notEnoughCredits (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			fs_gadget_specialist_action_setReturningForKit (player, npc);

			//-- NPC: You don't seem to have enough funds at the moment. I'd love to help, but I can't give the kit away for nothing. Come back when you have more funds.
			string_id message = new string_id (c_stringFile, "s_b518079a");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (fs_gadget_specialist_condition_noInventorySpace (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			fs_gadget_specialist_action_setReturningForKit (player, npc);

			//-- NPC: You don't have enough space in your inventory for the kit. Make some room and then come speak with me again.
			string_id message = new string_id (c_stringFile, "s_faaeb65f");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			fs_gadget_specialist_action_giveTrackingDeviceKit (player, npc);

			//-- NPC: Excellent. I'll just place it in your inventory. Good luck finding a satellite and that replacement computer core.
			string_id message = new string_id (c_stringFile, "s_bdcd33ef");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You must think I just fell off of a bantha! I'll not be scammed so easily.
	if (response == "s_8fe6a678")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Ha. I was just offering to help. You can't expect me to ignore my livelihood and give this kind of thing away for nothing. My price is more than fair. But whatever. Good day.
			string_id message = new string_id (c_stringFile, "s_6d9d310");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fs_gadget_specialist_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I've much to do...  can I help you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have your money from Mr. Troeman.
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			fs_gadget_specialist_action_goGoGadgetEnd (player, npc);

			//-- NPC: Excellent. I'm so glad that's behind me. No more doing business on credit, that's my new motto. Here's the remote relay device. Bring it to Lt. Jasper. Next time it's used, it should give you the global position of the source signal.
			string_id message = new string_id (c_stringFile, "s_51");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lt. Jasper sent me to get your help with this device.
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lt. Jasper? Ah yes, I remember him. Is he still with CorSec? I seem to remember he had quite a lot of skill with his hands. Woodcarving, I believe it was. Maybe stone sculpting. Something like that. Well, let me take a look at that device.
			string_id message = new string_id (c_stringFile, "s_41");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What do you think it does?
			boolean hasResponse0 = false;
			if (fs_gadget_specialist_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_42");

				utils.setScriptVar (player, "conversation.fs_gadget_specialist.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I was told you could help me obtain a replacement computer core.
	if (response == "s_79fe19ed")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: A replacement computer core? Who gave you that idea?
			string_id message = new string_id (c_stringFile, "s_b49f7181");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: The chief engineer from a village on Dathomir. The village of Aurilia.
			boolean hasResponse0 = false;
			if (fs_gadget_specialist_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Er... no one. I'm sorry to have bothered you.
			boolean hasResponse1 = false;
			if (fs_gadget_specialist_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85bd3ae2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_55082d0b");

				utils.setScriptVar (player, "conversation.fs_gadget_specialist.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do I do with this tracking device kit?
	if (response == "s_c7baf80c")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			//-- NPC: You need to collect or craft all of the required components and place them in the kit. Once you have all of the components, the kit's automated system will build the tracking device.
			string_id message = new string_id (c_stringFile, "s_4bcdc402");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get tracking data for a fallen satellite?
	if (response == "s_bab2829b")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			//-- NPC: Go to any ticket droid at a starport. They have access to the database with information about fallen and abandoned satellites around the galaxy. You can purchase the rights to one of them from the droid.
			string_id message = new string_id (c_stringFile, "s_65f76975");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I use this tracking device?
	if (response == "s_7f396fce")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			//-- NPC: Simply use the device's menu and choose to activate the tracking device. If you're on the wrong planet, it will tell you which planet the satellite is on. Once you're on the correct planet, the device can then pinpoint the exact location of the satellite.
			string_id message = new string_id (c_stringFile, "s_f9732f00");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make this computer core work with the village computer?
	if (response == "s_b867b2e4")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			//-- NPC: The chief engineer at Aurilia can probably give you more information, but I believe you'll have to modify the core's current interface so that it will be compatible with the village's computer. Usually there's a simple menu on the core itself that will allow you to try and modify it.
			string_id message = new string_id (c_stringFile, "s_70253663");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The computer core is ready... now what?
	if (response == "s_fe739220")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			//-- NPC: Now you can bring it to Aurilia's chief engineer and then bask in the glory of a job well done.
			string_id message = new string_id (c_stringFile, "s_d8a8c77e");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh, my apologies. I'll let you get back to work.
	if (response == "s_5542b04b")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			//-- NPC: That's quite alright. Good day to you.
			string_id message = new string_id (c_stringFile, "s_1283cb1c");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fs_gadget_specialist_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Lt. Jasper? Ah yes, I remember him. Is he still with CorSec? I seem to remember he had quite a lot of skill with his hands. Woodcarving, I believe it was. Maybe stone sculpting. Something like that. Well, let me take a look at that device.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you think it does?
	if (response == "s_42")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			//-- NPC: Looks pretty straightforward. It's used as a relay from data transfer or communication. You connect this to a terminal. After that, you can send messages from a remote location, but they will appear to come from the terminal to which this device is attached. Could be very useful. Could also be very malicious. If you give me some time, I could rig it to spit out the global coordinates of the source of any signal sent for it to relay.
			string_id message = new string_id (c_stringFile, "s_43");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That sounds great. Lt. Jasper would want that.
			boolean hasResponse0 = false;
			if (fs_gadget_specialist_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				utils.setScriptVar (player, "conversation.fs_gadget_specialist.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fs_gadget_specialist_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Looks pretty straightforward. It's used as a relay from data transfer or communication. You connect this to a terminal. After that, you can send messages from a remote location, but they will appear to come from the terminal to which this device is attached. Could be very useful. Could also be very malicious. If you give me some time, I could rig it to spit out the global coordinates of the source of any signal sent for it to relay.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That sounds great. Lt. Jasper would want that.
	if (response == "s_44")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes, he probably would. While I'm working on this, how about you do me a favor? There's a local businessman who owes me some money for services I performed for him a while back. He refuses to pay. Could you go talk to him and collect my payment from him?
			string_id message = new string_id (c_stringFile, "s_45");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd be happy to help.
			boolean hasResponse0 = false;
			if (fs_gadget_specialist_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Maybe later. I can't right now.
			boolean hasResponse1 = false;
			if (fs_gadget_specialist_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				utils.setScriptVar (player, "conversation.fs_gadget_specialist.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fs_gadget_specialist_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, he probably would. While I'm working on this, how about you do me a favor? There's a local businessman who owes me some money for services I performed for him a while back. He refuses to pay. Could you go talk to him and collect my payment from him?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd be happy to help.
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			fs_gadget_specialist_action_goGoGadgetFavor (player, npc);

			//-- NPC: Thank you. His name's Frye Troeman. He's not pleasant.
			string_id message = new string_id (c_stringFile, "s_48");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Maybe later. I can't right now.
	if (response == "s_47")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, I see how it is. That reminds me. I have about a dozen other jobs that are in line ahead of yours. Come back for the device in about, say, a month or so?
			string_id message = new string_id (c_stringFile, "s_49");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fs_gadget_specialist_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A replacement computer core? Who gave you that idea?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The chief engineer from a village on Dathomir. The village of Aurilia.
	if (response == "s_85bd3ae2")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Aurilia on Dathomir... yeah, I know the place. Well, know of it anyway. I've done business with them in the past. They need a replacement computer core?
			string_id message = new string_id (c_stringFile, "s_4389624e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's correct. Their current one was damaged during an attack on the village.
			boolean hasResponse0 = false;
			if (fs_gadget_specialist_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a1dd9b9e");

				utils.setScriptVar (player, "conversation.fs_gadget_specialist.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Er... no one. I'm sorry to have bothered you.
	if (response == "s_55082d0b")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			//-- NPC: I... um... see. Well. Good day then.
			string_id message = new string_id (c_stringFile, "s_3d8991fc");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fs_gadget_specialist_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Aurilia on Dathomir... yeah, I know the place. Well, know of it anyway. I've done business with them in the past. They need a replacement computer core?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's correct. Their current one was damaged during an attack on the village.
	if (response == "s_a1dd9b9e")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_shoulders");

			//-- NPC: Well, I wish I could help, but I don't have anything like that in stock. Rarely do to be honest. I tend to tinker more with smaller devices. Large systems like a town... or village... computer require far more attention than I'm willing to give.
			string_id message = new string_id (c_stringFile, "s_be68030a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Is there nothing that can be done to find a replacement for Aurilia?
			boolean hasResponse0 = false;
			if (fs_gadget_specialist_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: That's disappointing. But I guess if you don't have one, then you don't have one.
			boolean hasResponse1 = false;
			if (fs_gadget_specialist_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_be1b8c5a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4d7434d2");

				utils.setScriptVar (player, "conversation.fs_gadget_specialist.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fs_gadget_specialist_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, I wish I could help, but I don't have anything like that in stock. Rarely do to be honest. I tend to tinker more with smaller devices. Large systems like a town... or village... computer require far more attention than I'm willing to give.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is there nothing that can be done to find a replacement for Aurilia?
	if (response == "s_be1b8c5a")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Hmm... let me think a minute.
			string_id message = new string_id (c_stringFile, "s_e5c058a8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I purchase the rights to a fallen and abandoned satellite?
			boolean hasResponse0 = false;
			if (fs_gadget_specialist_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sounds like a terrible idea. Thanks for nothing.
			boolean hasResponse1 = false;
			if (fs_gadget_specialist_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_fff0f4f2");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46bdeee4");

				utils.setScriptVar (player, "conversation.fs_gadget_specialist.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's disappointing. But I guess if you don't have one, then you don't have one.
	if (response == "s_4d7434d2")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: Tell the Aurilia engineer that I wish I could have been more helpful, but not much I can really do about something like that.
			string_id message = new string_id (c_stringFile, "s_533919fc");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fs_gadget_specialist_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm... let me think a minute.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I purchase the rights to a fallen and abandoned satellite?
	if (response == "s_fff0f4f2")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: Nothing's easier. you simply go to any starport and speak with the ticket droid. These droids have access to a galactic-wide database that maintains records about satellites in orbit around most known planets. For a fee, you can purchase the rights to one that has fallen and gone unclaimed.
			string_id message = new string_id (c_stringFile, "s_e79d337");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds reasonable. I'm off to the starport.
			boolean hasResponse0 = false;
			if (fs_gadget_specialist_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b9f237f");

				utils.setScriptVar (player, "conversation.fs_gadget_specialist.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds like a terrible idea. Thanks for nothing.
	if (response == "s_46bdeee4")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_on_dismissing");

			//-- NPC: Ha. Whatever. Be on your way, then.
			string_id message = new string_id (c_stringFile, "s_9d19b512");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fs_gadget_specialist_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Nothing's easier. you simply go to any starport and speak with the ticket droid. These droids have access to a galactic-wide database that maintains records about satellites in orbit around most known planets. For a fee, you can purchase the rights to one that has fallen and gone unclaimed.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds reasonable. I'm off to the starport.
	if (response == "s_b9f237f")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Wait! Before speaking with the droid, there's one other thing. You'll need a downed satellite tracking device. When you purchase the rights to one, the droid will upload tracking data to your tracking device. It will then help you to locate the fallen satellite. I can provide you with a kit for just such a device for a small fee. Say, 530 credits? 
			string_id message = new string_id (c_stringFile, "s_bdedc5e2");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds fair enough. I'll take one.
			boolean hasResponse0 = false;
			if (fs_gadget_specialist_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: You must think I just fell off of a bantha! I'll not be scammed so easily.
			boolean hasResponse1 = false;
			if (fs_gadget_specialist_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a8749106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8fe6a678");

				utils.setScriptVar (player, "conversation.fs_gadget_specialist.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int fs_gadget_specialist_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Wait! Before speaking with the droid, there's one other thing. You'll need a downed satellite tracking device. When you purchase the rights to one, the droid will upload tracking data to your tracking device. It will then help you to locate the fallen satellite. I can provide you with a kit for just such a device for a small fee. Say, 530 credits? 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds fair enough. I'll take one.
	if (response == "s_a8749106")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition_notEnoughCredits (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			fs_gadget_specialist_action_setReturningForKit (player, npc);

			//-- NPC: You don't seem to have enough funds at the moment. I'd love to help, but I can't give the kit away for nothing. Come back when you have more funds.
			string_id message = new string_id (c_stringFile, "s_b518079a");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (fs_gadget_specialist_condition_noInventorySpace (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			fs_gadget_specialist_action_setReturningForKit (player, npc);

			//-- NPC: You don't have enough space in your inventory for the kit. Make some room and then come speak with me again.
			string_id message = new string_id (c_stringFile, "s_faaeb65f");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			fs_gadget_specialist_action_giveTrackingDeviceKit (player, npc);

			//-- NPC: Excellent. I'll just place it in your inventory. Good luck finding a satellite and that replacement computer core.
			string_id message = new string_id (c_stringFile, "s_bdcd33ef");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You must think I just fell off of a bantha! I'll not be scammed so easily.
	if (response == "s_8fe6a678")
	{
		//-- [NOTE] 
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Ha. I was just offering to help. You can't expect me to ignore my livelihood and give this kind of thing away for nothing. My price is more than fair. But whatever. Good day.
			string_id message = new string_id (c_stringFile, "s_6d9d310");
			utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.fs_gadget_specialist");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.fs_gadget_specialist");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (fs_gadget_specialist_condition_returningForKit (player, npc))
	{
		//-- NPC: Welcome back. Still interested in a downed satellite tracking device? The price is 530 credits.
		string_id message = new string_id (c_stringFile, "s_7045a2d7");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Sounds fair enough. I'll take one.
		boolean hasResponse0 = false;
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: You must think I just fell off of a bantha! I'll not be scammed so easily.
		boolean hasResponse1 = false;
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_a8749106");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_8fe6a678");

			utils.setScriptVar (player, "conversation.fs_gadget_specialist.branchId", 14);

			npcStartConversation (player, npc, "fs_gadget_specialist", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_gadget_specialist_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "check_wrist_device");

		//-- NPC: I've much to do...  can I help you?
		string_id message = new string_id (c_stringFile, "s_5a562246");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I have your money from Mr. Troeman.
		boolean hasResponse0 = false;
		if (fs_gadget_specialist_condition_goGoGadgetFavorDone (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Lt. Jasper sent me to get your help with this device.
		boolean hasResponse1 = false;
		if (fs_gadget_specialist_condition_onGoGoGadgetQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Yes, I was told you could help me obtain a replacement computer core.
		boolean hasResponse2 = false;
		if (fs_gadget_specialist_condition_onQuestStep01 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: What do I do with this tracking device kit?
		boolean hasResponse3 = false;
		if (fs_gadget_specialist_condition_onQuestStep02 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		//-- PLAYER: How do I get tracking data for a fallen satellite?
		boolean hasResponse4 = false;
		if (fs_gadget_specialist_condition_onQuestStep03 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse4 = true;
		}

		//-- PLAYER: How do I use this tracking device?
		boolean hasResponse5 = false;
		if (fs_gadget_specialist_condition_onQuestStep04 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse5 = true;
		}

		//-- PLAYER: How do I make this computer core work with the village computer?
		boolean hasResponse6 = false;
		if (fs_gadget_specialist_condition_onQuestStep05 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse6 = true;
		}

		//-- PLAYER: The computer core is ready... now what?
		boolean hasResponse7 = false;
		if (fs_gadget_specialist_condition_onQuestStep06 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse7 = true;
		}

		//-- PLAYER: Oh, my apologies. I'll let you get back to work.
		boolean hasResponse8 = false;
		if (fs_gadget_specialist_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse8 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_50");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_40");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_79fe19ed");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_c7baf80c");

			if (hasResponse4)
				responses [responseIndex++] = new string_id (c_stringFile, "s_bab2829b");

			if (hasResponse5)
				responses [responseIndex++] = new string_id (c_stringFile, "s_7f396fce");

			if (hasResponse6)
				responses [responseIndex++] = new string_id (c_stringFile, "s_b867b2e4");

			if (hasResponse7)
				responses [responseIndex++] = new string_id (c_stringFile, "s_fe739220");

			if (hasResponse8)
				responses [responseIndex++] = new string_id (c_stringFile, "s_5542b04b");

			utils.setScriptVar (player, "conversation.fs_gadget_specialist.branchId", 2);

			npcStartConversation (player, npc, "fs_gadget_specialist", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "fs_gadget_specialist")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.fs_gadget_specialist.branchId");

	if (branchId == 1 && fs_gadget_specialist_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && fs_gadget_specialist_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && fs_gadget_specialist_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && fs_gadget_specialist_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && fs_gadget_specialist_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && fs_gadget_specialist_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && fs_gadget_specialist_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && fs_gadget_specialist_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && fs_gadget_specialist_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && fs_gadget_specialist_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && fs_gadget_specialist_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.fs_gadget_specialist.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

