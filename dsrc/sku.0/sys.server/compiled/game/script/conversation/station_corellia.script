// ======================================================================
//
// station_corellia.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.factions;
include library.space_combat;
include library.space_content;
include library.space_crafting;
include library.space_flags;
include library.space_quest;
include library.space_skill;
include library.space_transition;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/station_corellia";

// ======================================================================
// Script Conditions
// ======================================================================

boolean station_corellia_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_canAfford50 (obj_id player, obj_id npc)
{
	return space_crafting.canAffordShipRepairs(player, npc, .50f);
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_canAfford25 (obj_id player, obj_id npc)
{
	return ( space_crafting.canAffordShipRepairs(player, npc, .25f) && space_crafting.isDamaged( player ) );
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_canAfford75 (obj_id player, obj_id npc)
{
	return space_crafting.canAffordShipRepairs(player, npc, .75f);
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_canAfford100 (obj_id player, obj_id npc)
{
	return space_crafting.canAffordShipRepairs(player, npc, 1.0f);
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_needRepairs (obj_id player, obj_id npc)
{
	
	float fltDamage = space_crafting.getDamageTotal(player, getPilotedShip(player));
	if(fltDamage>0)
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_isTooFar (obj_id player, obj_id npc)
{
	space_combat.playCombatTauntSound( player );
	obj_id containingShip = space_transition.getContainingShip(player);
	return ( getDistance( npc, containingShip ) > space_transition.STATION_COMM_MAX_DISTANCE );
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_isCorelliaTier1Rebel (obj_id player, obj_id npc)
{
	return ( space_flags.isInTierOne( player ) &&
			 space_flags.isSpaceTrack( player, space_flags.REBEL_CORELLIA ) );
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_isCorelliaTier1Privateer (obj_id player, obj_id npc)
{
	return ( space_flags.isInTierOne( player ) &&
			 space_flags.isSpaceTrack( player, space_flags.PRIVATEER_CORELLIA ) );
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_isCorSec (obj_id player, obj_id npc)
{
	if(!space_flags.isSpaceTrack(player, space_flags.PRIVATEER_CORELLIA))
		return false;
		
	if(space_quest.hasQuest(player))
		return false;
		
	if(	space_quest.hasWonQuest(player, "assassinate", "corellia_station_mission5b_3") ||
		space_quest.hasWonQuest(player, "destroy_surpriseattack", "corellia_station_mission5a_2"))
		return false;
		
	if(space_flags.hasSpaceFlag(player, "isOnCorelliaStationMission"))
		return false;
		
	if(space_flags.hasSpaceFlag(player, "waitingForCorelliaStationMission")) {
	
		if(isGod(player))
			sendSystemMessageTestingOnly(player, "[GOD MODE MSG] You are currently waiting on your next mission that should arrive via e-mail within 3 hours.");
			
		return false;
	}
		
	int r = rand(0,19);
	
	if(r == 0)
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_hasWonMission1 (obj_id player, obj_id npc)
{
	if(space_quest.hasWonQuest(player, "rescue", "corellia_station_mission1_1") &&
	  !space_quest.hasReceivedReward(player, "rescue", "corellia_station_mission1_1"))
	  	return true;
	  	
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_hasWonMission2 (obj_id player, obj_id npc)
{
	if(space_quest.hasWonQuest(player, "recovery", "corellia_station_mission2_1") &&
	  !space_quest.hasReceivedReward(player, "recovery", "corellia_station_mission2_1"))
	  	return true;
	  	
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_hasWonMission3 (obj_id player, obj_id npc)
{
	if(space_quest.hasWonQuest(player, "delivery_no_pickup", "corellia_station_mission3_2") &&
	  !space_quest.hasReceivedReward(player, "delivery_no_pickup", "corellia_station_mission3_2"))
	  	return true;
	  	
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_hasWonMission4a (obj_id player, obj_id npc)
{
	if(space_quest.hasWonQuest(player, "delivery", "corellia_station_mission4_2a") &&
	  !space_quest.hasReceivedReward(player, "delivery", "corellia_station_mission4_2a"))
	  	return true;
	  	
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_hasWonMission4b (obj_id player, obj_id npc)
{
	if(space_quest.hasWonQuest(player, "destroy_surpriseattack", "corellia_station_mission4_2b") &&
	  !space_quest.hasReceivedReward(player, "destroy_surpriseattack", "corellia_station_mission4_2b"))
	  	return true;
	  	
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_hasWonMission5a (obj_id player, obj_id npc)
{
	if(space_quest.hasWonQuest(player, "destroy_surpriseattack", "corellia_station_mission5a_2") &&
	  !space_quest.hasReceivedReward(player, "destroy_surpriseattack", "corellia_station_mission5a_2"))
	  	return true;
	  	
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_hasWonMission5b (obj_id player, obj_id npc)
{
	if(space_quest.hasWonQuest(player, "assassinate", "corellia_station_mission5b_3") &&
	  !space_quest.hasReceivedReward(player, "assassinate", "corellia_station_mission5a_3"))
	  	return true;
	  	
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_readyForMission2 (obj_id player, obj_id npc)
{
	if(space_flags.hasSpaceFlag(player, "readyForCorelliaStationMission")) {
	
		int flag = space_flags.getIntSpaceFlag(player, "readyForCorelliaStationMission");
		if(flag == 2)
			return true;
			
		return false;
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_readyForMission3 (obj_id player, obj_id npc)
{
	if(space_flags.hasSpaceFlag(player, "readyForCorelliaStationMission")) {
	
		int flag = space_flags.getIntSpaceFlag(player, "readyForCorelliaStationMission");
		if(flag == 3)
			return true;
			
		return false;
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_readyForMission4 (obj_id player, obj_id npc)
{
	if(!space_flags.isSpaceTrack(player, space_flags.PRIVATEER_CORELLIA))
		return false;
		
	if(	space_quest.hasWonQuest(player, "delivery", "corellia_station_mission4_2a") ||
		space_quest.hasWonQuest(player, "destroy_surpriseattack", "corellia_station_mission4_2b"))
		return false;
	
	if(space_flags.hasSpaceFlag(player, "readyForCorelliaStationMission")) {
	
		int flag = space_flags.getIntSpaceFlag(player, "readyForCorelliaStationMission");
		if(flag == 4)
			return true;
			
		return false;
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_readyForMission5a (obj_id player, obj_id npc)
{
	if(space_flags.hasSpaceFlag(player, "readyForCorelliaStationMission")) {
	
		int flag = space_flags.getIntSpaceFlag(player, "readyForCorelliaStationMission");
		if(flag == 5)
			return true;
			
		return false;
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_readyForMission5b (obj_id player, obj_id npc)
{
	if(!space_flags.isSpaceTrack(player, space_flags.PRIVATEER_CORELLIA))
		return false;
	
	if(	space_quest.hasWonQuest(player, "assassinate", "corellia_station_mission5b_3") )
		return false;
	
	if(space_flags.hasSpaceFlag(player, "readyForCorelliaStationMission")) {
	
		int flag = space_flags.getIntSpaceFlag(player, "readyForCorelliaStationMission");
		if(flag == 6)
			return true;
			
		return false;
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_hasFailedMission (obj_id player, obj_id npc)
{
	if(space_quest.hasFailedQuest(player, "rescue", "corellia_station_mission1_1") || 
	   space_quest.hasAbortedQuest(player, "rescue", "corellia_station_mission1_1") ||
	   space_quest.hasFailedQuest(player, "recovery", "corellia_station_mission2_1") || 
	   space_quest.hasAbortedQuest(player, "recovery", "corellia_station_mission2_1") ||
	   space_quest.hasFailedQuestRecursive(player, "assassinate", "corellia_station_mission3_1") || 
	   space_quest.hasAbortedQuestRecursive(player, "assassinate", "corellia_station_mission3_1") ||
	   space_quest.hasAbortedQuest(player, "delivery_no_pickup", "corellia_station_mission4_1") ||
	   space_quest.hasFailedQuest(player, "delivery", "corellia_station_mission4_2a") || 
	   space_quest.hasAbortedQuest(player, "delivery", "corellia_station_mission4_2a") ||
	   space_quest.hasFailedQuest(player, "destroy_surpriseattack", "corellia_station_mission4_2b") || 
	   space_quest.hasAbortedQuest(player, "destroy_surpriseattack", "corellia_station_mission4_2b") ||
	   space_quest.hasFailedQuestRecursive(player, "recovery", "corellia_station_mission5a_1") || 
	   space_quest.hasAbortedQuestRecursive(player, "recovery", "corellia_station_mission5a_1") ||
	   space_quest.hasFailedQuestRecursive(player, "escort", "corellia_station_mission5b_1") || 
	   space_quest.hasAbortedQuestRecursive(player, "escort", "corellia_station_mission5b_1"))
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_isWaiting (obj_id player, obj_id npc)
{
	if(space_flags.hasSpaceFlag(player, "waitingForCorelliaStationMission"))
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_hasFailedMission1 (obj_id player, obj_id npc)
{
	if(space_quest.hasFailedQuest(player, "rescue", "corellia_station_mission1_1") || 
	   space_quest.hasAbortedQuest(player, "rescue", "corellia_station_mission1_1"))
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_hasFailedMission2 (obj_id player, obj_id npc)
{
	if(space_quest.hasFailedQuest(player, "recovery", "corellia_station_mission2_1") || 
	   space_quest.hasAbortedQuest(player, "recovery", "corellia_station_mission2_1"))
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_hasFailedMission3 (obj_id player, obj_id npc)
{
	if(space_quest.hasFailedQuestRecursive(player, "assassinate", "corellia_station_mission3_1") || 
	   space_quest.hasAbortedQuestRecursive(player, "assassinate", "corellia_station_mission3_1"))
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_hasFailedMission4 (obj_id player, obj_id npc)
{
	if(space_quest.hasAbortedQuest(player, "delivery_no_pickup", "corellia_station_mission4_1"))
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_hasFailedMission5a (obj_id player, obj_id npc)
{
	if(space_quest.hasFailedQuestRecursive(player, "recovery", "corellia_station_mission5a_1") || 
	   space_quest.hasAbortedQuestRecursive(player, "recovery", "corellia_station_mission5a_1"))
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_hasFailedMission5b (obj_id player, obj_id npc)
{
	if(space_quest.hasFailedQuestRecursive(player, "escort", "corellia_station_mission5b_1") || 
	   space_quest.hasAbortedQuestRecursive(player, "escort", "corellia_station_mission5b_1"))
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_canDoDuty (obj_id player, obj_id npc)
{
	if(space_quest.hasReceivedReward(player, "rescue", "corellia_station_mission1_1") && !space_quest.hasQuest(player))
		return true;
	
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_canDoTier1Duty (obj_id player, obj_id npc)
{
	if(space_quest.hasReceivedReward(player, "destroy_surpriseattack", "corellia_station_mission5a_2") ||
	   space_quest.hasReceivedReward(player, "assassinate", "corellia_station_mission5b_3"))
		return false;
		
	return true;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_canLandAtHouse (obj_id player, obj_id npc)
{
	if (hasObjVar (player, "homingBeacon.planet"))
	{
		string homePlanet = getStringObjVar (player, "homingBeacon.planet");
		
		return (homePlanet.endsWith ("corellia"));
	}
	else
		return false;		
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_canAttackRebel (obj_id player, obj_id npc)
{
	if(space_flags.isImperialPilot(player) || space_flags.isImperialHelperPilot(player))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_canAttackImperial (obj_id player, obj_id npc)
{
	if(space_flags.isRebelPilot(player) || space_flags.isRebelHelperPilot(player))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_canTakeQuest (obj_id player, obj_id npc)
{
	if(space_quest.hasQuest(player))
	{
		return false;
	}
 	return true;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_canTakeImperialTier5 (obj_id player, obj_id npc)
{
	if(!space_skill.isMasterPilot(player))
	{
		return false;	
	}
	
	if(space_flags.isImperialPilot(player) || space_flags.isImperialHelperPilot(player))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean station_corellia_condition_canTakeRebelTier5 (obj_id player, obj_id npc)
{
	if(!space_skill.isMasterPilot(player))
	{
		return false;	
	}
	
	if(space_flags.isRebelPilot(player) || space_flags.isRebelHelperPilot(player))
	{
		return true;
	}

	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void station_corellia_action_landStation3 (obj_id player, obj_id npc)
{
	space_content.landPlayer(player, npc, "Doaba Guerfel Starport");
}

// ----------------------------------------------------------------------

void station_corellia_action_fix25 (obj_id player, obj_id npc)
{
	space_crafting.doStationToShipRepairs(player, npc, .25f);
}

// ----------------------------------------------------------------------

void station_corellia_action_fix50 (obj_id player, obj_id npc)
{
	space_crafting.doStationToShipRepairs(player, npc, .50f);
}

// ----------------------------------------------------------------------

void station_corellia_action_fix75 (obj_id player, obj_id npc)
{
	space_crafting.doStationToShipRepairs(player, npc, .75f);
}

// ----------------------------------------------------------------------

void station_corellia_action_fix100 (obj_id player, obj_id npc)
{
	space_crafting.doStationToShipRepairs(player, npc, 1.0f);
}

// ----------------------------------------------------------------------

void station_corellia_action_landStation1 (obj_id player, obj_id npc)
{
	space_content.landPlayer(player, npc, "Coronet Starport");
}

// ----------------------------------------------------------------------

void station_corellia_action_landStation2 (obj_id player, obj_id npc)
{
	space_content.landPlayer(player, npc, "Kor Vella Starport");
}

// ----------------------------------------------------------------------

void station_corellia_action_landStation4 (obj_id player, obj_id npc)
{
	space_content.landPlayer(player, npc, "Tyrena Starport");
}

// ----------------------------------------------------------------------

void station_corellia_action_grantMission1 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "rescue", "corellia_station_mission1_1");
	space_flags.setSpaceFlag(player, "isOnCorelliaStationMission", 1);
}

// ----------------------------------------------------------------------

void station_corellia_action_removeMissionFlag (obj_id player, obj_id npc)
{
	space_flags.removeSpaceFlag(player, "isOnCorelliaStationMission");
}

// ----------------------------------------------------------------------

void station_corellia_action_grantReward1 (obj_id player, obj_id npc)
{
	space_quest.giveReward(player, "rescue", "corellia_station_mission1_1", 1000);
	space_flags.removeSpaceFlag(player, "isOnCorelliaStationMission");
	space_flags.setSpaceFlag(player, "readyForCorelliaStationMission", 2);
}

// ----------------------------------------------------------------------

void station_corellia_action_grantReward2 (obj_id player, obj_id npc)
{
	space_quest.giveReward(player, "recovery", "corellia_station_mission2_1", 2000);
	space_flags.removeSpaceFlag(player, "isOnCorelliaStationMission");
	space_flags.setSpaceFlag(player, "readyForCorelliaStationMission", 3);
}

// ----------------------------------------------------------------------

void station_corellia_action_grantMission2 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "recovery", "corellia_station_mission2_1");
	space_flags.setSpaceFlag(player, "isOnCorelliaStationMission", 1);
}

// ----------------------------------------------------------------------

void station_corellia_action_grantMission3 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "assassinate", "corellia_station_mission3_1");
	space_flags.setSpaceFlag(player, "isOnCorelliaStationMission", 1);
}

// ----------------------------------------------------------------------

void station_corellia_action_grantReward3 (obj_id player, obj_id npc)
{
	space_quest.giveReward(player, "delivery_no_pickup", "corellia_station_mission3_2", 3000);
	space_flags.removeSpaceFlag(player, "isOnCorelliaStationMission");
	space_flags.setSpaceFlag(player, "waitingForCorelliaStationMission", 1);
	
	if(!hasScript(player, "space.quest.corellia_station_mission_mail"))
		attachScript(player, "space.quest.corellia_station_mission_mail");
		
	messageTo(player, "mailMessageOne", null, 10800.0f, true);
}

// ----------------------------------------------------------------------

void station_corellia_action_grantMission4 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "delivery_no_pickup", "corellia_station_mission4_1");
	space_flags.setSpaceFlag(player, "isOnCorelliaStationMission", 1);
	space_flags.removeSpaceFlag(player, "waitingForCorelliaStationMission");
}

// ----------------------------------------------------------------------

void station_corellia_action_grantReward4a (obj_id player, obj_id npc)
{
	space_quest.giveReward(player, "delivery", "corellia_station_mission4_2a", 5000);
	space_flags.removeSpaceFlag(player, "isOnCorelliaStationMission");
	space_flags.setSpaceFlag(player, "waitingForCorelliaStationMission", 1);
	
	if(!hasScript(player, "space.quest.corellia_station_mission_mail"))
		attachScript(player, "space.quest.corellia_station_mission_mail");
		
	messageTo(player, "mailMessageTwo", null, 10800.0f, true);
}

// ----------------------------------------------------------------------

void station_corellia_action_grantReward4b (obj_id player, obj_id npc)
{
	space_quest.giveReward(player, "destroy_surpriseattack", "corellia_station_mission4_2b", 4000);
	space_flags.removeSpaceFlag(player, "isOnCorelliaStationMission");
	space_flags.setSpaceFlag(player, "readyForCorelliaStationMission", 5);
}

// ----------------------------------------------------------------------

void station_corellia_action_grantMission5a (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "recovery", "corellia_station_mission5a_1");
	space_flags.setSpaceFlag(player, "isOnCorelliaStationMission", 1);
}

// ----------------------------------------------------------------------

void station_corellia_action_grantMission5b (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "escort", "corellia_station_mission5b_1");
	space_flags.setSpaceFlag(player, "isOnCorelliaStationMission", 1);
	space_flags.removeSpaceFlag(player, "waitingForCorelliaStationMission");
}

// ----------------------------------------------------------------------

void station_corellia_action_grantReward5a (obj_id player, obj_id npc)
{
	space_quest.giveReward(player, "destroy_surpriseattack", "corellia_station_mission5a_2", 5000);
	space_flags.removeSpaceFlag(player, "isOnCorelliaStationMission");
}

// ----------------------------------------------------------------------

void station_corellia_action_grantReward5b (obj_id player, obj_id npc)
{
	space_quest.giveReward(player, "assassinate", "corellia_station_mission5a_3", 7000);
	space_flags.removeSpaceFlag(player, "isOnCorelliaStationMission");
}

// ----------------------------------------------------------------------

void station_corellia_action_grantDuty1 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "corellia_station_duty1");
}

// ----------------------------------------------------------------------

void station_corellia_action_grantDuty2 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "corellia_station_duty4");
}

// ----------------------------------------------------------------------

void station_corellia_action_landHoming (obj_id player, obj_id npc)
{
	space_content.landPlayerHoming(player, npc);
}

// ----------------------------------------------------------------------

void station_corellia_action_grantBlackSun1Duty (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "corellia_blacksun_tier1");
}

// ----------------------------------------------------------------------

void station_corellia_action_grantBlackSun2Duty (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "corellia_blacksun_tier2");
}

// ----------------------------------------------------------------------

void station_corellia_action_grantImperialDuty1 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "corellia_imperial_tier1");
}

// ----------------------------------------------------------------------

void station_corellia_action_grantImperialDuty2 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "corellia_imperial_tier2");
}

// ----------------------------------------------------------------------

void station_corellia_action_grantRebelDuty1 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "corellia_rebel_tier1");
}

// ----------------------------------------------------------------------

void station_corellia_action_grantRebelDuty2 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "corellia_rebel_tier2");
}

// ----------------------------------------------------------------------

void station_corellia_action_grantRebelDuty5 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "corellia_rebel_tier5");
}

// ----------------------------------------------------------------------

void station_corellia_action_grantImperialDuty5 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "corellia_imperial_tier5");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

string station_corellia_tokenTO_tokenTO0001 (obj_id player, obj_id npc)
{
	return new string();
}

// ======================================================================
// Script %DI Tokens
// ======================================================================

int station_corellia_tokenDI_getStationRepairCost25 (obj_id player, obj_id npc)
{
	return space_crafting.getStationRepairCost(player, npc, .25f);
	
}

// ----------------------------------------------------------------------

int station_corellia_tokenDI_getStationRepairCost50 (obj_id player, obj_id npc)
{
	return space_crafting.getStationRepairCost(player, npc, .50f);
	
}

// ----------------------------------------------------------------------

int station_corellia_tokenDI_getStationRepairCost75 (obj_id player, obj_id npc)
{
	return space_crafting.getStationRepairCost(player, npc, .75f);
}

// ----------------------------------------------------------------------

int station_corellia_tokenDI_getStationRepairCost100 (obj_id player, obj_id npc)
{
	return space_crafting.getStationRepairCost(player, npc, 1.0f);
}

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int station_corellia_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Great work, pilot. Under the circumstances things went as well as could be expected. Since the Cloak leader was destroyed, I don't think the remaining forces will be much of a threat. Here is your final extended mission pay.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. I would like to land.
	if (response == "s_e0234542")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are four starports available to a ship of your class, %TU.  Please indicate your destination.
			string_id message = new string_id (c_stringFile, "s_108cc9eb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Coronet Starport (Freelance Pilot Trainer).
			boolean hasResponse0 = false;
			if (station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tyrena Starport (Rebel Pilot Trainer).
			boolean hasResponse1 = false;
			if (station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Coronet Starport.
			boolean hasResponse2 = false;
			if (!station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Kor Vella Starport.
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Doaba Guerfel Starport.
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyrena Starport.
			boolean hasResponse5 = false;
			if (!station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Homing Beacon.
			boolean hasResponse6 = false;
			if (station_corellia_condition_canLandAtHouse (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f6948278");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31b2918b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c3399297");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ccc6f3ed");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19bf16ff");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63ccb695");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 44);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. I am in need of repairs.
	if (response == "s_5f4e62c9")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger, %TU.  We are a fully functional station and can provide you with whatever level of repairs that are necessary.  Please indicate your status.
			string_id message = new string_id (c_stringFile, "s_13071055");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Repair a little of the damage
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Repair half the damage
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Repair most of the damage
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Repair all of the damage
			boolean hasResponse3 = false;
			if (station_corellia_condition_canAfford100 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Nevermind
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d8f24b5b");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37b5c504");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82701bb4");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61071474");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_383d79b3");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 66);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Any mercenary assignments available?
	if (response == "s_269")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: We do have a list of mercenary assignments. For a pilot with your.... associations. I can offer the following duty missions:
			string_id message = new string_id (c_stringFile, "s_251");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols
			boolean hasResponse0 = false;
			if (station_corellia_condition_canTakeRebelTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Imperial patrols
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Imperial patrols
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Black Sun pirates
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Black Sun pirates
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Rebel patrols
			boolean hasResponse5 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Rebel patrols
			boolean hasResponse6 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Rebel patrols
			boolean hasResponse7 = false;
			if (station_corellia_condition_canTakeImperialTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse8 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_292");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_253");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_257");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_261");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_265");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_274");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_284");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_291");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_288");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 86);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good work, pilot. Under the circumstances things went as well as could be expected. Since the Cloak leader was destroyed, I don't think the remaining forces will be much of a threat. Here is your final extended mission pay.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. I would like to land.
	if (response == "s_9")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are four starports available to a ship of your class, %TU.  Please indicate your destination.
			string_id message = new string_id (c_stringFile, "s_108cc9eb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Coronet Starport (Freelance Pilot Trainer).
			boolean hasResponse0 = false;
			if (station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tyrena Starport (Rebel Pilot Trainer).
			boolean hasResponse1 = false;
			if (station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Coronet Starport.
			boolean hasResponse2 = false;
			if (!station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Kor Vella Starport.
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Doaba Guerfel Starport.
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyrena Starport.
			boolean hasResponse5 = false;
			if (!station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Homing Beacon.
			boolean hasResponse6 = false;
			if (station_corellia_condition_canLandAtHouse (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f6948278");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31b2918b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c3399297");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ccc6f3ed");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19bf16ff");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63ccb695");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 44);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. I am in need of repairs.
	if (response == "s_11")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger, %TU.  We are a fully functional station and can provide you with whatever level of repairs that are necessary.  Please indicate your status.
			string_id message = new string_id (c_stringFile, "s_13071055");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Repair a little of the damage
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Repair half the damage
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Repair most of the damage
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Repair all of the damage
			boolean hasResponse3 = false;
			if (station_corellia_condition_canAfford100 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Nevermind
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d8f24b5b");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37b5c504");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82701bb4");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61071474");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_383d79b3");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 66);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Any mercenary assignments available?
	if (response == "s_270")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: We do have a list of mercenary assignments. For a pilot with your.... associations. I can offer the following duty missions:
			string_id message = new string_id (c_stringFile, "s_251");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols
			boolean hasResponse0 = false;
			if (station_corellia_condition_canTakeRebelTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Imperial patrols
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Imperial patrols
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Black Sun pirates
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Black Sun pirates
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Rebel patrols
			boolean hasResponse5 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Rebel patrols
			boolean hasResponse6 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Rebel patrols
			boolean hasResponse7 = false;
			if (station_corellia_condition_canTakeImperialTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse8 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_292");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_253");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_257");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_261");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_265");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_274");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_284");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_291");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_288");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 86);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good job, pilot. Going undercover isn't for everyone, and now there's at least one less Cloak ship in the system. Here is your extended mission pay.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. I would like to land.
	if (response == "s_15")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are four starports available to a ship of your class, %TU.  Please indicate your destination.
			string_id message = new string_id (c_stringFile, "s_108cc9eb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Coronet Starport (Freelance Pilot Trainer).
			boolean hasResponse0 = false;
			if (station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tyrena Starport (Rebel Pilot Trainer).
			boolean hasResponse1 = false;
			if (station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Coronet Starport.
			boolean hasResponse2 = false;
			if (!station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Kor Vella Starport.
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Doaba Guerfel Starport.
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyrena Starport.
			boolean hasResponse5 = false;
			if (!station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Homing Beacon.
			boolean hasResponse6 = false;
			if (station_corellia_condition_canLandAtHouse (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f6948278");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31b2918b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c3399297");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ccc6f3ed");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19bf16ff");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63ccb695");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 44);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. I am in need of repairs.
	if (response == "s_17")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger, %TU.  We are a fully functional station and can provide you with whatever level of repairs that are necessary.  Please indicate your status.
			string_id message = new string_id (c_stringFile, "s_13071055");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Repair a little of the damage
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Repair half the damage
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Repair most of the damage
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Repair all of the damage
			boolean hasResponse3 = false;
			if (station_corellia_condition_canAfford100 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Nevermind
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d8f24b5b");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37b5c504");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82701bb4");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61071474");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_383d79b3");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 66);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Any mercenary assignments available?
	if (response == "s_271")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: We do have a list of mercenary assignments. For a pilot with your.... associations. I can offer the following duty missions:
			string_id message = new string_id (c_stringFile, "s_251");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols
			boolean hasResponse0 = false;
			if (station_corellia_condition_canTakeRebelTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Imperial patrols
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Imperial patrols
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Black Sun pirates
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Black Sun pirates
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Rebel patrols
			boolean hasResponse5 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Rebel patrols
			boolean hasResponse6 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Rebel patrols
			boolean hasResponse7 = false;
			if (station_corellia_condition_canTakeImperialTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse8 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_292");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_253");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_257");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_261");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_265");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_274");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_284");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_291");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_288");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 86);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So you've decided to go undercover? You are to be commended. Not many pilots would be so brave. There's not much to do now but wait until the Cloaks contact you. In the meantime, here is your extended mission pay.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. I would like to land.
	if (response == "s_21")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are four starports available to a ship of your class, %TU.  Please indicate your destination.
			string_id message = new string_id (c_stringFile, "s_108cc9eb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Coronet Starport (Freelance Pilot Trainer).
			boolean hasResponse0 = false;
			if (station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tyrena Starport (Rebel Pilot Trainer).
			boolean hasResponse1 = false;
			if (station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Coronet Starport.
			boolean hasResponse2 = false;
			if (!station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Kor Vella Starport.
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Doaba Guerfel Starport.
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyrena Starport.
			boolean hasResponse5 = false;
			if (!station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Homing Beacon.
			boolean hasResponse6 = false;
			if (station_corellia_condition_canLandAtHouse (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f6948278");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31b2918b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c3399297");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ccc6f3ed");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19bf16ff");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63ccb695");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 44);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. I am in need of repairs.
	if (response == "s_23")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger, %TU.  We are a fully functional station and can provide you with whatever level of repairs that are necessary.  Please indicate your status.
			string_id message = new string_id (c_stringFile, "s_13071055");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Repair a little of the damage
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Repair half the damage
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Repair most of the damage
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Repair all of the damage
			boolean hasResponse3 = false;
			if (station_corellia_condition_canAfford100 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Nevermind
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d8f24b5b");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37b5c504");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82701bb4");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61071474");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_383d79b3");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 66);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Any mercenary assignments available?
	if (response == "s_272")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: We do have a list of mercenary assignments. For a pilot with your.... associations. I can offer the following duty missions:
			string_id message = new string_id (c_stringFile, "s_251");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols
			boolean hasResponse0 = false;
			if (station_corellia_condition_canTakeRebelTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Imperial patrols
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Imperial patrols
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Black Sun pirates
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Black Sun pirates
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Rebel patrols
			boolean hasResponse5 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Rebel patrols
			boolean hasResponse6 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Rebel patrols
			boolean hasResponse7 = false;
			if (station_corellia_condition_canTakeImperialTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse8 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_292");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_253");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_257");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_261");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_265");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_274");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_284");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_291");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_288");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 86);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: CorSec Command is impressed, pilot. That went off without a hitch. We will get to work tracking down how this information was leaked, and who leaked it. Here is your extended mission pay.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. I would like to land.
	if (response == "s_27")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are four starports available to a ship of your class, %TU.  Please indicate your destination.
			string_id message = new string_id (c_stringFile, "s_108cc9eb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Coronet Starport (Freelance Pilot Trainer).
			boolean hasResponse0 = false;
			if (station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tyrena Starport (Rebel Pilot Trainer).
			boolean hasResponse1 = false;
			if (station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Coronet Starport.
			boolean hasResponse2 = false;
			if (!station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Kor Vella Starport.
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Doaba Guerfel Starport.
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyrena Starport.
			boolean hasResponse5 = false;
			if (!station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Homing Beacon.
			boolean hasResponse6 = false;
			if (station_corellia_condition_canLandAtHouse (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f6948278");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31b2918b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c3399297");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ccc6f3ed");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19bf16ff");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63ccb695");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 44);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. I am in need of repairs.
	if (response == "s_29")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger, %TU.  We are a fully functional station and can provide you with whatever level of repairs that are necessary.  Please indicate your status.
			string_id message = new string_id (c_stringFile, "s_13071055");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Repair a little of the damage
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Repair half the damage
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Repair most of the damage
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Repair all of the damage
			boolean hasResponse3 = false;
			if (station_corellia_condition_canAfford100 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Nevermind
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d8f24b5b");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37b5c504");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82701bb4");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61071474");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_383d79b3");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 66);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Any mercenary assignments available?
	if (response == "s_273")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: We do have a list of mercenary assignments. For a pilot with your.... associations. I can offer the following duty missions:
			string_id message = new string_id (c_stringFile, "s_251");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols
			boolean hasResponse0 = false;
			if (station_corellia_condition_canTakeRebelTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Imperial patrols
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Imperial patrols
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Black Sun pirates
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Black Sun pirates
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Rebel patrols
			boolean hasResponse5 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Rebel patrols
			boolean hasResponse6 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Rebel patrols
			boolean hasResponse7 = false;
			if (station_corellia_condition_canTakeImperialTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse8 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_292");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_253");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_257");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_261");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_265");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_274");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_284");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_291");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_288");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 86);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent work, pilot. I'll transfer your extended mission pay now. The Cloak officer is on his way to the interrogation base now. Hopefully we'll get some more answers as to who these pirates are and what they're after.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. I would like to land.
	if (response == "s_33")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are four starports available to a ship of your class, %TU.  Please indicate your destination.
			string_id message = new string_id (c_stringFile, "s_108cc9eb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Coronet Starport (Freelance Pilot Trainer).
			boolean hasResponse0 = false;
			if (station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tyrena Starport (Rebel Pilot Trainer).
			boolean hasResponse1 = false;
			if (station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Coronet Starport.
			boolean hasResponse2 = false;
			if (!station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Kor Vella Starport.
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Doaba Guerfel Starport.
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyrena Starport.
			boolean hasResponse5 = false;
			if (!station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Homing Beacon.
			boolean hasResponse6 = false;
			if (station_corellia_condition_canLandAtHouse (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f6948278");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31b2918b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c3399297");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ccc6f3ed");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19bf16ff");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63ccb695");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 44);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. I am in need of repairs.
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger, %TU.  We are a fully functional station and can provide you with whatever level of repairs that are necessary.  Please indicate your status.
			string_id message = new string_id (c_stringFile, "s_13071055");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Repair a little of the damage
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Repair half the damage
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Repair most of the damage
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Repair all of the damage
			boolean hasResponse3 = false;
			if (station_corellia_condition_canAfford100 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Nevermind
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d8f24b5b");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37b5c504");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82701bb4");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61071474");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_383d79b3");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 66);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Any mercenary assignments available?
	if (response == "s_275")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: We do have a list of mercenary assignments. For a pilot with your.... associations. I can offer the following duty missions:
			string_id message = new string_id (c_stringFile, "s_251");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols
			boolean hasResponse0 = false;
			if (station_corellia_condition_canTakeRebelTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Imperial patrols
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Imperial patrols
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Black Sun pirates
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Black Sun pirates
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Rebel patrols
			boolean hasResponse5 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Rebel patrols
			boolean hasResponse6 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Rebel patrols
			boolean hasResponse7 = false;
			if (station_corellia_condition_canTakeImperialTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse8 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_292");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_253");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_257");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_261");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_265");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_274");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_284");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_291");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_288");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 86);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good work, pilot. Here is your extended mission pay. We'll look into who these 'Cloak' pilots are and keep our eyes open for more activity. In the meantime, carry on with your standard operations.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. I would like to land.
	if (response == "s_39")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are four starports available to a ship of your class, %TU.  Please indicate your destination.
			string_id message = new string_id (c_stringFile, "s_108cc9eb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Coronet Starport (Freelance Pilot Trainer).
			boolean hasResponse0 = false;
			if (station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tyrena Starport (Rebel Pilot Trainer).
			boolean hasResponse1 = false;
			if (station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Coronet Starport.
			boolean hasResponse2 = false;
			if (!station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Kor Vella Starport.
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Doaba Guerfel Starport.
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyrena Starport.
			boolean hasResponse5 = false;
			if (!station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Homing Beacon.
			boolean hasResponse6 = false;
			if (station_corellia_condition_canLandAtHouse (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f6948278");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31b2918b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c3399297");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ccc6f3ed");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19bf16ff");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63ccb695");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 44);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. I am in need of repairs.
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger, %TU.  We are a fully functional station and can provide you with whatever level of repairs that are necessary.  Please indicate your status.
			string_id message = new string_id (c_stringFile, "s_13071055");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Repair a little of the damage
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Repair half the damage
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Repair most of the damage
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Repair all of the damage
			boolean hasResponse3 = false;
			if (station_corellia_condition_canAfford100 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Nevermind
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d8f24b5b");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37b5c504");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82701bb4");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61071474");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_383d79b3");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 66);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Any mercenary assignments available?
	if (response == "s_276")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: We do have a list of mercenary assignments. For a pilot with your.... associations. I can offer the following duty missions:
			string_id message = new string_id (c_stringFile, "s_251");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols
			boolean hasResponse0 = false;
			if (station_corellia_condition_canTakeRebelTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Imperial patrols
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Imperial patrols
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Black Sun pirates
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Black Sun pirates
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Rebel patrols
			boolean hasResponse5 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Rebel patrols
			boolean hasResponse6 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Rebel patrols
			boolean hasResponse7 = false;
			if (station_corellia_condition_canTakeImperialTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse8 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_292");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_253");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_257");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_261");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_265");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_274");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_284");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_291");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_288");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 86);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Failure does not become you, pilot. This will go in your permanent record.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. I would like to land.
	if (response == "s_45")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are four starports available to a ship of your class, %TU.  Please indicate your destination.
			string_id message = new string_id (c_stringFile, "s_108cc9eb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Coronet Starport (Freelance Pilot Trainer).
			boolean hasResponse0 = false;
			if (station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tyrena Starport (Rebel Pilot Trainer).
			boolean hasResponse1 = false;
			if (station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Coronet Starport.
			boolean hasResponse2 = false;
			if (!station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Kor Vella Starport.
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Doaba Guerfel Starport.
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyrena Starport.
			boolean hasResponse5 = false;
			if (!station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Homing Beacon.
			boolean hasResponse6 = false;
			if (station_corellia_condition_canLandAtHouse (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f6948278");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31b2918b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c3399297");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ccc6f3ed");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19bf16ff");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63ccb695");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 44);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. I am in need of repairs.
	if (response == "s_47")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger, %TU.  We are a fully functional station and can provide you with whatever level of repairs that are necessary.  Please indicate your status.
			string_id message = new string_id (c_stringFile, "s_13071055");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Repair a little of the damage
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Repair half the damage
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Repair most of the damage
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Repair all of the damage
			boolean hasResponse3 = false;
			if (station_corellia_condition_canAfford100 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Nevermind
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d8f24b5b");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37b5c504");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82701bb4");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61071474");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_383d79b3");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 66);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Let me try again.
	if (response == "s_c9c08b99")
	{
		//-- [NOTE] 
		if (station_corellia_condition_hasFailedMission5b (player, npc))
		{
			station_corellia_action_grantMission5b (player, npc);

			//-- NPC: This is against my better judgement, but I guess I have no choice. We've got to try and run this operation again. Hopefully better this time.
			string_id message = new string_id (c_stringFile, "s_2b28cd2");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_corellia_condition_hasFailedMission5a (player, npc))
		{
			station_corellia_action_grantMission5a (player, npc);

			//-- NPC: This assignment is critical! We cannot allow the cloak leader to escape. Now get back out there.
			string_id message = new string_id (c_stringFile, "s_1d1ea6ae");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_corellia_condition_hasFailedMission4 (player, npc))
		{
			station_corellia_action_grantMission4 (player, npc);

			//-- NPC: You're treading thin ice here, pilot. Hopefully nothing will go wrong this time.
			string_id message = new string_id (c_stringFile, "s_c84e1098");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_corellia_condition_hasFailedMission3 (player, npc))
		{
			station_corellia_action_grantMission3 (player, npc);

			//-- NPC: This is a very important operation, pilot. Don't screw it up this time.
			string_id message = new string_id (c_stringFile, "s_bf0e6b55");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_corellia_condition_hasFailedMission2 (player, npc))
		{
			station_corellia_action_grantMission2 (player, npc);

			//-- NPC: Get out there and capture the Cloak officer. Hurry we don't have much time.
			string_id message = new string_id (c_stringFile, "s_9624c26b");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_corellia_condition_hasFailedMission1 (player, npc))
		{
			station_corellia_action_grantMission1 (player, npc);

			//-- NPC: Alright. Get back out there and investigate the situation. Let's not have a repeat of the last operation, ok?
			string_id message = new string_id (c_stringFile, "s_4490cfae");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Sorry, you cannot try again right now. Maybe later.
			string_id message = new string_id (c_stringFile, "s_cd78560b");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Any mercenary assignments available?
	if (response == "s_277")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: We do have a list of mercenary assignments. For a pilot with your.... associations. I can offer the following duty missions:
			string_id message = new string_id (c_stringFile, "s_251");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols
			boolean hasResponse0 = false;
			if (station_corellia_condition_canTakeRebelTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Imperial patrols
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Imperial patrols
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Black Sun pirates
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Black Sun pirates
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Rebel patrols
			boolean hasResponse5 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Rebel patrols
			boolean hasResponse6 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Rebel patrols
			boolean hasResponse7 = false;
			if (station_corellia_condition_canTakeImperialTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse8 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_292");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_253");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_257");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_261");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_265");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_274");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_284");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_291");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_288");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 86);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You have entered CorSec space in the Corellia System.  Please identify yourself.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to land
	if (response == "s_7e77cbe2")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are four starports available to a ship of your class, %TU.  Please indicate your destination.
			string_id message = new string_id (c_stringFile, "s_108cc9eb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Coronet Starport (Freelance Pilot Trainer).
			boolean hasResponse0 = false;
			if (station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tyrena Starport (Rebel Pilot Trainer).
			boolean hasResponse1 = false;
			if (station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Coronet Starport.
			boolean hasResponse2 = false;
			if (!station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Kor Vella Starport.
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Doaba Guerfel Starport.
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyrena Starport.
			boolean hasResponse5 = false;
			if (!station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Homing Beacon.
			boolean hasResponse6 = false;
			if (station_corellia_condition_canLandAtHouse (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f6948278");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31b2918b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c3399297");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ccc6f3ed");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19bf16ff");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63ccb695");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 44);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Repairs)
	if (response == "s_c358d041")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger, %TU.  We are a fully functional station and can provide you with whatever level of repairs that are necessary.  Please indicate your status.
			string_id message = new string_id (c_stringFile, "s_13071055");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Repair a little of the damage
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Repair half the damage
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Repair most of the damage
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Repair all of the damage
			boolean hasResponse3 = false;
			if (station_corellia_condition_canAfford100 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Nevermind
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d8f24b5b");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37b5c504");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82701bb4");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61071474");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_383d79b3");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 66);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Requesting secure channel 37 Alpha.
	if (response == "s_51cc9a48")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Secure channel open. Go ahead, pilot.
			string_id message = new string_id (c_stringFile, "s_35836858");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Explain Cloak Communication)
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_453e4f7d");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Any mercenary assignments available?
	if (response == "s_278")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: We do have a list of mercenary assignments. For a pilot with your.... associations. I can offer the following duty missions:
			string_id message = new string_id (c_stringFile, "s_251");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols
			boolean hasResponse0 = false;
			if (station_corellia_condition_canTakeRebelTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Imperial patrols
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Imperial patrols
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Black Sun pirates
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Black Sun pirates
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Rebel patrols
			boolean hasResponse5 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Rebel patrols
			boolean hasResponse6 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Rebel patrols
			boolean hasResponse7 = false;
			if (station_corellia_condition_canTakeImperialTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse8 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_292");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_253");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_257");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_261");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_265");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_274");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_284");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_291");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_288");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 86);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Secure channel open. Go ahead, pilot.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Explain Cloak Communication)
	if (response == "s_453e4f7d")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: I see. That is excellent. Now is the perfect time to strike. Here's what we'll do. Meet the freighter and offer an escort as expected. When the Cloaks come in, they will expect you to allow them to freely attack and board the freighter.
			string_id message = new string_id (c_stringFile, "s_a7a9ff1a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Go on.
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_edb238bc");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I see. That is excellent. Now is the perfect time to strike. Here's what we'll do. Meet the freighter and offer an escort as expected. When the Cloaks come in, they will expect you to allow them to freely attack and board the freighter.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Go on.
	if (response == "s_edb238bc")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: CorSec command will contact the freighter and have them hyperspace out as soon as the Cloak attack ships start to come in. We will send an attack squadron there to ambush them.
			string_id message = new string_id (c_stringFile, "s_903180db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I understand.
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9288900f");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 20);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: CorSec command will contact the freighter and have them hyperspace out as soon as the Cloak attack ships start to come in. We will send an attack squadron there to ambush them.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I understand.
	if (response == "s_9288900f")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good. Taking out an entire Cloak attack wing should weaken their forces significantly. Of course then your cover will be blown, but that should be acceptable. Are you ready?
			string_id message = new string_id (c_stringFile, "s_a8b432b3");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Of course.
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52917b0d");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. Taking out an entire Cloak attack wing should weaken their forces significantly. Of course then your cover will be blown, but that should be acceptable. Are you ready?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Of course.
	if (response == "s_52917b0d")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_grantMission5b (player, npc);

			//-- NPC: Good. The operation is about to begin. We'll assign you an operator and transmit the mission data now.
			string_id message = new string_id (c_stringFile, "s_db1a3377");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You have entered CorSec space in the Corellia System.  Please identify yourself, pilot.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to land
	if (response == "s_73")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are four starports available to a ship of your class, %TU.  Please indicate your destination.
			string_id message = new string_id (c_stringFile, "s_108cc9eb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Coronet Starport (Freelance Pilot Trainer).
			boolean hasResponse0 = false;
			if (station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tyrena Starport (Rebel Pilot Trainer).
			boolean hasResponse1 = false;
			if (station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Coronet Starport.
			boolean hasResponse2 = false;
			if (!station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Kor Vella Starport.
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Doaba Guerfel Starport.
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyrena Starport.
			boolean hasResponse5 = false;
			if (!station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Homing Beacon.
			boolean hasResponse6 = false;
			if (station_corellia_condition_canLandAtHouse (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f6948278");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31b2918b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c3399297");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ccc6f3ed");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19bf16ff");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63ccb695");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 44);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Repairs)
	if (response == "s_75")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger, %TU.  We are a fully functional station and can provide you with whatever level of repairs that are necessary.  Please indicate your status.
			string_id message = new string_id (c_stringFile, "s_13071055");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Repair a little of the damage
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Repair half the damage
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Repair most of the damage
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Repair all of the damage
			boolean hasResponse3 = false;
			if (station_corellia_condition_canAfford100 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Nevermind
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d8f24b5b");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37b5c504");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82701bb4");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61071474");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_383d79b3");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 66);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Requesting secure channel 37 Alpha.
	if (response == "s_77")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Secure channel open. Go ahead, pilot.
			string_id message = new string_id (c_stringFile, "s_79");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Explain Cloak Communication)
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_81");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Any mercenary assignments available?
	if (response == "s_279")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: We do have a list of mercenary assignments. For a pilot with your.... associations. I can offer the following duty missions:
			string_id message = new string_id (c_stringFile, "s_251");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols
			boolean hasResponse0 = false;
			if (station_corellia_condition_canTakeRebelTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Imperial patrols
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Imperial patrols
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Black Sun pirates
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Black Sun pirates
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Rebel patrols
			boolean hasResponse5 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Rebel patrols
			boolean hasResponse6 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Rebel patrols
			boolean hasResponse7 = false;
			if (station_corellia_condition_canTakeImperialTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse8 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_292");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_253");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_257");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_261");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_265");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_274");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_284");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_291");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_288");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 86);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Secure channel open. Go ahead, pilot.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Explain Cloak Communication)
	if (response == "s_81")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: You were right to come to us with this, pilot. It is good to see that your loyalty to CorSec is unwavering. However, this does present a unique opportunity to go undercover with the cloaks.
			string_id message = new string_id (c_stringFile, "s_6c23a697");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What do you mean?
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77e48d5b");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You were right to come to us with this, pilot. It is good to see that your loyalty to CorSec is unwavering. However, this does present a unique opportunity to go undercover with the cloaks.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you mean?
	if (response == "s_77e48d5b")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: If you were to meet with this Cloak representative and mislead him to believe that you are going to betray CorSec, we might be able to get some information about the inner workings and rankings of the Cloaks.
			string_id message = new string_id (c_stringFile, "s_652d249e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That sounds like a good plan.
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm not sure I'm comfortable with that.
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6223506b");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_229f6f26");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: If you were to meet with this Cloak representative and mislead him to believe that you are going to betray CorSec, we might be able to get some information about the inner workings and rankings of the Cloaks.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That sounds like a good plan.
	if (response == "s_6223506b")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_grantMission4 (player, npc);

			//-- NPC: Meet with the representative if you want to go undercover. However, if you change your mind and want to go the direct route, just destroy his ship. 
			string_id message = new string_id (c_stringFile, "s_5a29d93f");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not sure I'm comfortable with that.
	if (response == "s_229f6f26")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_grantMission4 (player, npc);

			//-- NPC: That's understandable. It could be extremely dangerous. In that case, just go to the location and destroy his ship. However, if you change your mind and decide to go undercover, dock with him and see what he has to say.
			string_id message = new string_id (c_stringFile, "s_d44fd86f");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Greetings, pilot. Please go to CorSec secure channel 37 Alpha.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Request declined. I must land immediately.
	if (response == "s_c11eb75b")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are four starports available to a ship of your class, %TU.  Please indicate your destination.
			string_id message = new string_id (c_stringFile, "s_108cc9eb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Coronet Starport (Freelance Pilot Trainer).
			boolean hasResponse0 = false;
			if (station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tyrena Starport (Rebel Pilot Trainer).
			boolean hasResponse1 = false;
			if (station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Coronet Starport.
			boolean hasResponse2 = false;
			if (!station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Kor Vella Starport.
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Doaba Guerfel Starport.
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyrena Starport.
			boolean hasResponse5 = false;
			if (!station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Homing Beacon.
			boolean hasResponse6 = false;
			if (station_corellia_condition_canLandAtHouse (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f6948278");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31b2918b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c3399297");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ccc6f3ed");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19bf16ff");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63ccb695");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 44);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Request declined. I am in need of urgent repairs.
	if (response == "s_b6a0e70f")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger, %TU.  We are a fully functional station and can provide you with whatever level of repairs that are necessary.  Please indicate your status.
			string_id message = new string_id (c_stringFile, "s_13071055");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Repair a little of the damage
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Repair half the damage
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Repair most of the damage
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Repair all of the damage
			boolean hasResponse3 = false;
			if (station_corellia_condition_canAfford100 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Nevermind
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d8f24b5b");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37b5c504");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82701bb4");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61071474");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_383d79b3");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 66);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Secure channel open.
	if (response == "s_7defec52")
	{
		//-- [NOTE] 
		if (station_corellia_condition_readyForMission5a (player, npc))
		{
			//-- NPC: This is top priority, pilot. Intelligence tells us that the leader of the Cloak sect will be passing through the sector very soon. We need you to intercept, disable, and upload your autopilot override program to his ship. Hopefully capturing this villain will squelch any further Cloak activity in this sector.
			string_id message = new string_id (c_stringFile, "s_9bd6e8c6");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am ready and willing.
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I cannot help now. Please reassign this mission.
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dfd4b5bb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_58263150");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 30);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_corellia_condition_readyForMission3 (player, npc))
		{
			//-- NPC: We've interrogated the Cloak Officer that you captured. It seems like this group is a splinter cell of the Hidden Daggers clan. We're still not sure what their intentions are, but it seems like they are targeting CorSec exclusively.
			string_id message = new string_id (c_stringFile, "s_d6306870");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How can I help?
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b84b366c");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 33);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_corellia_condition_readyForMission2 (player, npc))
		{
			//-- NPC: Something urgent just came up. A ranking officer of these 'Cloaks' has been seen passing through the system. We need to capture him for questioning. Do you think you can handle it?
			string_id message = new string_id (c_stringFile, "s_e2d1b03");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Of course. Awaiting tracking data.
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I cannot help now. Please reassign this mission.
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5e10bea5");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_114");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 37);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Pilot, we've got a special assignment for you. We've received a distress call on emergency channels. A freighter was attacked by an unknown group of ships. We need you to go assist with repairs and investigate the situation.
			string_id message = new string_id (c_stringFile, "s_31b93be");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Copy that. Awaiting navigation data.
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I cannot help now. Please reassign this mission.
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1270fff5");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 40);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Any mercenary assignments available?
	if (response == "s_280")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: We do have a list of mercenary assignments. For a pilot with your.... associations. I can offer the following duty missions:
			string_id message = new string_id (c_stringFile, "s_251");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols
			boolean hasResponse0 = false;
			if (station_corellia_condition_canTakeRebelTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Imperial patrols
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Imperial patrols
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Black Sun pirates
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Black Sun pirates
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Rebel patrols
			boolean hasResponse5 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Rebel patrols
			boolean hasResponse6 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Rebel patrols
			boolean hasResponse7 = false;
			if (station_corellia_condition_canTakeImperialTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse8 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_292");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_253");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_257");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_261");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_265");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_274");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_284");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_291");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_288");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 86);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: This is top priority, pilot. Intelligence tells us that the leader of the Cloak sect will be passing through the sector very soon. We need you to intercept, disable, and upload your autopilot override program to his ship. Hopefully capturing this villain will squelch any further Cloak activity in this sector.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready and willing.
	if (response == "s_dfd4b5bb")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_grantMission5a (player, npc);

			//-- NPC: Assigning you an operator. Transmitting data now.
			string_id message = new string_id (c_stringFile, "s_f7203392");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I cannot help now. Please reassign this mission.
	if (response == "s_58263150")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Alright, but don't let this become a habit.
			string_id message = new string_id (c_stringFile, "s_4e134be8");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We've interrogated the Cloak Officer that you captured. It seems like this group is a splinter cell of the Hidden Daggers clan. We're still not sure what their intentions are, but it seems like they are targeting CorSec exclusively.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How can I help?
	if (response == "s_b84b366c")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: The officer gave up a meeting location and a time. A courier is bringing leaked CorSec information to transfer to a Cloak ship at that location. We need you to destroy the Cloak ship and pick up the leaked information in its place. Are you up to it?
			string_id message = new string_id (c_stringFile, "s_d066a27d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am. Awaiting data transfer.
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I cannot help now. Please reassign this mission.
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71e0fb8");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 34);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch34 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The officer gave up a meeting location and a time. A courier is bringing leaked CorSec information to transfer to a Cloak ship at that location. We need you to destroy the Cloak ship and pick up the leaked information in its place. Are you up to it?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am. Awaiting data transfer.
	if (response == "s_71e0fb8")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_grantMission3 (player, npc);

			//-- NPC: Assigning you an operator. Transmitting data now.
			string_id message = new string_id (c_stringFile, "s_104");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I cannot help now. Please reassign this mission.
	if (response == "s_106")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Alright, but don't let this become a habit.
			string_id message = new string_id (c_stringFile, "s_108");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch37 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Something urgent just came up. A ranking officer of these 'Cloaks' has been seen passing through the system. We need to capture him for questioning. Do you think you can handle it?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Of course. Awaiting tracking data.
	if (response == "s_5e10bea5")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_grantMission2 (player, npc);

			//-- NPC: Assigning you an operator. Transmitting data now.
			string_id message = new string_id (c_stringFile, "s_112");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I cannot help now. Please reassign this mission.
	if (response == "s_114")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Alright, but don't let this become a habit.
			string_id message = new string_id (c_stringFile, "s_116");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch40 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Pilot, we've got a special assignment for you. We've received a distress call on emergency channels. A freighter was attacked by an unknown group of ships. We need you to go assist with repairs and investigate the situation.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Copy that. Awaiting navigation data.
	if (response == "s_1270fff5")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_grantMission1 (player, npc);

			//-- NPC: Assigning you an operator. Transmitting data now.
			string_id message = new string_id (c_stringFile, "s_120");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I cannot help now. Please reassign this mission.
	if (response == "s_122")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Alright, but don't let this become a habit.
			string_id message = new string_id (c_stringFile, "s_124");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch43 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You have entered CorSec space in the Corellia System.  Please identify yourself and state your business.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to land
	if (response == "s_128")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are four starports available to a ship of your class, %TU.  Please indicate your destination.
			string_id message = new string_id (c_stringFile, "s_108cc9eb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Coronet Starport (Freelance Pilot Trainer).
			boolean hasResponse0 = false;
			if (station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tyrena Starport (Rebel Pilot Trainer).
			boolean hasResponse1 = false;
			if (station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Coronet Starport.
			boolean hasResponse2 = false;
			if (!station_corellia_condition_isCorelliaTier1Privateer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Kor Vella Starport.
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Doaba Guerfel Starport.
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyrena Starport.
			boolean hasResponse5 = false;
			if (!station_corellia_condition_isCorelliaTier1Rebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Homing Beacon.
			boolean hasResponse6 = false;
			if (station_corellia_condition_canLandAtHouse (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f6948278");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31b2918b");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c3399297");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ccc6f3ed");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19bf16ff");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63ccb695");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 44);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Repairs)
	if (response == "s_194")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger, %TU.  We are a fully functional station and can provide you with whatever level of repairs that are necessary.  Please indicate your status.
			string_id message = new string_id (c_stringFile, "s_13071055");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Repair a little of the damage
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Repair half the damage
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Repair most of the damage
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Repair all of the damage
			boolean hasResponse3 = false;
			if (station_corellia_condition_canAfford100 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Nevermind
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d8f24b5b");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37b5c504");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82701bb4");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61071474");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_383d79b3");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 66);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do you have any special CorSec assignments for me?
	if (response == "s_8bd9c726")
	{
		//-- [NOTE] 
		if (station_corellia_condition_canDoTier1Duty (player, npc))
		{
			//-- NPC: As a matter of fact, we do have an elective duty assignment for you. Ever since we've uncovered this Cloak sect, small attack wings have been popping up everywhere. We need you to go out and destroy them. Will you accept this mission?
			string_id message = new string_id (c_stringFile, "s_942f251f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I accept this mission.
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No, I will decline this mission.
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ade7f893");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 80);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Since you are interested, we do have an elective duty assignment for you. You've done a good job eliminating the Cloak sect in this system. Now the survivors have fled and are trying to regroup. We need you to get to the Dathomir system and eliminate the remnants. Will you accept this mission?
			string_id message = new string_id (c_stringFile, "s_835e1db9");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I accept this mission.
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No, I will decline this mission.
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_242");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_245");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 83);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Any mercenary assignments available?
	if (response == "s_249")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: We do have a list of mercenary assignments. For a pilot with your.... associations. I can offer the following duty missions:
			string_id message = new string_id (c_stringFile, "s_251");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols
			boolean hasResponse0 = false;
			if (station_corellia_condition_canTakeRebelTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Imperial patrols
			boolean hasResponse1 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Imperial patrols
			boolean hasResponse2 = false;
			if (station_corellia_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Black Sun pirates
			boolean hasResponse3 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Black Sun pirates
			boolean hasResponse4 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 1 Rebel patrols
			boolean hasResponse5 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down tier 2 Rebel patrols
			boolean hasResponse6 = false;
			if (station_corellia_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Rebel patrols
			boolean hasResponse7 = false;
			if (station_corellia_condition_canTakeImperialTier5 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse8 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_292");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_253");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_257");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_261");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_265");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_274");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_284");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_291");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_288");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 86);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch44 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There are four starports available to a ship of your class, %TU.  Please indicate your destination.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Coronet Starport (Freelance Pilot Trainer).
	if (response == "s_f6948278")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well, %TU, you are cleared for landing at the Coronet Starport.
			string_id message = new string_id (c_stringFile, "s_d00437d0");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Land)
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Disregard
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2dc4697a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851eb5fa");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 45);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tyrena Starport (Rebel Pilot Trainer).
	if (response == "s_31b2918b")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well, %TU, you are cleared for landing at the Tyrena Starport.
			string_id message = new string_id (c_stringFile, "s_f0f7d52d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Land)
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Disregard
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_139");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_143");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Coronet Starport.
	if (response == "s_c3399297")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well, %TU, you are cleared for landing at the Coronet Starport.
			string_id message = new string_id (c_stringFile, "s_148");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Land)
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Disregard
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_150");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 51);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Kor Vella Starport.
	if (response == "s_ccc6f3ed")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well, %TU, you are cleared for landing at the Kor Vella Starport.
			string_id message = new string_id (c_stringFile, "s_eec4dc6e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Land)
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Disregard
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 54);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Doaba Guerfel Starport.
	if (response == "s_19bf16ff")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well, %TU, you are cleared for landing at the Doaba Guerfel Starport.
			string_id message = new string_id (c_stringFile, "s_b596ece0");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Land)
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Disregard
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_169");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_173");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 57);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tyrena Starport.
	if (response == "s_63ccb695")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well, %TU, you are cleared for landing at the Tyrena Starport.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Land)
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Disregard
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_180");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 60);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Homing Beacon.
	if (response == "s_225")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well, %TU, you are cleared for landing at your personal Homing Beacon.
			string_id message = new string_id (c_stringFile, "s_226");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Land)
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Disregard
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_227");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_228");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch45 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well, %TU, you are cleared for landing at the Coronet Starport.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Land)
	if (response == "s_2dc4697a")
	{
		station_corellia_action_landStation1 (player, npc);

		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_landStation1 (player, npc);

			//-- NPC: CorSec station, out.
			string_id message = new string_id (c_stringFile, "s_7f59cc25");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Disregard
	if (response == "s_851eb5fa")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well, %TU, please clear the area for other traffic.
			string_id message = new string_id (c_stringFile, "s_c804e280");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch48 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well, %TU, you are cleared for landing at the Tyrena Starport.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Land)
	if (response == "s_139")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_landStation4 (player, npc);

			//-- NPC: CorSec station, out.
			string_id message = new string_id (c_stringFile, "s_141");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Disregard
	if (response == "s_143")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well, %TU, please clear the area for other traffic.
			string_id message = new string_id (c_stringFile, "s_145");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch51 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well, %TU, you are cleared for landing at the Coronet Starport.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Land)
	if (response == "s_150")
	{
		station_corellia_action_landStation1 (player, npc);

		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_landStation1 (player, npc);

			//-- NPC: CorSec station, out.
			string_id message = new string_id (c_stringFile, "s_152");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Disregard
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well, %TU, please clear the area for other traffic.
			string_id message = new string_id (c_stringFile, "s_156");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch54 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well, %TU, you are cleared for landing at the Kor Vella Starport.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Land)
	if (response == "s_160")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_landStation2 (player, npc);

			//-- NPC: CorSec station, out.
			string_id message = new string_id (c_stringFile, "s_162");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Disregard
	if (response == "s_164")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger that, %TU.  Please clear the area for other traffic.
			string_id message = new string_id (c_stringFile, "s_1bbaf71f");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch57 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well, %TU, you are cleared for landing at the Doaba Guerfel Starport.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Land)
	if (response == "s_169")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_landStation3 (player, npc);

			//-- NPC: CorSec station, out.
			string_id message = new string_id (c_stringFile, "s_171");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Disregard
	if (response == "s_173")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger that, %TU.  Please clear the area for other traffic.
			string_id message = new string_id (c_stringFile, "s_175");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch60 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well, %TU, you are cleared for landing at the Tyrena Starport.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Land)
	if (response == "s_180")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_landStation4 (player, npc);

			//-- NPC: CorSec station, out.
			string_id message = new string_id (c_stringFile, "s_182");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Disregard
	if (response == "s_184")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well, %TU, please clear the area for other traffic.
			string_id message = new string_id (c_stringFile, "s_186");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch63 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well, %TU, you are cleared for landing at your personal Homing Beacon.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Land)
	if (response == "s_227")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_landHoming (player, npc);

			//-- NPC: CorSec station, out.
			string_id message = new string_id (c_stringFile, "s_230");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Disregard
	if (response == "s_228")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger that, %TU.  Please clear the area for other traffic.
			string_id message = new string_id (c_stringFile, "s_229");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch66 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Roger, %TU.  We are a fully functional station and can provide you with whatever level of repairs that are necessary.  Please indicate your status.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Repair a little of the damage
	if (response == "s_d8f24b5b")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger, %TU.  For a fee of %DI credits we'll repair just enough to get you underway.  Please confirm.
			string_id message = new string_id (c_stringFile, "s_99824a76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Do it
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b1525744");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_457a7010");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 67);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_corellia_tokenDI_getStationRepairCost25 (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_corellia_tokenDI_getStationRepairCost25 (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Repair half the damage
	if (response == "s_37b5c504")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Affirmative, %TU.  Repairing half your current damage will cost %DI credits. Are you ready to transfer the funds?
			string_id message = new string_id (c_stringFile, "s_28d56475");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_370822d1");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_207");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 70);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_corellia_tokenDI_getStationRepairCost50 (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_corellia_tokenDI_getStationRepairCost50 (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Repair most of the damage
	if (response == "s_82701bb4")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger that, %TU.  We can repair three-fourths of your ship's damage at a fee of %DI credits.  Are you ready to transfer the funds?
			string_id message = new string_id (c_stringFile, "s_c3f09c65");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_213");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_216");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 73);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_corellia_tokenDI_getStationRepairCost75 (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_corellia_tokenDI_getStationRepairCost75 (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Repair all of the damage
	if (response == "s_61071474")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: A complete repair of your ship will cost %DI credits, %TU.  Are you sure?
			string_id message = new string_id (c_stringFile, "s_ef7f535a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes
			boolean hasResponse0 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No
			boolean hasResponse1 = false;
			if (station_corellia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_224");

				utils.setScriptVar (player, "conversation.station_corellia.branchId", 76);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_corellia_tokenDI_getStationRepairCost100 (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_corellia.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_corellia_tokenDI_getStationRepairCost100 (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Nevermind
	if (response == "s_383d79b3")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Copy that, %TU.  CorSec station out.
			string_id message = new string_id (c_stringFile, "s_2f3c1bdc");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch67 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Roger, %TU.  For a fee of %DI credits we'll repair just enough to get you underway.  Please confirm.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do it
	if (response == "s_b1525744")
	{
		station_corellia_action_fix25 (player, npc);

		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: 25% of your ship damage has been fixed. Please clear the area for other traffic.  CorSec station, out.
			string_id message = new string_id (c_stringFile, "s_2f8c6a62");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No
	if (response == "s_457a7010")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you wish, %TU.  Please clear the area for other traffic.  CorSec station, out.
			string_id message = new string_id (c_stringFile, "s_71a60205");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch70 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Affirmative, %TU.  Repairing half your current damage will cost %DI credits. Are you ready to transfer the funds?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes
	if (response == "s_370822d1")
	{
		station_corellia_action_fix50 (player, npc);

		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Received, %TU.  Half of your ship damage has been fixed.  You are clear to leave the area.  CorSec station, out.
			string_id message = new string_id (c_stringFile, "s_9be6fb53");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No
	if (response == "s_207")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you wish, %TU.  Please clear the area for other traffic.  CorSec station, out.
			string_id message = new string_id (c_stringFile, "s_209");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch73 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Roger that, %TU.  We can repair three-fourths of your ship's damage at a fee of %DI credits.  Are you ready to transfer the funds?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes
	if (response == "s_213")
	{
		station_corellia_action_fix75 (player, npc);

		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Funds received, %TU... Repairs complete.  You are clear to leave the station.  CorSec station, out.
			string_id message = new string_id (c_stringFile, "s_4a546bbb");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No
	if (response == "s_216")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Bye
			string_id message = new string_id (c_stringFile, "s_af84143a");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch76 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A complete repair of your ship will cost %DI credits, %TU.  Are you sure?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes
	if (response == "s_221")
	{
		station_corellia_action_fix100 (player, npc);

		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Repairs complete!  You are clear to leave CorSec station, out.
			string_id message = new string_id (c_stringFile, "s_26f0c6f6");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No
	if (response == "s_224")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you wish, %TU.  Please leave the area to make room for incoming traffic.  Out.
			string_id message = new string_id (c_stringFile, "s_a98368fb");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch80 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: As a matter of fact, we do have an elective duty assignment for you. Ever since we've uncovered this Cloak sect, small attack wings have been popping up everywhere. We need you to go out and destroy them. Will you accept this mission?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I accept this mission.
	if (response == "s_a5591c27")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_grantDuty1 (player, npc);

			//-- NPC: Ackowledged. Find and eliminate the Cloak attack wings.
			string_id message = new string_id (c_stringFile, "s_6926e8ad");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I will decline this mission.
	if (response == "s_ade7f893")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Carry on, pilot.
			string_id message = new string_id (c_stringFile, "s_b284b08f");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch83 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Since you are interested, we do have an elective duty assignment for you. You've done a good job eliminating the Cloak sect in this system. Now the survivors have fled and are trying to regroup. We need you to get to the Dathomir system and eliminate the remnants. Will you accept this mission?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I accept this mission.
	if (response == "s_242")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_grantDuty2 (player, npc);

			//-- NPC: Acknowledged. Proceed to the Dathomir system and destroy the Cloak remnants.
			string_id message = new string_id (c_stringFile, "s_ae89219d");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I will decline this mission.
	if (response == "s_245")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Carry on, pilot.
			string_id message = new string_id (c_stringFile, "s_247");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_corellia_handleBranch86 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We do have a list of mercenary assignments. For a pilot with your.... associations. I can offer the following duty missions:

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll hunt down tier 5 Imperial patrols
	if (response == "s_292")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_grantRebelDuty5 (player, npc);

			//-- NPC: Transmitting mission data. Good hunting.
			string_id message = new string_id (c_stringFile, "s_293");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll hunt down tier 1 Imperial patrols
	if (response == "s_253")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_grantRebelDuty1 (player, npc);

			//-- NPC: Transmitting mission data. Good hunting.
			string_id message = new string_id (c_stringFile, "s_255");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll hunt down tier 2 Imperial patrols
	if (response == "s_257")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_grantRebelDuty2 (player, npc);

			//-- NPC: Transmitting mission data. Good hunting.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll hunt down tier 1 Black Sun pirates
	if (response == "s_261")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_grantBlackSun1Duty (player, npc);

			//-- NPC: Transmitting mission data. Good hunting.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll hunt down tier 2 Black Sun pirates
	if (response == "s_265")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_grantBlackSun2Duty (player, npc);

			//-- NPC: Transmitting mission data. Good hunting.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll hunt down tier 1 Rebel patrols
	if (response == "s_274")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_grantImperialDuty1 (player, npc);

			//-- NPC: Transmitting mission data. Good hunting.
			string_id message = new string_id (c_stringFile, "s_282");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll hunt down tier 2 Rebel patrols
	if (response == "s_284")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_grantImperialDuty2 (player, npc);

			//-- NPC: Transmitting mission data. Good hunting.
			string_id message = new string_id (c_stringFile, "s_286");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll hunt down tier 5 Rebel patrols
	if (response == "s_291")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			station_corellia_action_grantImperialDuty5 (player, npc);

			//-- NPC: Transmitting mission data. Good hunting.
			string_id message = new string_id (c_stringFile, "s_294");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Nothing here for me
	if (response == "s_288")
	{
		//-- [NOTE] 
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. 
			string_id message = new string_id (c_stringFile, "s_290");
			utils.removeScriptVar (player, "conversation.station_corellia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setObjVar(self, "convo.appearance", "object/mobile/space_comm_station_corellia.iff" );
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);	
	setObjVar(self, "convo.appearance", "object/mobile/space_comm_station_corellia.iff" );
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.station_corellia");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (station_corellia_condition_isTooFar (player, npc))
	{
		//-- NPC: Welcome to the Corellia system.  We cannot assist you at this range.  Fly closer and identify yourself.
		string_id message = new string_id (c_stringFile, "s_bf5b2480");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_corellia_condition_hasWonMission5b (player, npc))
	{
		station_corellia_action_grantReward5b (player, npc);

		//-- NPC: Great work, pilot. Under the circumstances things went as well as could be expected. Since the Cloak leader was destroyed, I don't think the remaining forces will be much of a threat. Here is your final extended mission pay.
		string_id message = new string_id (c_stringFile, "s_23058f01");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Understood. I would like to land.
		boolean hasResponse0 = false;
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Understood. I am in need of repairs.
		boolean hasResponse1 = false;
		if (station_corellia_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Any mercenary assignments available?
		boolean hasResponse2 = false;
		if (station_corellia_condition_canTakeQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_e0234542");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_5f4e62c9");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_269");

			utils.setScriptVar (player, "conversation.station_corellia.branchId", 2);

			npcStartConversation (player, npc, "station_corellia", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_corellia_condition_hasWonMission5a (player, npc))
	{
		station_corellia_action_grantReward5a (player, npc);

		//-- NPC: Good work, pilot. Under the circumstances things went as well as could be expected. Since the Cloak leader was destroyed, I don't think the remaining forces will be much of a threat. Here is your final extended mission pay.
		string_id message = new string_id (c_stringFile, "s_ecb04612");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Understood. I would like to land.
		boolean hasResponse0 = false;
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Understood. I am in need of repairs.
		boolean hasResponse1 = false;
		if (station_corellia_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Any mercenary assignments available?
		boolean hasResponse2 = false;
		if (station_corellia_condition_canTakeQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_9");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_11");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_270");

			utils.setScriptVar (player, "conversation.station_corellia.branchId", 3);

			npcStartConversation (player, npc, "station_corellia", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_corellia_condition_hasWonMission4b (player, npc))
	{
		station_corellia_action_grantReward4b (player, npc);

		//-- NPC: Good job, pilot. Going undercover isn't for everyone, and now there's at least one less Cloak ship in the system. Here is your extended mission pay.
		string_id message = new string_id (c_stringFile, "s_4f83609d");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Understood. I would like to land.
		boolean hasResponse0 = false;
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Understood. I am in need of repairs.
		boolean hasResponse1 = false;
		if (station_corellia_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Any mercenary assignments available?
		boolean hasResponse2 = false;
		if (station_corellia_condition_canTakeQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_15");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_17");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_271");

			utils.setScriptVar (player, "conversation.station_corellia.branchId", 4);

			npcStartConversation (player, npc, "station_corellia", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_corellia_condition_hasWonMission4a (player, npc))
	{
		station_corellia_action_grantReward4a (player, npc);

		//-- NPC: So you've decided to go undercover? You are to be commended. Not many pilots would be so brave. There's not much to do now but wait until the Cloaks contact you. In the meantime, here is your extended mission pay.
		string_id message = new string_id (c_stringFile, "s_a4e56782");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Understood. I would like to land.
		boolean hasResponse0 = false;
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Understood. I am in need of repairs.
		boolean hasResponse1 = false;
		if (station_corellia_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Any mercenary assignments available?
		boolean hasResponse2 = false;
		if (station_corellia_condition_canTakeQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_21");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_23");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_272");

			utils.setScriptVar (player, "conversation.station_corellia.branchId", 5);

			npcStartConversation (player, npc, "station_corellia", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_corellia_condition_hasWonMission3 (player, npc))
	{
		station_corellia_action_grantReward3 (player, npc);

		//-- NPC: CorSec Command is impressed, pilot. That went off without a hitch. We will get to work tracking down how this information was leaked, and who leaked it. Here is your extended mission pay.
		string_id message = new string_id (c_stringFile, "s_7023f204");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Understood. I would like to land.
		boolean hasResponse0 = false;
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Understood. I am in need of repairs.
		boolean hasResponse1 = false;
		if (station_corellia_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Any mercenary assignments available?
		boolean hasResponse2 = false;
		if (station_corellia_condition_canTakeQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_27");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_29");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_273");

			utils.setScriptVar (player, "conversation.station_corellia.branchId", 6);

			npcStartConversation (player, npc, "station_corellia", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_corellia_condition_hasWonMission2 (player, npc))
	{
		station_corellia_action_grantReward2 (player, npc);

		//-- NPC: Excellent work, pilot. I'll transfer your extended mission pay now. The Cloak officer is on his way to the interrogation base now. Hopefully we'll get some more answers as to who these pirates are and what they're after.
		string_id message = new string_id (c_stringFile, "s_2b40f4fd");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Understood. I would like to land.
		boolean hasResponse0 = false;
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Understood. I am in need of repairs.
		boolean hasResponse1 = false;
		if (station_corellia_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Any mercenary assignments available?
		boolean hasResponse2 = false;
		if (station_corellia_condition_canTakeQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_33");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_35");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_275");

			utils.setScriptVar (player, "conversation.station_corellia.branchId", 7);

			npcStartConversation (player, npc, "station_corellia", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_corellia_condition_hasWonMission1 (player, npc))
	{
		station_corellia_action_grantReward1 (player, npc);

		//-- NPC: Good work, pilot. Here is your extended mission pay. We'll look into who these 'Cloak' pilots are and keep our eyes open for more activity. In the meantime, carry on with your standard operations.
		string_id message = new string_id (c_stringFile, "s_a827381c");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Understood. I would like to land.
		boolean hasResponse0 = false;
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Understood. I am in need of repairs.
		boolean hasResponse1 = false;
		if (station_corellia_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Any mercenary assignments available?
		boolean hasResponse2 = false;
		if (station_corellia_condition_canTakeQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_39");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_41");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_276");

			utils.setScriptVar (player, "conversation.station_corellia.branchId", 8);

			npcStartConversation (player, npc, "station_corellia", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_corellia_condition_hasFailedMission (player, npc))
	{
		station_corellia_action_removeMissionFlag (player, npc);

		//-- NPC: Failure does not become you, pilot. This will go in your permanent record.
		string_id message = new string_id (c_stringFile, "s_206f187d");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Understood. I would like to land.
		boolean hasResponse0 = false;
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Understood. I am in need of repairs.
		boolean hasResponse1 = false;
		if (station_corellia_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Let me try again.
		boolean hasResponse2 = false;
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: Any mercenary assignments available?
		boolean hasResponse3 = false;
		if (station_corellia_condition_canTakeQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_45");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_47");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_c9c08b99");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_277");

			utils.setScriptVar (player, "conversation.station_corellia.branchId", 9);

			npcStartConversation (player, npc, "station_corellia", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_corellia_condition_readyForMission5b (player, npc))
	{
		//-- NPC: You have entered CorSec space in the Corellia System.  Please identify yourself.
		string_id message = new string_id (c_stringFile, "s_8eddcaf7");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I would like to land
		boolean hasResponse0 = false;
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: (Request Repairs)
		boolean hasResponse1 = false;
		if (station_corellia_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Requesting secure channel 37 Alpha.
		boolean hasResponse2 = false;
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: Any mercenary assignments available?
		boolean hasResponse3 = false;
		if (station_corellia_condition_canTakeQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_7e77cbe2");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_c358d041");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_51cc9a48");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_278");

			utils.setScriptVar (player, "conversation.station_corellia.branchId", 17);

			npcStartConversation (player, npc, "station_corellia", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_corellia_condition_readyForMission4 (player, npc))
	{
		//-- NPC: You have entered CorSec space in the Corellia System.  Please identify yourself, pilot.
		string_id message = new string_id (c_stringFile, "s_504294eb");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I would like to land
		boolean hasResponse0 = false;
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: (Request Repairs)
		boolean hasResponse1 = false;
		if (station_corellia_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Requesting secure channel 37 Alpha.
		boolean hasResponse2 = false;
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: Any mercenary assignments available?
		boolean hasResponse3 = false;
		if (station_corellia_condition_canTakeQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_73");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_75");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_77");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_279");

			utils.setScriptVar (player, "conversation.station_corellia.branchId", 23);

			npcStartConversation (player, npc, "station_corellia", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_corellia_condition_isCorSec (player, npc))
	{
		//-- NPC: Greetings, pilot. Please go to CorSec secure channel 37 Alpha.
		string_id message = new string_id (c_stringFile, "s_2dfdd4ae");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Request declined. I must land immediately.
		boolean hasResponse0 = false;
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Request declined. I am in need of urgent repairs.
		boolean hasResponse1 = false;
		if (station_corellia_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Secure channel open.
		boolean hasResponse2 = false;
		if (!station_corellia_condition_isWaiting (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: Any mercenary assignments available?
		boolean hasResponse3 = false;
		if (station_corellia_condition_canTakeQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_c11eb75b");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_b6a0e70f");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_7defec52");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_280");

			utils.setScriptVar (player, "conversation.station_corellia.branchId", 29);

			npcStartConversation (player, npc, "station_corellia", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_corellia_condition__defaultCondition (player, npc))
	{
		//-- NPC: You have entered CorSec space in the Corellia System.  Please identify yourself and state your business.
		string_id message = new string_id (c_stringFile, "s_87bb06cf");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I would like to land
		boolean hasResponse0 = false;
		if (station_corellia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: (Request Repairs)
		boolean hasResponse1 = false;
		if (station_corellia_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Do you have any special CorSec assignments for me?
		boolean hasResponse2 = false;
		if (station_corellia_condition_canDoDuty (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: Any mercenary assignments available?
		boolean hasResponse3 = false;
		if (station_corellia_condition_canTakeQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_128");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_194");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_8bd9c726");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_249");

			utils.setScriptVar (player, "conversation.station_corellia.branchId", 43);

			npcStartConversation (player, npc, "station_corellia", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "station_corellia")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.station_corellia.branchId");

	if (branchId == 2 && station_corellia_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && station_corellia_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && station_corellia_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && station_corellia_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && station_corellia_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && station_corellia_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && station_corellia_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && station_corellia_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && station_corellia_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && station_corellia_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && station_corellia_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && station_corellia_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && station_corellia_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && station_corellia_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && station_corellia_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && station_corellia_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && station_corellia_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && station_corellia_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && station_corellia_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && station_corellia_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 34 && station_corellia_handleBranch34 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 37 && station_corellia_handleBranch37 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 40 && station_corellia_handleBranch40 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 43 && station_corellia_handleBranch43 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 44 && station_corellia_handleBranch44 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 45 && station_corellia_handleBranch45 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 48 && station_corellia_handleBranch48 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 51 && station_corellia_handleBranch51 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 54 && station_corellia_handleBranch54 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 57 && station_corellia_handleBranch57 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 60 && station_corellia_handleBranch60 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 63 && station_corellia_handleBranch63 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 66 && station_corellia_handleBranch66 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 67 && station_corellia_handleBranch67 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 70 && station_corellia_handleBranch70 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 73 && station_corellia_handleBranch73 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 76 && station_corellia_handleBranch76 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 80 && station_corellia_handleBranch80 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 83 && station_corellia_handleBranch83 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 86 && station_corellia_handleBranch86 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.station_corellia.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

