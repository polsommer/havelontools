// ======================================================================
//
// npe_profession_entertainer_officer.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/npe_profession_entertainer_officer";

// ======================================================================
// Script Conditions
// ======================================================================

boolean npe_profession_entertainer_officer_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean npe_profession_entertainer_officer_condition_playerOnFirstQuestStep (obj_id player, obj_id npc)
{
		return groundquests.isTaskActive(player, "npe_prof_entertainer1", "talktoofficer");
}

// ----------------------------------------------------------------------

boolean npe_profession_entertainer_officer_condition_playerCompletedQuestStep (obj_id player, obj_id npc)
{
		return groundquests.hasCompletedTask(player, "npe_prof_entertainer1", "getinformation");
}

// ----------------------------------------------------------------------

boolean npe_profession_entertainer_officer_condition_playerCompletedQuest (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "npe_scout_1");
}

// ----------------------------------------------------------------------

boolean npe_profession_entertainer_officer_condition_playerOnDanceStep (obj_id player, obj_id npc)
{
		return groundquests.isTaskActive(player, "npe_prof_entertainer1", "dance");
}

// ----------------------------------------------------------------------

boolean npe_profession_entertainer_officer_condition_playerOnSecondInfoStep (obj_id player, obj_id npc)
{
		return groundquests.isTaskActive(player, "npe_prof_entertainer1", "getinformation");
}

// ======================================================================
// Script Actions
// ======================================================================

void npe_profession_entertainer_officer_action_firstSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_prof_entertainer1_officer");
}

// ----------------------------------------------------------------------

void npe_profession_entertainer_officer_action_secondSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_prof_entertainer1_information");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int npe_profession_entertainer_officer_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You aren't bad. Thank you for the break. You're new at this, aren't you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: A bit. How did you know?
	if (response == "s_27")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: My sister is a professional dancer. She practiced a lot, and I had the duty to guard her before I joined the Imperial Navy.
			string_id message = new string_id (c_stringFile, "s_28");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll bet that your duties are much different now.
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_29");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer_officer.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_officer_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: My sister is a professional dancer. She practiced a lot, and I had the duty to guard her before I joined the Imperial Navy.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll bet that your duties are much different now.
	if (response == "s_29")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are, for certain. Like now, I'm looking into a missing bit of cargo. Frankly, I'd rather be back guarding my sister.
			string_id message = new string_id (c_stringFile, "s_30");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Cargo? What kind of cargo?
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer_officer.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_officer_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: They are, for certain. Like now, I'm looking into a missing bit of cargo. Frankly, I'd rather be back guarding my sister.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Cargo? What kind of cargo?
	if (response == "s_31")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: It's a long story, and most of it is classified information. But, I can say that an object of high value was stolen from an Imperial ship in transit to Coruscant.
			string_id message = new string_id (c_stringFile, "s_32");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's terrible!
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_33");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer_officer.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_officer_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It's a long story, and most of it is classified information. But, I can say that an object of high value was stolen from an Imperial ship in transit to Coruscant.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's terrible!
	if (response == "s_33")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_officer_condition__defaultCondition (player, npc))
		{
			npe_profession_entertainer_officer_action_secondSignal (player, npc);

			//-- NPC: It's going to be worse for the thief. I'm authorized to use any force necessary to bring back the stolen arti..object.
			string_id message = new string_id (c_stringFile, "s_34");
			utils.removeScriptVar (player, "conversation.npe_profession_entertainer_officer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_officer_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: May I help you, citizen?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've been sent here to entertain you.
	if (response == "s_19")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: I beg your pardon?
			string_id message = new string_id (c_stringFile, "s_21");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Mira thought that you could use a break. I've been sent to dance for you.
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_23");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer_officer.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_officer_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I beg your pardon?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Mira thought that you could use a break. I've been sent to dance for you.
	if (response == "s_23")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_officer_condition__defaultCondition (player, npc))
		{
			npe_profession_entertainer_officer_action_firstSignal (player, npc);

			//-- NPC: Sure. I could use a break. I only have a minute to watch, though.
			string_id message = new string_id (c_stringFile, "s_25");
			utils.removeScriptVar (player, "conversation.npe_profession_entertainer_officer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.npe_profession_entertainer_officer");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Imperial OFficer");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Imperial Officer");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.npe_profession_entertainer_officer");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (npe_profession_entertainer_officer_condition_playerCompletedQuestStep (player, npc))
	{
		//-- NPC: Good luck with your career.
		string_id message = new string_id (c_stringFile, "s_35");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_profession_entertainer_officer_condition_playerOnSecondInfoStep (player, npc))
	{
		//-- NPC: You aren't bad. Thank you for the break. You're new at this, aren't you?
		string_id message = new string_id (c_stringFile, "s_12");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: A bit. How did you know?
		boolean hasResponse0 = false;
		if (npe_profession_entertainer_officer_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_27");

			utils.setScriptVar (player, "conversation.npe_profession_entertainer_officer.branchId", 2);

			npcStartConversation (player, npc, "npe_profession_entertainer_officer", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_profession_entertainer_officer_condition_playerOnDanceStep (player, npc))
	{
		//-- NPC: Is that the best you've got? Try using some flourishes.
		string_id message = new string_id (c_stringFile, "s_15");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_profession_entertainer_officer_condition_playerOnFirstQuestStep (player, npc))
	{
		//-- NPC: May I help you, citizen?
		string_id message = new string_id (c_stringFile, "s_17");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I've been sent here to entertain you.
		boolean hasResponse0 = false;
		if (npe_profession_entertainer_officer_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_19");

			utils.setScriptVar (player, "conversation.npe_profession_entertainer_officer.branchId", 8);

			npcStartConversation (player, npc, "npe_profession_entertainer_officer", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_profession_entertainer_officer_condition__defaultCondition (player, npc))
	{
		//-- NPC: Hello, citizen. I'm sorry, but I cannot help you right now. I have some investigating to do.
		string_id message = new string_id (c_stringFile, "s_36");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "npe_profession_entertainer_officer")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.npe_profession_entertainer_officer.branchId");

	if (branchId == 2 && npe_profession_entertainer_officer_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && npe_profession_entertainer_officer_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && npe_profession_entertainer_officer_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && npe_profession_entertainer_officer_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && npe_profession_entertainer_officer_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && npe_profession_entertainer_officer_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.npe_profession_entertainer_officer.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

