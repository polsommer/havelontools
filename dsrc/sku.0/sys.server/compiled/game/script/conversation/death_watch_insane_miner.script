// ======================================================================
//
// death_watch_insane_miner.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/death_watch_insane_miner";

// ======================================================================
// Script Conditions
// ======================================================================

boolean death_watch_insane_miner_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean death_watch_insane_miner_condition_startMission (obj_id player, obj_id npc)
{
	if (hasObjVar(player, "death_watch.drill_01") && !hasObjVar(player, "death_watch.medicine"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean death_watch_insane_miner_condition_checkMedicine (obj_id player, obj_id npc)
{
	obj_id objInventory = utils.getInventoryContainer(player);
	if( isIdValid(objInventory) )
	{
		obj_id[] objContents = utils.getContents(objInventory);
	
		if( objContents != null )
		{
			for( int intI = 0; intI<objContents.length; intI++ )
			{
				string strItemTemplate = getTemplateName(objContents[intI]);
				if( strItemTemplate=="object/tangible/dungeon/death_watch_bunker/crazed_miner_medicine.iff" )
					return true;		
			}
			
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean death_watch_insane_miner_condition_alreadyAccepted (obj_id player, obj_id npc)
{
	if (hasObjVar(player, "death_watch.medicine"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean death_watch_insane_miner_condition_noMedicine (obj_id player, obj_id npc)
{
	obj_id objInventory = utils.getInventoryContainer(player);
	if( isIdValid(objInventory) )
	{
		obj_id[] objContents = utils.getContents(objInventory);
	
		if( objContents != null )
		{
			for( int intI = 0; intI<objContents.length; intI++ )
			{
				string strItemTemplate = getTemplateName(objContents[intI]);
				if( strItemTemplate=="object/tangible/dungeon/death_watch_bunker/crazed_miner_medicine.iff" )
					return false;		
			}
			
		}
	}
	return true;
}

// ----------------------------------------------------------------------

boolean death_watch_insane_miner_condition_noQuest (obj_id player, obj_id npc)
{
	if (!hasObjVar(player, "death_watch.drill_01") && !hasObjVar(player, "death_watch.medicine"))
	{
		return true;
	}
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void death_watch_insane_miner_action_getMedicine (obj_id player, obj_id npc)
{
	setObjVar(player, "death_watch.medicine", 1);	
	messageTo(npc, "handleCrazedCleanup", null, 1800f, false);
	return;
}

// ----------------------------------------------------------------------

void death_watch_insane_miner_action_removeMedicine (obj_id player, obj_id npc)
{
	obj_id objInventory = utils.getInventoryContainer(player);
	if( isIdValid(objInventory) )
	{
		obj_id[] objContents = utils.getContents(objInventory);
	
		if( objContents != null )
		{
			for( int intI = 0; intI<objContents.length; intI++ )
			{
				string strItemTemplate = getTemplateName(objContents[intI]);
				if( strItemTemplate=="object/tangible/dungeon/death_watch_bunker/crazed_miner_medicine.iff" )
				{
					destroyObject( objContents[intI] );
					return;
				}		
			}
			
		}
	}
	return;
}

// ----------------------------------------------------------------------

void death_watch_insane_miner_action_giveBattery (obj_id player, obj_id npc)
{
	obj_id objInventory = utils.getInventoryContainer(player);
	if( isIdValid(objInventory) )
	{
		obj_id[] objContents = utils.getContents(objInventory);
	
		if( objContents != null )
		{
			for( int intI = 0; intI<objContents.length; intI++ )
			{
				string strItemTemplate = getTemplateName(objContents[intI]);
				if( strItemTemplate=="object/tangible/dungeon/death_watch_bunker/crazed_miner_medicine.iff" )
				{
					destroyObject( objContents[intI] );
				}		
			}
			
		}
	}
	
if (isIdValid(player))
	{
	 	obj_id playerInv = getObjectInSlot( player, "inventory" );
		if(isIdValid(playerInv)) 
		{
			obj_id item = createObject( "object/tangible/dungeon/death_watch_bunker/drill_battery.iff", playerInv, "" );
			if(isIdValid(item))
			{
				setObjVar(player, "death_watch.medicine_success", 1);
				removeObjVar(player, "death_watch.medicine");
	 		}
		}
		messageTo(npc, "handleCrazedCleanup", null, 30f, false);
	}
	return;
}

// ----------------------------------------------------------------------

void death_watch_insane_miner_action_attackSpeaker (obj_id player, obj_id npc)
{
	setObjVar(npc, "death_watch.noHelp", player);
	dictionary params = new dictionary();
	params.put("player", player);
	messageTo(npc, "handleCrazedAttack", params, 1f, false);
	return;
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int death_watch_insane_miner_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: My head! I cannot think straight. Please get me some help before I hurt anyone...it has to be alum sickness!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alum sickness? What can I do to help you?
	if (response == "s_3fb7180e")
	{
		//-- [NOTE] 
		if (death_watch_insane_miner_condition__defaultCondition (player, npc))
		{
			//-- NPC: The medical droid upstairs? Yes! The medical droid has the antidote. I need it...I must have some before it is to late.
			string_id message = new string_id (c_stringFile, "s_87bb258b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Don't worry I will go get you some right now.
			boolean hasResponse0 = false;
			if (death_watch_insane_miner_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I have some of the medicine on me.
			boolean hasResponse1 = false;
			if (death_watch_insane_miner_condition_checkMedicine (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't think so! Sorry, but you need to be taken down.
			boolean hasResponse2 = false;
			if (death_watch_insane_miner_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16968d33");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dad50efa");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4fe1bc67");

				utils.setScriptVar (player, "conversation.death_watch_insane_miner.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.death_watch_insane_miner.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You are a danger to everyone and need to be taken down.
	if (response == "s_7c3e9069")
	{
		//-- [NOTE] 
		if (death_watch_insane_miner_condition__defaultCondition (player, npc))
		{
			death_watch_insane_miner_action_attackSpeaker (player, npc);

			//-- NPC: You won't help me...no you must...no...arrrrgh!!!
			string_id message = new string_id (c_stringFile, "s_15");
			utils.removeScriptVar (player, "conversation.death_watch_insane_miner.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int death_watch_insane_miner_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The medical droid upstairs? Yes! The medical droid has the antidote. I need it...I must have some before it is to late.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Don't worry I will go get you some right now.
	if (response == "s_16968d33")
	{
		//-- [NOTE] 
		if (death_watch_insane_miner_condition__defaultCondition (player, npc))
		{
			death_watch_insane_miner_action_getMedicine (player, npc);

			//-- NPC: Please hurry! I don't know how much longer I can hold onto my sanity. If I don't get that medicine quick I am going to lose control.
			string_id message = new string_id (c_stringFile, "s_2ff0df5");
			utils.removeScriptVar (player, "conversation.death_watch_insane_miner.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have some of the medicine on me.
	if (response == "s_dad50efa")
	{
		//-- [NOTE] 
		if (death_watch_insane_miner_condition__defaultCondition (player, npc))
		{
			//-- NPC: Please, you must give it to me. Without that medicine I will surely die!
			string_id message = new string_id (c_stringFile, "s_ea390b92");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Here you go.
			boolean hasResponse0 = false;
			if (death_watch_insane_miner_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_829888a9");

				utils.setScriptVar (player, "conversation.death_watch_insane_miner.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.death_watch_insane_miner.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't think so! Sorry, but you need to be taken down.
	if (response == "s_4fe1bc67")
	{
		//-- [NOTE] 
		if (death_watch_insane_miner_condition__defaultCondition (player, npc))
		{
			death_watch_insane_miner_action_attackSpeaker (player, npc);

			//-- NPC: You won't help me...no you must...no...arrrrgh!!!
			string_id message = new string_id (c_stringFile, "s_99f3d3be");
			utils.removeScriptVar (player, "conversation.death_watch_insane_miner.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int death_watch_insane_miner_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Please, you must give it to me. Without that medicine I will surely die!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Here you go.
	if (response == "s_829888a9")
	{
		death_watch_insane_miner_action_removeMedicine (player, npc);

		//-- [NOTE] 
		if (death_watch_insane_miner_condition__defaultCondition (player, npc))
		{
			death_watch_insane_miner_action_giveBattery (player, npc);

			//-- NPC: Thank you, thank you. You have saved my life. I should be fine with just a little rest. Please take this back to my foreman. I took it in my dementia.
			string_id message = new string_id (c_stringFile, "s_e810685f");
			utils.removeScriptVar (player, "conversation.death_watch_insane_miner.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int death_watch_insane_miner_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You are back. Please tell me that you have the medicine. I am really struggling to keep my sanity right now and that medicine is my only hope.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry but I don't have it yet. I will come back when I get it.
	if (response == "s_7c83bd45")
	{
		//-- [NOTE] 
		if (death_watch_insane_miner_condition__defaultCondition (player, npc))
		{
			//-- NPC: You must hurry! I cannot hold onto my sanity for very much longer.
			string_id message = new string_id (c_stringFile, "s_2efed805");
			utils.removeScriptVar (player, "conversation.death_watch_insane_miner.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes I have it. Here you go.
	if (response == "s_42a2316b")
	{
		//-- [NOTE] 
		if (death_watch_insane_miner_condition__defaultCondition (player, npc))
		{
			death_watch_insane_miner_action_giveBattery (player, npc);

			//-- NPC: Thank you, thank you. You have saved my life. I should be fine with just a little rest. Please take this back to my foreman. I took it in my dementia.
			string_id message = new string_id (c_stringFile, "s_21");
			utils.removeScriptVar (player, "conversation.death_watch_insane_miner.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You are a danger to everyone and need to be taken down.
	if (response == "s_23")
	{
		//-- [NOTE] 
		if (death_watch_insane_miner_condition__defaultCondition (player, npc))
		{
			death_watch_insane_miner_action_attackSpeaker (player, npc);

			//-- NPC: You won't help me...no you must...no...arrrrgh!!!
			string_id message = new string_id (c_stringFile, "s_25");
			utils.removeScriptVar (player, "conversation.death_watch_insane_miner.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.death_watch_insane_miner");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.death_watch_insane_miner");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (death_watch_insane_miner_condition_startMission (player, npc))
	{
		//-- NPC: My head! I cannot think straight. Please get me some help before I hurt anyone...it has to be alum sickness!
		string_id message = new string_id (c_stringFile, "s_21632dd");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Alum sickness? What can I do to help you?
		boolean hasResponse0 = false;
		if (death_watch_insane_miner_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: You are a danger to everyone and need to be taken down.
		boolean hasResponse1 = false;
		if (death_watch_insane_miner_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_3fb7180e");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_7c3e9069");

			utils.setScriptVar (player, "conversation.death_watch_insane_miner.branchId", 1);

			npcStartConversation (player, npc, "death_watch_insane_miner", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (death_watch_insane_miner_condition_alreadyAccepted (player, npc))
	{
		//-- NPC: You are back. Please tell me that you have the medicine. I am really struggling to keep my sanity right now and that medicine is my only hope.
		string_id message = new string_id (c_stringFile, "s_ce67a12e");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Sorry but I don't have it yet. I will come back when I get it.
		boolean hasResponse0 = false;
		if (death_watch_insane_miner_condition_noMedicine (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Yes I have it. Here you go.
		boolean hasResponse1 = false;
		if (death_watch_insane_miner_condition_checkMedicine (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: You are a danger to everyone and need to be taken down.
		boolean hasResponse2 = false;
		if (death_watch_insane_miner_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_7c83bd45");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_42a2316b");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_23");

			utils.setScriptVar (player, "conversation.death_watch_insane_miner.branchId", 8);

			npcStartConversation (player, npc, "death_watch_insane_miner", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (death_watch_insane_miner_condition_noQuest (player, npc))
	{
		//-- NPC: You cannot help me! No one can help me...go away!
		string_id message = new string_id (c_stringFile, "s_c2b7bf76");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "death_watch_insane_miner")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.death_watch_insane_miner.branchId");

	if (branchId == 1 && death_watch_insane_miner_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && death_watch_insane_miner_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && death_watch_insane_miner_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && death_watch_insane_miner_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.death_watch_insane_miner.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

