// ======================================================================
//
// prof_medic_21_larence.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/prof_medic_21_larence";

// ======================================================================
// Script Conditions
// ======================================================================

boolean prof_medic_21_larence_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean prof_medic_21_larence_condition_playerOnFirstStep (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "prof_medic_21", "talktolarence");
}

// ----------------------------------------------------------------------

boolean prof_medic_21_larence_condition_playercompletedTask (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedTask(player, "prof_medic_21", "talktolarence");
}

// ----------------------------------------------------------------------

boolean prof_medic_21_larence_condition_playerOnLastStep (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "prof_medic_21", "getreward");
}

// ----------------------------------------------------------------------

boolean prof_medic_21_larence_condition_playerGotReward (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedTask(player, "prof_medic_21", "getreward");
}

// ======================================================================
// Script Actions
// ======================================================================

void prof_medic_21_larence_action_giveFirstSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "prof_medic_21_larence");
}

// ----------------------------------------------------------------------

void prof_medic_21_larence_action_giveRewardSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "prof_medic_21_reward");
}

// ----------------------------------------------------------------------

void prof_medic_21_larence_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int prof_medic_21_larence_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: How are they doing, doctor?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found out what was infecting them and they will be fine.
	if (response == "s_19")
	{
		//-- [NOTE] 
		if (prof_medic_21_larence_condition__defaultCondition (player, npc))
		{
			//-- NPC: Thank goodness! It's tough being out here, you know. What do I need to do to care for them now?
			string_id message = new string_id (c_stringFile, "s_21");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Let them both rest for about a week until they are well again.
			boolean hasResponse0 = false;
			if (prof_medic_21_larence_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_23");

				utils.setScriptVar (player, "conversation.prof_medic_21_larence.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.prof_medic_21_larence.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_medic_21_larence_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Thank goodness! It's tough being out here, you know. What do I need to do to care for them now?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Let them both rest for about a week until they are well again.
	if (response == "s_23")
	{
		//-- [NOTE] 
		if (prof_medic_21_larence_condition__defaultCondition (player, npc))
		{
			prof_medic_21_larence_action_giveRewardSignal (player, npc);

			//-- NPC: I will. Thank you very much for your help. I didn't have all the cash that I needed for this house call, but I hope that you will accept this to cover the remainder of the cost.
			string_id message = new string_id (c_stringFile, "s_24");
			utils.removeScriptVar (player, "conversation.prof_medic_21_larence.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_medic_21_larence_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you the doctor that I sent for?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm here to help. What's the problem?
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (prof_medic_21_larence_condition__defaultCondition (player, npc))
		{
			//-- NPC: My son Jowres and daughter Mia were attacked by those beasts outside. Both of them are sick and need medical attention!
			string_id message = new string_id (c_stringFile, "s_22");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will go to them now. Where are they?
			boolean hasResponse0 = false;
			if (prof_medic_21_larence_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_15");

				utils.setScriptVar (player, "conversation.prof_medic_21_larence.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.prof_medic_21_larence.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_medic_21_larence_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: My son Jowres and daughter Mia were attacked by those beasts outside. Both of them are sick and need medical attention!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will go to them now. Where are they?
	if (response == "s_15")
	{
		//-- [NOTE] 
		if (prof_medic_21_larence_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "implore");

			prof_medic_21_larence_action_giveFirstSignal (player, npc);

			//-- NPC: Both are in their rooms. Mia is much worse off. Please see her first.
			string_id message = new string_id (c_stringFile, "s_25");
			utils.removeScriptVar (player, "conversation.prof_medic_21_larence.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.prof_medic_21_larence");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Larence Zaprin");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Larence Zaprin");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.prof_medic_21_larence");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (prof_medic_21_larence_condition_playerGotReward (player, npc))
	{
		doAnimationAction (npc, "thank");

		prof_medic_21_larence_action_facePlayer (player, npc);

		//-- NPC: Thank you so much!
		string_id message = new string_id (c_stringFile, "s_26");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (prof_medic_21_larence_condition_playerOnLastStep (player, npc))
	{
		prof_medic_21_larence_action_facePlayer (player, npc);

		//-- NPC: How are they doing, doctor?
		string_id message = new string_id (c_stringFile, "s_17");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I found out what was infecting them and they will be fine.
		boolean hasResponse0 = false;
		if (prof_medic_21_larence_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_19");

			utils.setScriptVar (player, "conversation.prof_medic_21_larence.branchId", 2);

			npcStartConversation (player, npc, "prof_medic_21_larence", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (prof_medic_21_larence_condition_playercompletedTask (player, npc))
	{
		prof_medic_21_larence_action_facePlayer (player, npc);

		//-- NPC: Please do what you can to to save them.
		string_id message = new string_id (c_stringFile, "s_10");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (prof_medic_21_larence_condition_playerOnFirstStep (player, npc))
	{
		prof_medic_21_larence_action_facePlayer (player, npc);

		//-- NPC: Are you the doctor that I sent for?
		string_id message = new string_id (c_stringFile, "s_18");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm here to help. What's the problem?
		boolean hasResponse0 = false;
		if (prof_medic_21_larence_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20");

			utils.setScriptVar (player, "conversation.prof_medic_21_larence.branchId", 6);

			npcStartConversation (player, npc, "prof_medic_21_larence", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (prof_medic_21_larence_condition__defaultCondition (player, npc))
	{
		prof_medic_21_larence_action_facePlayer (player, npc);

		//-- NPC: This is awful! Who will help my family?
		string_id message = new string_id (c_stringFile, "s_28");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "prof_medic_21_larence")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.prof_medic_21_larence.branchId");

	if (branchId == 2 && prof_medic_21_larence_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && prof_medic_21_larence_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && prof_medic_21_larence_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && prof_medic_21_larence_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.prof_medic_21_larence.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

