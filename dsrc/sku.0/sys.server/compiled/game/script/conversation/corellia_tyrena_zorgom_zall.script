// ======================================================================
//
// corellia_tyrena_zorgom_zall.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/corellia_tyrena_zorgom_zall";

// ======================================================================
// Script Conditions
// ======================================================================

boolean corellia_tyrena_zorgom_zall_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean corellia_tyrena_zorgom_zall_condition_completeMissing (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "corellia_tyrena_missing_persons");
}

// ----------------------------------------------------------------------

boolean corellia_tyrena_zorgom_zall_condition_completeForgotten (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "corellia_tyrena_forgotten_child");
}

// ----------------------------------------------------------------------

boolean corellia_tyrena_zorgom_zall_condition_onForgottenReturn (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "corellia_tyrena_forgotten_child", "forgotten_return_zorgom");
}

// ----------------------------------------------------------------------

boolean corellia_tyrena_zorgom_zall_condition_onForgotten (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "corellia_tyrena_forgotten_child", "forgotten_child_talk_gordo") ||
	groundquests.isTaskActive(player, "corellia_tyrena_forgotten_child", "forgotten_child_slice_admin_term") ||
	groundquests.isTaskActive(player, "corellia_tyrena_forgotten_child", "get_info_from_guards") ||
	groundquests.isTaskActive(player, "corellia_tyrena_forgotten_child", "forgotten_return_to_gordo") ||
	groundquests.isTaskActive(player, "corellia_tyrena_forgotten_child", "forgotten_get_location") ||
	groundquests.isTaskActive(player, "corellia_tyrena_forgotten_child", "kill_neekas_guards") ||
	groundquests.isTaskActive(player, "corellia_tyrena_forgotten_child", "forgotten_talk_neeka"));	
}

// ======================================================================
// Script Actions
// ======================================================================

void corellia_tyrena_zorgom_zall_action_signalForgottenReturn (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "forgotten_return_zorgom");
}

// ----------------------------------------------------------------------

void corellia_tyrena_zorgom_zall_action_grantForgotten (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "corellia_tyrena_forgotten_child");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int corellia_tyrena_zorgom_zall_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I can't believe you found her. You are always going to be remembered. You have done us a great service.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure. Glad to help.
	if (response == "s_15")
	{
		doAnimationAction (player, "thumb_up");

		//-- [NOTE] 
		if (corellia_tyrena_zorgom_zall_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			corellia_tyrena_zorgom_zall_action_signalForgottenReturn (player, npc);

			//-- NPC: Maybe you can help me with the wife now? Eh, nevermind.
			string_id message = new string_id (c_stringFile, "s_16");
			utils.removeScriptVar (player, "conversation.corellia_tyrena_zorgom_zall.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_zorgom_zall_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Did you find Neeka?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Neeka! Neeka, right. That's who I am looking for.
	if (response == "s_12")
	{
		doAnimationAction (player, "smack_self");

		//-- [NOTE] 
		if (corellia_tyrena_zorgom_zall_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "implore");

			//-- NPC: Please find her!
			string_id message = new string_id (c_stringFile, "s_13");
			utils.removeScriptVar (player, "conversation.corellia_tyrena_zorgom_zall.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_zorgom_zall_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I saw you talking to Kyran. He's a good guy. If he trusts you, then I guess I can too.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: He told me about some slavers near here. I am going to check it out.
	if (response == "s_19")
	{
		doAnimationAction (player, "rub_chin_thoughtful");

		//-- [NOTE] 
		if (corellia_tyrena_zorgom_zall_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "implore");

			//-- NPC: You are? Please could look for my daughter? Her name is Neeka. I am sure she is very scared there all alone.
			string_id message = new string_id (c_stringFile, "s_21");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You escaped without your child?
			boolean hasResponse0 = false;
			if (corellia_tyrena_zorgom_zall_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_23");

				utils.setScriptVar (player, "conversation.corellia_tyrena_zorgom_zall.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_zorgom_zall.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_zorgom_zall_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You are? Please could look for my daughter? Her name is Neeka. I am sure she is very scared there all alone.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You escaped without your child?
	if (response == "s_23")
	{
		doAnimationAction (player, "wtf");

		//-- [NOTE] 
		if (corellia_tyrena_zorgom_zall_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slump_head");

			//-- NPC: I know. I know! I didn't mean to. I thought my wife had her, and she thought I had her. Please you must find her. I don't think I can live knowing what I did. See if you can find Gordo Zek in the slave pens. He always knew what was going on.
			string_id message = new string_id (c_stringFile, "s_25");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will look for her.
			boolean hasResponse0 = false;
			if (corellia_tyrena_zorgom_zall_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_27");

				utils.setScriptVar (player, "conversation.corellia_tyrena_zorgom_zall.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_zorgom_zall.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_zorgom_zall_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I know. I know! I didn't mean to. I thought my wife had her, and she thought I had her. Please you must find her. I don't think I can live knowing what I did. See if you can find Gordo Zek in the slave pens. He always knew what was going on.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will look for her.
	if (response == "s_27")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (corellia_tyrena_zorgom_zall_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "thank");

			corellia_tyrena_zorgom_zall_action_grantForgotten (player, npc);

			//-- NPC: Oh, thank you!
			string_id message = new string_id (c_stringFile, "s_29");
			utils.removeScriptVar (player, "conversation.corellia_tyrena_zorgom_zall.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.corellia_tyrena_zorgom_zall");

    setCondition (self, CONDITION_CONVERSABLE);
    setCondition (self, CONDITION_INTERESTING);
    setInvulnerable (self, true);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
    setCondition (self, CONDITION_CONVERSABLE);
    setCondition (self, CONDITION_INTERESTING);
    setInvulnerable (self, true);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

    faceTo( self, player );

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.corellia_tyrena_zorgom_zall");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (corellia_tyrena_zorgom_zall_condition_completeForgotten (player, npc))
	{
		doAnimationAction (npc, "thank");

		//-- NPC: Thank you so much for rescuing Neeka. We'll never forget you.
		string_id message = new string_id (c_stringFile, "s_31");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_tyrena_zorgom_zall_condition_onForgottenReturn (player, npc))
	{
		doAnimationAction (npc, "celebrate");

		//-- NPC: I can't believe you found her. You are always going to be remembered. You have done us a great service.
		string_id message = new string_id (c_stringFile, "s_14");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Sure. Glad to help.
		boolean hasResponse0 = false;
		if (corellia_tyrena_zorgom_zall_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_15");

			utils.setScriptVar (player, "conversation.corellia_tyrena_zorgom_zall.branchId", 2);

			npcStartConversation (player, npc, "corellia_tyrena_zorgom_zall", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_tyrena_zorgom_zall_condition_onForgotten (player, npc))
	{
		//-- NPC: Did you find Neeka?
		string_id message = new string_id (c_stringFile, "s_11");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Neeka! Neeka, right. That's who I am looking for.
		boolean hasResponse0 = false;
		if (corellia_tyrena_zorgom_zall_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_12");

			utils.setScriptVar (player, "conversation.corellia_tyrena_zorgom_zall.branchId", 4);

			npcStartConversation (player, npc, "corellia_tyrena_zorgom_zall", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_tyrena_zorgom_zall_condition_completeMissing (player, npc))
	{
		doAnimationAction (npc, "explain");

		//-- NPC: I saw you talking to Kyran. He's a good guy. If he trusts you, then I guess I can too.
		string_id message = new string_id (c_stringFile, "s_17");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: He told me about some slavers near here. I am going to check it out.
		boolean hasResponse0 = false;
		if (corellia_tyrena_zorgom_zall_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_19");

			utils.setScriptVar (player, "conversation.corellia_tyrena_zorgom_zall.branchId", 6);

			npcStartConversation (player, npc, "corellia_tyrena_zorgom_zall", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_tyrena_zorgom_zall_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "explain");

		//-- NPC: I'm sorry friend, but I just don't know you well enough to trust you. Maybe you should talk to Kyran.
		string_id message = new string_id (c_stringFile, "s_32");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "corellia_tyrena_zorgom_zall")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.corellia_tyrena_zorgom_zall.branchId");

	if (branchId == 2 && corellia_tyrena_zorgom_zall_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && corellia_tyrena_zorgom_zall_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && corellia_tyrena_zorgom_zall_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && corellia_tyrena_zorgom_zall_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && corellia_tyrena_zorgom_zall_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.corellia_tyrena_zorgom_zall.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

