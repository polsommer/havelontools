// ======================================================================
//
// victor_questn_capitol.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/victor_questn_capitol";

// ======================================================================
// Script Conditions
// ======================================================================

boolean victor_questn_capitol_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean victor_questn_capitol_condition_NegaObj (obj_id player, obj_id npc)
{
	if ( hasObjVar(npc, "bestine.electionStarted") )
	{
		int electionNum = getIntObjVar(npc, "bestine.electionStarted");
		if ( hasObjVar(player, "bestine.negativeq" ) )
		{
			int electionPlayerIsIn = getIntObjVar(player, "bestine.negativeq");
			if ( electionPlayerIsIn >= electionNum)
			{
				if ( !hasObjVar(player, "bestine.victor_capitol_noroom") ) 
				{
					return true;
				}				
			}
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean victor_questn_capitol_condition_alreadyHasEvidence (obj_id player, obj_id npc)
{
	return utils.playerHasItemByTemplate(player, "object/tangible/loot/quest/victor_questn_hlist.iff");
}

// ----------------------------------------------------------------------

boolean victor_questn_capitol_condition_hasNoroomObjvar (obj_id player, obj_id npc)
{
	if ( hasObjVar(npc, "bestine.electionStarted") )
	{
		int electionNum = getIntObjVar(npc, "bestine.electionStarted");
		if ( hasObjVar(player, "bestine.negativeq" ) )
		{
			int electionPlayerIsIn = getIntObjVar(player, "bestine.negativeq");
			if ( electionPlayerIsIn >= electionNum)
			{
				if ( hasObjVar(player, "bestine.victor_capitol_noroom") ) 
				{
					return true;
				}				
			}
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean victor_questn_capitol_condition_nonoffice (obj_id player, obj_id npc)
{
	return hasObjVar(npc, "bestine.electionEnded");
}

// ----------------------------------------------------------------------

boolean victor_questn_capitol_condition_noInventorySpace (obj_id player, obj_id npc)
{
	boolean hasNoInvRoom = false;
	obj_id playerInv = utils.getInventoryContainer(player);
	if ( isIdValid(playerInv) )
	{
		int free_space = getVolumeFree(playerInv);
		if (free_space < 1 )
		{
			hasNoInvRoom = true;
		}
	}
	return hasNoInvRoom;
}

// ======================================================================
// Script Actions
// ======================================================================

void victor_questn_capitol_action_noroom (obj_id player, obj_id npc)
{
	setObjVar( player, "bestine.victor_capitol_noroom", true);
}

// ----------------------------------------------------------------------

void victor_questn_capitol_action_giveList (obj_id player, obj_id npc)
{
	if ( hasObjVar( player, "bestine.victor_capitol_noroom") )
	{
		removeObjVar( player, "bestine.victor_capitol_noroom");
	}
	
	string HLIST = "object/tangible/loot/quest/victor_questn_hlist.iff";
	if (isIdValid(player))
	{
	 	obj_id playerInv = getObjectInSlot( player, "inventory" ); 
		if(isIdValid(playerInv)) 
		{
			obj_id item = createObject( HLIST, playerInv, "" );
			if(isIdValid(item))
			{
				return;
	 		}
		}
	}
	return;
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int victor_questn_capitol_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah, you're back. Do you have enough room this time to get your precious evidence?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I do.
	if (response == "s_90ec63e0")
	{
		//-- [NOTE] 
		if (!victor_questn_capitol_condition_noInventorySpace (player, npc))
		{
			victor_questn_capitol_action_giveList (player, npc);

			//-- NPC: And here you are. Now... get lost.
			string_id message = new string_id (c_stringFile, "s_6ddb06b2");
			utils.removeScriptVar (player, "conversation.victor_questn_capitol.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (victor_questn_capitol_condition_noInventorySpace (player, npc))
		{
			//-- NPC: No, you don't. Again, come back when you do. And next time, you'd better not waste my time.
			string_id message = new string_id (c_stringFile, "s_99ef56dc");
			utils.removeScriptVar (player, "conversation.victor_questn_capitol.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, not yet.
	if (response == "s_da9a29e9")
	{
		//-- [NOTE] 
		if (victor_questn_capitol_condition__defaultCondition (player, npc))
		{
			//-- NPC: Wasting my time is not a smart idea...
			string_id message = new string_id (c_stringFile, "s_42deb08e");
			utils.removeScriptVar (player, "conversation.victor_questn_capitol.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int victor_questn_capitol_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You're not supposed to be hanging around here, citizen. Move along.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need your help...
	if (response == "s_496168b6")
	{
		//-- [NOTE] 
		if (victor_questn_capitol_condition__defaultCondition (player, npc))
		{
			//-- NPC: Look-oh? Looking for evidence, are you? I may be able to help with that. It would be a perfect opportunity to get even with that Victor fellow. Never mind the details. Here, you might find this... 'list' entertaining. Be sure to say that you 'found' it.
			string_id message = new string_id (c_stringFile, "s_ce8d51fb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you.
			boolean hasResponse0 = false;
			if (victor_questn_capitol_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b9b27823");

				utils.setScriptVar (player, "conversation.victor_questn_capitol.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.victor_questn_capitol.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Fine. I'm leaving.
	if (response == "s_e50dbfc0")
	{
		//-- [NOTE] 
		if (victor_questn_capitol_condition__defaultCondition (player, npc))
		{
			//-- NPC: And it would be best, for your health, not to come back.
			string_id message = new string_id (c_stringFile, "s_11cdd7b1");
			utils.removeScriptVar (player, "conversation.victor_questn_capitol.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int victor_questn_capitol_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Look-oh? Looking for evidence, are you? I may be able to help with that. It would be a perfect opportunity to get even with that Victor fellow. Never mind the details. Here, you might find this... 'list' entertaining. Be sure to say that you 'found' it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.
	if (response == "s_b9b27823")
	{
		//-- [NOTE] 
		if (!victor_questn_capitol_condition_noInventorySpace (player, npc))
		{
			victor_questn_capitol_action_giveList (player, npc);

			//-- NPC: Move along.
			string_id message = new string_id (c_stringFile, "s_d638d2ec");
			utils.removeScriptVar (player, "conversation.victor_questn_capitol.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (victor_questn_capitol_condition_noInventorySpace (player, npc))
		{
			victor_questn_capitol_action_noroom (player, npc);

			//-- NPC: I could help you... if you had enough room. Come back when you do and we'll talk.
			string_id message = new string_id (c_stringFile, "s_d2df4599");
			utils.removeScriptVar (player, "conversation.victor_questn_capitol.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.victor_questn_capitol");

	setCondition (self, CONDITION_CONVERSABLE);
	setName(self, "TL-017");
	factions.setFaction (self, "Imperial");

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setName(self, "TL-017");
	factions.setFaction (self, "Imperial");

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.victor_questn_capitol");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (victor_questn_capitol_condition_nonoffice (player, npc))
	{
		//-- NPC: You'd be wise to join the Empire. The Rebel Alliance and its members have spiraled out of control. We're going to stomp them out of existence.
		string_id message = new string_id (c_stringFile, "s_c1bf1629");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (victor_questn_capitol_condition_alreadyHasEvidence (player, npc))
	{
		//-- NPC: Move along... oh, it's you again. Why haven't you used that list I gave... er... I mean, that you found... against Victor? Arrrgh! I was in a good mood after giving that to you, but now I'm upset again. Just go take care of it already.
		string_id message = new string_id (c_stringFile, "s_f688af52");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (victor_questn_capitol_condition_hasNoroomObjvar (player, npc))
	{
		//-- NPC: Ah, you're back. Do you have enough room this time to get your precious evidence?
		string_id message = new string_id (c_stringFile, "s_f62e5a7d");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, I do.
		boolean hasResponse0 = false;
		if (victor_questn_capitol_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No, not yet.
		boolean hasResponse1 = false;
		if (victor_questn_capitol_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_90ec63e0");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_da9a29e9");

			utils.setScriptVar (player, "conversation.victor_questn_capitol.branchId", 3);

			npcStartConversation (player, npc, "victor_questn_capitol", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (victor_questn_capitol_condition_NegaObj (player, npc))
	{
		//-- NPC: You're not supposed to be hanging around here, citizen. Move along.
		string_id message = new string_id (c_stringFile, "s_4d313a");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I need your help...
		boolean hasResponse0 = false;
		if (victor_questn_capitol_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Fine. I'm leaving.
		boolean hasResponse1 = false;
		if (victor_questn_capitol_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_496168b6");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_e50dbfc0");

			utils.setScriptVar (player, "conversation.victor_questn_capitol.branchId", 7);

			npcStartConversation (player, npc, "victor_questn_capitol", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (victor_questn_capitol_condition__defaultCondition (player, npc))
	{
		//-- NPC: There is an election going on at the capitol. You should participate. Otherwise... move along, citizen.
		string_id message = new string_id (c_stringFile, "s_7dcdb445");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "victor_questn_capitol")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.victor_questn_capitol.branchId");

	if (branchId == 3 && victor_questn_capitol_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && victor_questn_capitol_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && victor_questn_capitol_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.victor_questn_capitol.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

