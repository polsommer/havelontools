// ======================================================================
//
// npe_scout_questgiver.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.npe;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/npe_scout_questgiver";

// ======================================================================
// Script Conditions
// ======================================================================

boolean npe_scout_questgiver_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean npe_scout_questgiver_condition_playerCompletedScout1 (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "npe_scout_1");
}

// ----------------------------------------------------------------------

boolean npe_scout_questgiver_condition_playerOnScout1 (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "npe_scout_1");
}

// ----------------------------------------------------------------------

boolean npe_scout_questgiver_condition_playerKilledCats (obj_id player, obj_id npc)
{
		return groundquests.hasCompletedTask(player, "npe_scout_1", "encounter");
}

// ----------------------------------------------------------------------

boolean npe_scout_questgiver_condition_playerOnScout1aWithHide (obj_id player, obj_id npc)
{
	obj_id hide = utils.getItemPlayerHasByTemplate(player, "object/resource_container/organic_leathery_hide.iff");
	
	return (groundquests.isQuestActive(player, "npe_scout_1a")&&(hide != null));
}

// ----------------------------------------------------------------------

boolean npe_scout_questgiver_condition_playerOnScout1aWithoutHide (obj_id player, obj_id npc)
{
	obj_id hide = utils.getItemPlayerHasByTemplate(player, "object/resource_container/organic_leathery_hide.iff");
	
	return (groundquests.isQuestActive(player, "npe_scout_1a")&&(hide == null));
}

// ----------------------------------------------------------------------

boolean npe_scout_questgiver_condition_hasPointer (obj_id player, obj_id npc)
{
	return hasObjVar(player, "npe.finishedTemplate");
}

// ======================================================================
// Script Actions
// ======================================================================

void npe_scout_questgiver_action_faceplayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void npe_scout_questgiver_action_giveScout1Quest (obj_id player, obj_id npc)
{
	groundquests.requestGrantQuest(player, "npe_scout_1");
	groundquests.sendSignal(player, "talked_to_raylen");
}

// ----------------------------------------------------------------------

void npe_scout_questgiver_action_signalScout1Reward (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_scout1_reward");
	groundquests.sendSignal(player, "finished_raylen");
	groundquests.grantQuest(player, "npe_pointer_secretary");
	npe.sendDelayed3poPopup(player, 3, 11, "sound/c3po_29.snd", "npe", "pop_credits", "npe.credits");
}

// ----------------------------------------------------------------------

void npe_scout_questgiver_action_SignalScout1RewardAndCompleteS1a (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_scout1_reward");
	groundquests.clearQuest(player, "npe_scout_1a");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int npe_scout_questgiver_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah, I see you have the hide that I asked for. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, here they are.
	if (response == "s_42")
	{
		//-- [NOTE] 
		if (npe_scout_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Great! Let me take a look at them...hmm...as I expected. Bocatts! They can be dangerous customers. They are native to Tatooine. I wonder what they are doing in cages on our station? Okay, I think I have enough to go on. Thank you for your help.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm happy to help.
			boolean hasResponse0 = false;
			if (npe_scout_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				utils.setScriptVar (player, "conversation.npe_scout_questgiver.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_scout_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_scout_questgiver_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Great! Let me take a look at them...hmm...as I expected. Bocatts! They can be dangerous customers. They are native to Tatooine. I wonder what they are doing in cages on our station? Okay, I think I have enough to go on. Thank you for your help.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm happy to help.
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (npe_scout_questgiver_condition__defaultCondition (player, npc))
		{
			npe_scout_questgiver_action_SignalScout1RewardAndCompleteS1a (player, npc);

			//-- NPC: Here, please take this. We'll send someone down to get the medic immediately.
			string_id message = new string_id (c_stringFile, "s_64");
			utils.removeScriptVar (player, "conversation.npe_scout_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_scout_questgiver_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Have you found out what's going on?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: He was jumped by some kind of creatures that got out of their cages.
	if (response == "s_104")
	{
		//-- [NOTE] 
		if (npe_scout_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: You wouldn't happen to have some hides from these creatures, would you? I'll need it to know what we are dealing with in order to figure out what we need to do next.
			string_id message = new string_id (c_stringFile, "s_106");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I happen to have a few hides here.
			boolean hasResponse0 = false;
			if (npe_scout_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_69");

				utils.setScriptVar (player, "conversation.npe_scout_questgiver.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_scout_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I haven't been there yet.
	if (response == "s_128")
	{
		//-- [NOTE] 
		if (npe_scout_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: I'd like to impress upon you the importance of this. Please go take care of this now.
			string_id message = new string_id (c_stringFile, "s_130");
			utils.removeScriptVar (player, "conversation.npe_scout_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_scout_questgiver_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You wouldn't happen to have some hides from these creatures, would you? I'll need it to know what we are dealing with in order to figure out what we need to do next.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I happen to have a few hides here.
	if (response == "s_69")
	{
		//-- [NOTE] 
		if (npe_scout_questgiver_condition__defaultCondition (player, npc))
		{
			npe_scout_questgiver_action_signalScout1Reward (player, npc);

			//-- NPC: Great! Let me take a look at them...hmm...as I expected. Bocatts! They can be dangerous customers. They are native to Tatooine. I wonder what they are doing in cages on our station? Okay, I think I have enough to go on. Thank you for your help.
			string_id message = new string_id (c_stringFile, "s_71");
			utils.removeScriptVar (player, "conversation.npe_scout_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_scout_questgiver_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello. You appear to be capable, %TU. I need some help. Would you be willing to assist me? I'll pay you, of course.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd be happy to help.
	if (response == "s_144")
	{
		//-- [NOTE] 
		if (npe_scout_questgiver_condition__defaultCondition (player, npc))
		{
			npe_scout_questgiver_action_giveScout1Quest (player, npc);

			//-- NPC: Excellent. Please go down to the cargo hold and see if you can find one of our guards. We need to know why he hasn't checked in. Take the elevator down one level. The cargo hold should be nearby.
			string_id message = new string_id (c_stringFile, "s_146");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll go down there right now.
			boolean hasResponse0 = false;
			if (npe_scout_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_148");

				utils.setScriptVar (player, "conversation.npe_scout_questgiver.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_scout_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can you tell me more about what I need to do?
	if (response == "s_134")
	{
		//-- [NOTE] 
		if (npe_scout_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: One of the guards went to check a shipment of something that is supposed to be dangerous and hasn't returned. I'm worried about him.
			string_id message = new string_id (c_stringFile, "s_136");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: In that case, I'd be happy to go find the guard.
			boolean hasResponse0 = false;
			if (npe_scout_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No way. I don't like 'dangerous.'
			boolean hasResponse1 = false;
			if (npe_scout_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_138");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				utils.setScriptVar (player, "conversation.npe_scout_questgiver.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_scout_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_scout_questgiver_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent. Please go down to the cargo hold and see if you can find one of our guards. We need to know why he hasn't checked in. Take the elevator down one level. The cargo hold should be nearby.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll go down there right now.
	if (response == "s_148")
	{
		//-- [NOTE] 
		if (npe_scout_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Thank you. 
			string_id message = new string_id (c_stringFile, "s_150");
			utils.removeScriptVar (player, "conversation.npe_scout_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_scout_questgiver_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: One of the guards went to check a shipment of something that is supposed to be dangerous and hasn't returned. I'm worried about him.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: In that case, I'd be happy to go find the guard.
	if (response == "s_138")
	{
		//-- [NOTE] 
		if (npe_scout_questgiver_condition__defaultCondition (player, npc))
		{
			npe_scout_questgiver_action_giveScout1Quest (player, npc);

			//-- NPC: Excellent. Please go down to the cargo hold and see if you can find one of our guards. We need to know why he hasn't checked in. Take the elevator down one level. The cargo hold should be nearby.
			string_id message = new string_id (c_stringFile, "s_146");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll go down there right now.
			boolean hasResponse0 = false;
			if (npe_scout_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_148");

				utils.setScriptVar (player, "conversation.npe_scout_questgiver.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_scout_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No way. I don't like 'dangerous.'
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (npe_scout_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: I hope someone else has more bravery than you.
			string_id message = new string_id (c_stringFile, "s_142");
			utils.removeScriptVar (player, "conversation.npe_scout_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_scout_questgiver_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm sorry. Can I help you with something?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, sorry to bother you.
	if (response == "s_65")
	{
		//-- [NOTE] 
		if (npe_scout_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: No bother. Take care.
			string_id message = new string_id (c_stringFile, "s_67");
			utils.removeScriptVar (player, "conversation.npe_scout_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.npe_scout_questgiver");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Raylen Finn");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Raylen Finn");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.npe_scout_questgiver");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (npe_scout_questgiver_condition_playerCompletedScout1 (player, npc))
	{
		npe_scout_questgiver_action_faceplayer (player, npc);

		//-- NPC: Thank you for your help. 
		string_id message = new string_id (c_stringFile, "s_88");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_scout_questgiver_condition_playerOnScout1aWithHide (player, npc))
	{
		npe_scout_questgiver_action_faceplayer (player, npc);

		//-- NPC: Ah, I see you have the hide that I asked for. 
		string_id message = new string_id (c_stringFile, "s_40");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, here they are.
		boolean hasResponse0 = false;
		if (npe_scout_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_42");

			utils.setScriptVar (player, "conversation.npe_scout_questgiver.branchId", 2);

			npcStartConversation (player, npc, "npe_scout_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_scout_questgiver_condition_playerOnScout1aWithoutHide (player, npc))
	{
		npe_scout_questgiver_action_faceplayer (player, npc);

		//-- NPC: Please go collect some hide for me.
		string_id message = new string_id (c_stringFile, "s_68");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_scout_questgiver_condition_playerOnScout1 (player, npc))
	{
		npe_scout_questgiver_action_faceplayer (player, npc);

		//-- NPC: Have you found out what's going on?
		string_id message = new string_id (c_stringFile, "s_102");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: He was jumped by some kind of creatures that got out of their cages.
		boolean hasResponse0 = false;
		if (npe_scout_questgiver_condition_playerKilledCats (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I haven't been there yet.
		boolean hasResponse1 = false;
		if (!npe_scout_questgiver_condition_playerKilledCats (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_104");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_128");

			utils.setScriptVar (player, "conversation.npe_scout_questgiver.branchId", 6);

			npcStartConversation (player, npc, "npe_scout_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_scout_questgiver_condition_hasPointer (player, npc))
	{
		npe_scout_questgiver_action_faceplayer (player, npc);

		//-- NPC: Hello. You appear to be capable, %TU. I need some help. Would you be willing to assist me? I'll pay you, of course.
		string_id message = new string_id (c_stringFile, "s_132");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'd be happy to help.
		boolean hasResponse0 = false;
		if (npe_scout_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Can you tell me more about what I need to do?
		boolean hasResponse1 = false;
		if (npe_scout_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_144");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_134");

			utils.setScriptVar (player, "conversation.npe_scout_questgiver.branchId", 10);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "npe_scout_questgiver", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_scout_questgiver_condition__defaultCondition (player, npc))
	{
		//-- NPC: I'm sorry. Can I help you with something?
		string_id message = new string_id (c_stringFile, "s_62");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: No, sorry to bother you.
		boolean hasResponse0 = false;
		if (npe_scout_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_65");

			utils.setScriptVar (player, "conversation.npe_scout_questgiver.branchId", 15);

			npcStartConversation (player, npc, "npe_scout_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "npe_scout_questgiver")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.npe_scout_questgiver.branchId");

	if (branchId == 2 && npe_scout_questgiver_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && npe_scout_questgiver_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && npe_scout_questgiver_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && npe_scout_questgiver_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && npe_scout_questgiver_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && npe_scout_questgiver_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && npe_scout_questgiver_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && npe_scout_questgiver_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.npe_scout_questgiver.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

