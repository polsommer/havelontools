// ======================================================================
//
// npe_side_dungeon_soldier.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.npe;
include library.skill;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/npe_side_dungeon_soldier";

// ======================================================================
// Script Conditions
// ======================================================================

boolean npe_side_dungeon_soldier_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean npe_side_dungeon_soldier_condition_hasFinishedTemplate (obj_id player, obj_id npc)
{
	return 	hasObjVar(player, "npe.finishedTemplate");
}

// ----------------------------------------------------------------------

boolean npe_side_dungeon_soldier_condition_stillOnTask (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_side_dungeon_soldier", "kill_soldier");
}

// ----------------------------------------------------------------------

boolean npe_side_dungeon_soldier_condition_taskComplete (obj_id player, obj_id npc)
{
	return ((groundquests.isTaskActive(player, "npe_side_dungeon_soldier", "return")) &&
			!(groundquests.hasCompletedQuest(player, "npe_side_dungeon_soldier")));
}

// ----------------------------------------------------------------------

boolean npe_side_dungeon_soldier_condition_canTakeQuest (obj_id player, obj_id npc)
{
	return !groundquests.isQuestActiveOrComplete(player, "npe_side_dungeon_soldier");
}

// ======================================================================
// Script Actions
// ======================================================================

void npe_side_dungeon_soldier_action_giveQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "npe_side_dungeon_soldier");
	npe.giveStationWaypoint(player);
	if(!hasObjVar(player, npe.QUEST_REWORK_VAR))
		setObjVar(player, npe.QUEST_REWORK_VAR, npe.QUEST_ENUMERATION);
}

// ----------------------------------------------------------------------

void npe_side_dungeon_soldier_action_singalEnd (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_side_soldier_signal");
	npe.sendDelayed3poPopup(player, 3, 11, "sound/c3po_29.snd", "npe", "pop_credits", "npe.credits");
}

// ----------------------------------------------------------------------

void npe_side_dungeon_soldier_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int npe_side_dungeon_soldier_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Did you find him?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. I am sorry, but your fears were correct.
	if (response == "s_12")
	{
		//-- [NOTE] 
		if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh, no! What happened?
			string_id message = new string_id (c_stringFile, "s_13");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: All the violence in that place...it drove him crazy. I have his datapad here.
			boolean hasResponse0 = false;
			if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14");

				utils.setScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_side_dungeon_soldier_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh, no! What happened?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: All the violence in that place...it drove him crazy. I have his datapad here.
	if (response == "s_14")
	{
		//-- [NOTE] 
		if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
		{
			npe_side_dungeon_soldier_action_singalEnd (player, npc);

			//-- NPC: I understand. Here, take this for your time.
			string_id message = new string_id (c_stringFile, "s_15");
			utils.removeScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_side_dungeon_soldier_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Have you found him yet?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I'm still looking.
	if (response == "s_17")
	{
		//-- [NOTE] 
		if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
		{
			//-- NPC: Please hurry. I fear the worst.
			string_id message = new string_id (c_stringFile, "s_18");
			utils.removeScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_side_dungeon_soldier_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Please, can you help me?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure, what can I do?
	if (response == "s_24")
	{
		//-- [NOTE] 
		if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
		{
			//-- NPC: My husband was sent to Station Gamma and hasn't returned yet. I fear for his safety. His unit recently engaged in some fighting with the Rak'qua.
			string_id message = new string_id (c_stringFile, "s_26");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Don't worry. I will find him.
			boolean hasResponse0 = false;
			if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why did he go there?
			boolean hasResponse1 = false;
			if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_34");

				utils.setScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_side_dungeon_soldier_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: My husband was sent to Station Gamma and hasn't returned yet. I fear for his safety. His unit recently engaged in some fighting with the Rak'qua.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Don't worry. I will find him.
	if (response == "s_28")
	{
		//-- [NOTE] 
		if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
		{
			//-- NPC: You will need to take the shuttle there. Look for it in Hangarbay 1.
			string_id message = new string_id (c_stringFile, "s_30");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Okay, I will.
			boolean hasResponse0 = false;
			if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				utils.setScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why did he go there?
	if (response == "s_34")
	{
		//-- [NOTE] 
		if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
		{
			//-- NPC: He was investigating some disappearances with his unit. He said he would be back in a day or so, but he hasn't returned.
			string_id message = new string_id (c_stringFile, "s_36");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will find out what happened to him.
			boolean hasResponse0 = false;
			if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_38");

				utils.setScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_side_dungeon_soldier_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You will need to take the shuttle there. Look for it in Hangarbay 1.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Okay, I will.
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
		{
			npe_side_dungeon_soldier_action_giveQuest (player, npc);

			//-- NPC: Thank you. Please hurry!
			string_id message = new string_id (c_stringFile, "s_42");
			utils.removeScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_side_dungeon_soldier_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: He was investigating some disappearances with his unit. He said he would be back in a day or so, but he hasn't returned.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will find out what happened to him.
	if (response == "s_38")
	{
		//-- [NOTE] 
		if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
		{
			//-- NPC: You will need to take the shuttle there. Look for it in Hangarbay 1.
			string_id message = new string_id (c_stringFile, "s_30");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Okay, I will.
			boolean hasResponse0 = false;
			if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				utils.setScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.npe_side_dungeon_soldier");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	//setCondition( self, CONDITION_INTERESTING );
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	setName( self, "Ysanna");
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	//setCondition( self, CONDITION_INTERESTING );
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	setName( self, "Ysanna");
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.npe_side_dungeon_soldier");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (npe_side_dungeon_soldier_condition_taskComplete (player, npc))
	{
		npe_side_dungeon_soldier_action_facePlayer (player, npc);

		//-- NPC: Did you find him?
		string_id message = new string_id (c_stringFile, "s_11");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes. I am sorry, but your fears were correct.
		boolean hasResponse0 = false;
		if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_12");

			utils.setScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId", 1);

			npcStartConversation (player, npc, "npe_side_dungeon_soldier", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_side_dungeon_soldier_condition_stillOnTask (player, npc))
	{
		npe_side_dungeon_soldier_action_facePlayer (player, npc);

		//-- NPC: Have you found him yet?
		string_id message = new string_id (c_stringFile, "s_16");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: No, I'm still looking.
		boolean hasResponse0 = false;
		if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_17");

			utils.setScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId", 4);

			npcStartConversation (player, npc, "npe_side_dungeon_soldier", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!npe_side_dungeon_soldier_condition_hasFinishedTemplate (player, npc))
	{
		npe_side_dungeon_soldier_action_facePlayer (player, npc);

		//-- NPC: Please leave me alone. I need a professional to help me.
		string_id message = new string_id (c_stringFile, "s_40");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_side_dungeon_soldier_condition_canTakeQuest (player, npc))
	{
		npe_side_dungeon_soldier_action_facePlayer (player, npc);

		//-- NPC: Please, can you help me?
		string_id message = new string_id (c_stringFile, "s_22");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Sure, what can I do?
		boolean hasResponse0 = false;
		if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_24");

			utils.setScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId", 7);

			npcStartConversation (player, npc, "npe_side_dungeon_soldier", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_side_dungeon_soldier_condition__defaultCondition (player, npc))
	{
		npe_side_dungeon_soldier_action_facePlayer (player, npc);

		//-- NPC: Please leave me to my grief.
		string_id message = new string_id (c_stringFile, "s_44");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "npe_side_dungeon_soldier")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId");

	if (branchId == 1 && npe_side_dungeon_soldier_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && npe_side_dungeon_soldier_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && npe_side_dungeon_soldier_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && npe_side_dungeon_soldier_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && npe_side_dungeon_soldier_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && npe_side_dungeon_soldier_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && npe_side_dungeon_soldier_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.npe_side_dungeon_soldier.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

