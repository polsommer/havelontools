// ======================================================================
//
// escortsample.script
// Copyright 2003, Sony Online Entertainment
// All Rights Reserved.
//
// DO NOT EDIT THIS AUTO-GENERATED FILE.  PLEASE USE THE CONVERATION EDITOR!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.money;
include library.space_quest;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/escortsample";

// ======================================================================
// Script Conditions
// ======================================================================

boolean escortsample_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean escortsample_condition_completedQuest (obj_id player, obj_id npc)
{
	// Return true if we've finished the quest and we won.
	if ( space_quest.hasCompletedQuest( player, "escort", "rebel_escort_01" ) &&
		 space_quest.hasWonQuest( player, "escort", "rebel_escort_01" ) )
		 return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean escortsample_condition_onQuest (obj_id player, obj_id npc)
{
	// Return true if we have the quest or have finished the quest.
	if ( space_quest.hasQuest( player, "escort", "rebel_escort_01" ) ||
		 space_quest.hasCompletedQuest( player, "escort", "rebel_escort_01" ) )
		 return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean escortsample_condition_alreadyRewarded (obj_id player, obj_id npc)
{
	return space_quest.hasReceivedReward( player, "escort", "rebel_escort_01" );
}

// ----------------------------------------------------------------------

boolean escortsample_condition_abortedQuest (obj_id player, obj_id npc)
{
	// Return true if we have the quest or have finished the quest.
	if ( space_quest.hasFailedQuest( player, "escort", "rebel_escort_01" ) ||
		 space_quest.hasAbortedQuest( player, "escort", "rebel_escort_01" ) )
		 return true;
	else
		return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void escortsample_action__defaultAction (obj_id player, obj_id npc)
{
}

// ----------------------------------------------------------------------

void escortsample_action_anim_greet (obj_id player, obj_id npc)
{
	faceToBehavior( npc, player );
	doAnimationAction ( npc, "greet");
}

// ----------------------------------------------------------------------

void escortsample_action_anim_converse (obj_id player, obj_id npc)
{
	doAnimationAction ( npc, "conversation_1" );
}

// ----------------------------------------------------------------------

void escortsample_action_anim_checkwatch (obj_id player, obj_id npc)
{
	doAnimationAction ( npc, "check_wrist_device" );
}

// ----------------------------------------------------------------------

void escortsample_action_giveQuest (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "escort", "rebel_escort_01" );
	doAnimationAction ( npc, "standing_raise_fist" );
}

// ----------------------------------------------------------------------

void escortsample_action_rewardPlayer (obj_id player, obj_id npc)
{
	doAnimationAction ( npc, "celebrate" );
	
	// Give the player some credits.
	// Probably need a reward system for this.
	money.bankTo( money.ACCT_REBEL, player, 3000 );

	// Mark the player as having received a reward for this quest.
	space_quest.setQuestRewarded( player, "escort", "rebel_escort_01" );
}

// ----------------------------------------------------------------------

void escortsample_action_anim_shakeheaddisgust (obj_id player, obj_id npc)
{
	doAnimationAction ( npc, "shake_head_disgust" );
}

// ----------------------------------------------------------------------

void escortsample_action_anim_wave (obj_id player, obj_id npc)
{
	doAnimationAction ( npc, "wave1" );
}

// ----------------------------------------------------------------------

void escortsample_action_anim_rubchin (obj_id player, obj_id npc)
{
	doAnimationAction ( npc, "rub_chin_thoughtful" );
}

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "npc.conversation.escortsample");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "npc.conversation.escortsample");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

trigger OnStartNpcConversation (obj_id player)
{
	if (ai_lib.isInCombat (self) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (escortsample_condition_alreadyRewarded (player, self))
	{
		escortsample_action_anim_wave (player, self);

		//-- NPC: Hey escorter! You're a bad-ass escorter!
		string_id message = new string_id (c_stringFile, "s_8ff3ca72");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: You got that right!
		boolean hasResponse0 = false;
		if (escortsample_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_3b6feb84");

			setObjVar (player, "conversation.escortsample.branchId", 1);

			npcStartConversation (player, self, "escortsample", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (escortsample_condition_abortedQuest (player, self))
	{
		escortsample_action_anim_shakeheaddisgust (player, self);

		//-- NPC: You FAILED! Quitter!
		string_id message = new string_id (c_stringFile, "s_440fcf1");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Can I try again?
		boolean hasResponse0 = false;
		if (escortsample_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Yeah. So what?
		boolean hasResponse1 = false;
		if (escortsample_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_d6b24fb1");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_aa630c8f");

			setObjVar (player, "conversation.escortsample.branchId", 3);

			npcStartConversation (player, self, "escortsample", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (escortsample_condition_onQuest (player, self))
	{
		escortsample_action_anim_greet (player, self);

		//-- NPC: Hi there. So - did you escort our Rebel supply ship?
		string_id message = new string_id (c_stringFile, "s_20355b4c");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yeah. It's safe and sound.
		boolean hasResponse0 = false;
		if (escortsample_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No, I haven't finished the job yet.
		boolean hasResponse1 = false;
		if (escortsample_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_8acc2fd5");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_fd6095f2");

			setObjVar (player, "conversation.escortsample.branchId", 8);

			npcStartConversation (player, self, "escortsample", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] A sample bounty mission.
	if (escortsample_condition__defaultCondition (player, self))
	{
		escortsample_action_anim_greet (player, self);

		//-- NPC: Hello, pilot! The Alliance is in need of some talented space fighters. Are you interested?
		string_id message = new string_id (c_stringFile, "s_fb6bb29c");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes. What do you need done?
		boolean hasResponse0 = false;
		if (escortsample_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_30b5d96");

			setObjVar (player, "conversation.escortsample.branchId", 12);

			npcStartConversation (player, self, "escortsample", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "escortsample")
		return SCRIPT_CONTINUE;

	int branchId = getIntObjVar (player, "conversation.escortsample.branchId");

	//-- [BRANCH NOTE] 
	//-- NPC: Hey escorter! You're a bad-ass escorter!
	//-- [RESPONSE NOTE] 
	//-- PLAYER: You got that right!
	if (branchId == 1 && response == "s_3b6feb84")
	{
		//-- [NOTE] 
		if (escortsample_condition__defaultCondition (player, self))
		{
			//-- NPC: Thanks for doing that little job for me.  I'll let you know if there's something else we need done.
			string_id message = new string_id (c_stringFile, "s_f150abd");
			removeObjVar (player, "conversation.escortsample.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Hey escorter! You're a bad-ass escorter!' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: You FAILED! Quitter!
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I try again?
	if (branchId == 3 && response == "s_d6b24fb1")
	{
		//-- [NOTE] 
		if (escortsample_condition__defaultCondition (player, self))
		{
			escortsample_action_anim_converse (player, self);

			//-- NPC: Okay. Let's try again. I have a critical medical supply transport headed through the asteroid belt. I need someone to make sure it survives its trip. You interested?
			string_id message = new string_id (c_stringFile, "s_f82b0fd5");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sorry. I really don't have the time for this right now.
			boolean hasResponse0 = false;
			if (escortsample_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: You got it!
			boolean hasResponse1 = false;
			if (escortsample_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c8f5aa73");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_546aa4f5");

				setObjVar (player, "conversation.escortsample.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.escortsample.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'You FAILED! Quitter!' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: You FAILED! Quitter!
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yeah. So what?
	if (branchId == 3 && response == "s_aa630c8f")
	{
		//-- [NOTE] 
		if (escortsample_condition__defaultCondition (player, self))
		{
			//-- NPC: So nothing. Good bye.
			string_id message = new string_id (c_stringFile, "s_fa88eaf6");
			removeObjVar (player, "conversation.escortsample.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'You FAILED! Quitter!' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Okay. Let's try again. I have a critical medical supply transport headed through the asteroid belt. I need someone to make sure it survives its trip. You interested?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry. I really don't have the time for this right now.
	if (branchId == 4 && response == "s_c8f5aa73")
	{
		//-- [NOTE] 
		if (escortsample_condition__defaultCondition (player, self))
		{
			escortsample_action_anim_checkwatch (player, self);

			//-- NPC: Don't waste my time, newbie.  I've got someone else to meet.  Talk to you later.
			string_id message = new string_id (c_stringFile, "s_a7887ccd");
			removeObjVar (player, "conversation.escortsample.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Okay. Let's try again. I have a critical medical supply transport headed through the asteroid belt. I need someone to make sure it survives its trip. You interested?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Okay. Let's try again. I have a critical medical supply transport headed through the asteroid belt. I need someone to make sure it survives its trip. You interested?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: You got it!
	if (branchId == 4 && response == "s_546aa4f5")
	{
		//-- [NOTE] 
		if (escortsample_condition__defaultCondition (player, self))
		{
			escortsample_action_giveQuest (player, self);

			//-- NPC: Excellent. Meet the transport in the asteroid belt. The Force be with you!
			string_id message = new string_id (c_stringFile, "s_197dcc5d");
			removeObjVar (player, "conversation.escortsample.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Okay. Let's try again. I have a critical medical supply transport headed through the asteroid belt. I need someone to make sure it survives its trip. You interested?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Hi there. So - did you escort our Rebel supply ship?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yeah. It's safe and sound.
	if (branchId == 8 && response == "s_8acc2fd5")
	{
		//-- [NOTE] 
		if (escortsample_condition_completedQuest (player, self))
		{
			escortsample_action_rewardPlayer (player, self);

			//-- NPC: Great! Great work! The Alliance thanks you.
			string_id message = new string_id (c_stringFile, "s_2cbca1ae");
			removeObjVar (player, "conversation.escortsample.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (escortsample_condition__defaultCondition (player, self))
		{
			escortsample_action_anim_shakeheaddisgust (player, self);

			//-- NPC: You LIE! Liar! I already got word from the transport that you gave up! Get out of my sight!
			string_id message = new string_id (c_stringFile, "s_7133d198");
			removeObjVar (player, "conversation.escortsample.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Hi there. So - did you escort our Rebel supply ship?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Hi there. So - did you escort our Rebel supply ship?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I haven't finished the job yet.
	if (branchId == 8 && response == "s_fd6095f2")
	{
		//-- [NOTE] 
		if (escortsample_condition__defaultCondition (player, self))
		{
			escortsample_action_anim_converse (player, self);

			//-- NPC: Take your time. The Force be with you.
			string_id message = new string_id (c_stringFile, "s_d1d526e");
			removeObjVar (player, "conversation.escortsample.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Hi there. So - did you escort our Rebel supply ship?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] A sample bounty mission.
	//-- NPC: Hello, pilot! The Alliance is in need of some talented space fighters. Are you interested?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. What do you need done?
	if (branchId == 12 && response == "s_30b5d96")
	{
		//-- [NOTE] 
		if (escortsample_condition__defaultCondition (player, self))
		{
			escortsample_action_anim_converse (player, self);

			//-- NPC: The Imperials have squeezed off our major supply route through this system. I have a critical medical supply transport headed through the asteroid belt. I need someone to make sure it survives its trip. You interested?
			string_id message = new string_id (c_stringFile, "s_64815da3");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sorry. I really don't have the time for this right now.
			boolean hasResponse0 = false;
			if (escortsample_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: You got it!
			boolean hasResponse1 = false;
			if (escortsample_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c8f5aa73");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_546aa4f5");

				setObjVar (player, "conversation.escortsample.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.escortsample.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Hello, pilot! The Alliance is in need of some talented space fighters. Are you interested?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: The Imperials have squeezed off our major supply route through this system. I have a critical medical supply transport headed through the asteroid belt. I need someone to make sure it survives its trip. You interested?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry. I really don't have the time for this right now.
	if (branchId == 13 && response == "s_c8f5aa73")
	{
		//-- [NOTE] 
		if (escortsample_condition__defaultCondition (player, self))
		{
			escortsample_action_anim_checkwatch (player, self);

			//-- NPC: Don't waste my time, newbie.  I've got someone else to meet.  Talk to you later.
			string_id message = new string_id (c_stringFile, "s_a7887ccd");
			removeObjVar (player, "conversation.escortsample.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'The Imperials have squeezed off our major supply route through this system. I have a critical medical supply transport headed through the asteroid belt. I need someone to make sure it survives its trip. You interested?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: The Imperials have squeezed off our major supply route through this system. I have a critical medical supply transport headed through the asteroid belt. I need someone to make sure it survives its trip. You interested?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: You got it!
	if (branchId == 13 && response == "s_546aa4f5")
	{
		//-- [NOTE] 
		if (escortsample_condition__defaultCondition (player, self))
		{
			escortsample_action_giveQuest (player, self);

			//-- NPC: Excellent. Meet the transport in the asteroid belt. The Force be with you!
			string_id message = new string_id (c_stringFile, "s_197dcc5d");
			removeObjVar (player, "conversation.escortsample.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'The Imperials have squeezed off our major supply route through this system. I have a critical medical supply transport headed through the asteroid belt. I need someone to make sure it survives its trip. You interested?' were false.");

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	removeObjVar (player, "conversation.escortsample.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

