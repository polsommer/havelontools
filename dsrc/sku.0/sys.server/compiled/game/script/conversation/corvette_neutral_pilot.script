// ======================================================================
//
// corvette_neutral_pilot.script
// Copyright 2003, Sony Online Entertainment
// All Rights Reserved.
//
// DO NOT EDIT THIS AUTO-GENERATED FILE.  PLEASE USE THE CONVERATION EDITOR!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.group;
include library.space_dungeon;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/corvette_neutral_pilot";

// ======================================================================
// Script Conditions
// ======================================================================

boolean corvette_neutral_pilot_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean corvette_neutral_pilot_condition_hasNeutralTicket (obj_id player, obj_id npc)
{
	// First make sure the Neutral Corellian Corvette is active.
	string isDungeonActive = getConfigSetting("Dungeon", "Corellian_Corvette_Neutral");
	if ( isDungeonActive == null || isDungeonActive == "false" || isDungeonActive == "0")
		return false;
	
	// then check to see if the player has the necessary ticket.
	obj_id[] tickets = space_dungeon.findValidDungeonTickets(player, npc);
	if ( tickets != null && tickets.length > 0)
		return true;
	
	return false;
}

// ----------------------------------------------------------------------

boolean corvette_neutral_pilot_condition_tooManyInGroup (obj_id player, obj_id npc)
{
	if ( group.isGrouped(player) )
	{
		obj_id groupObj = getGroupObject(player);
		if ( isIdValid(groupObj) )
		{
			int numGroupMembers = getGroupSize(groupObj);
			if ( numGroupMembers > 10 )
				return true;
		}
	}
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void corvette_neutral_pilot_action__defaultAction (obj_id player, obj_id npc)
{
}

// ----------------------------------------------------------------------

void corvette_neutral_pilot_action_sendToDungeon (obj_id player, obj_id npc)
{
	space_dungeon.selectDungeonTicket(npc, player);
	return;
}

// ----------------------------------------------------------------------

void corvette_neutral_pilot_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return;
}

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "npc.conversation.corvette_neutral_pilot");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "npc.conversation.corvette_neutral_pilot");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

trigger OnStartNpcConversation (obj_id player)
{
	if (ai_lib.isInCombat (self) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (corvette_neutral_pilot_condition__defaultCondition (player, self))
	{
		corvette_neutral_pilot_action_facePlayer (player, self);

		//-- NPC: If you have to run around out here, don't touch anything! I'm dealing with some highly sensitive equipment in this area and don't want your clumsy fingers breaking something.
		string_id message = new string_id (c_stringFile, "s_1e10bbe3");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I hear you can help me intercept a CorSec Corellian corvette?
		boolean hasResponse0 = false;
		if (corvette_neutral_pilot_condition_hasNeutralTicket (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Oh, sorry. I'll be going then.
		boolean hasResponse1 = false;
		if (corvette_neutral_pilot_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_4fb4580f");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_facfb7c0");

			setObjVar (player, "conversation.corvette_neutral_pilot.branchId", 1);

			npcStartConversation (player, self, "corvette_neutral_pilot", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "corvette_neutral_pilot")
		return SCRIPT_CONTINUE;

	int branchId = getIntObjVar (player, "conversation.corvette_neutral_pilot.branchId");

	//-- [BRANCH NOTE] 
	//-- NPC: If you have to run around out here, don't touch anything! I'm dealing with some highly sensitive equipment in this area and don't want your clumsy fingers breaking something.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I hear you can help me intercept a CorSec Corellian corvette?
	if (branchId == 1 && response == "s_4fb4580f")
	{
		//-- [NOTE] 
		if (corvette_neutral_pilot_condition__defaultCondition (player, self))
		{
			//-- NPC: Me? And just how exactly would I do that? Wait... wait. Don't go. Why do you want to do something like that?
			string_id message = new string_id (c_stringFile, "s_fc033618");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [Tell him about your mission]
			boolean hasResponse0 = false;
			if (corvette_neutral_pilot_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Um... nothing. Nevermind.
			boolean hasResponse1 = false;
			if (corvette_neutral_pilot_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1ab00f5e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1a71d76e");

				setObjVar (player, "conversation.corvette_neutral_pilot.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.corvette_neutral_pilot.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you have to run around out here, don't touch anything! I'm dealing with some highly sensitive equipment in this area and don't want your clumsy fingers breaking something.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you have to run around out here, don't touch anything! I'm dealing with some highly sensitive equipment in this area and don't want your clumsy fingers breaking something.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh, sorry. I'll be going then.
	if (branchId == 1 && response == "s_facfb7c0")
	{
		//-- [NOTE] 
		if (corvette_neutral_pilot_condition__defaultCondition (player, self))
		{
			//-- NPC: Good. You'd only be in my way.
			string_id message = new string_id (c_stringFile, "s_ba55259a");
			removeObjVar (player, "conversation.corvette_neutral_pilot.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you have to run around out here, don't touch anything! I'm dealing with some highly sensitive equipment in this area and don't want your clumsy fingers breaking something.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Me? And just how exactly would I do that? Wait... wait. Don't go. Why do you want to do something like that?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Tell him about your mission]
	if (branchId == 2 && response == "s_1ab00f5e")
	{
		//-- [NOTE] 
		if (corvette_neutral_pilot_condition_tooManyInGroup (player, self))
		{
			//-- NPC: Hmmm... reminds me of some information I overheard recently. I might be able to help you, but the transportation I can provide only has room for 10 or less. You'll need to reduce your group size and then speak with me again.
			string_id message = new string_id (c_stringFile, "s_f2d8c3c4");
			removeObjVar (player, "conversation.corvette_neutral_pilot.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!corvette_neutral_pilot_condition_tooManyInGroup (player, self))
		{
			//-- NPC: Hmmm... reminds me of some information I overheard recently. Don't you worry about where I heard it! Just be glad that I did, because I think I can help you. Oh, something you should know - after you get to the corvette, you'll have an hour to conclude your business. After an hour, it's too late. Game over. Mission failed.
			string_id message = new string_id (c_stringFile, "s_c4c8b476");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Good, when can we go?
			boolean hasResponse0 = false;
			if (corvette_neutral_pilot_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I've changed my mind, and I'm leaving.
			boolean hasResponse1 = false;
			if (corvette_neutral_pilot_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_62aa5014");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d553beb4");

				setObjVar (player, "conversation.corvette_neutral_pilot.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.corvette_neutral_pilot.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Me? And just how exactly would I do that? Wait... wait. Don't go. Why do you want to do something like that?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Me? And just how exactly would I do that? Wait... wait. Don't go. Why do you want to do something like that?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Um... nothing. Nevermind.
	if (branchId == 2 && response == "s_1a71d76e")
	{
		//-- [NOTE] 
		if (corvette_neutral_pilot_condition__defaultCondition (player, self))
		{
			//-- NPC: Whatever. Try to leave more quietly than you arrived.
			string_id message = new string_id (c_stringFile, "s_f0008c9b");
			removeObjVar (player, "conversation.corvette_neutral_pilot.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Me? And just how exactly would I do that? Wait... wait. Don't go. Why do you want to do something like that?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Hmmm... reminds me of some information I overheard recently. Don't you worry about where I heard it! Just be glad that I did, because I think I can help you. Oh, something you should know - after you get to the corvette, you'll have an hour to conclude your business. After an hour, it's too late. Game over. Mission failed.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Good, when can we go?
	if (branchId == 4 && response == "s_62aa5014")
	{
		//-- [NOTE] 
		if (corvette_neutral_pilot_condition_tooManyInGroup (player, self))
		{
			//-- NPC: Well, I could normally help you, but the transportation I can provide only has room for 10 or less. You'll need to reduce your group size and then speak with me again.
			string_id message = new string_id (c_stringFile, "s_6423c2d5");
			removeObjVar (player, "conversation.corvette_neutral_pilot.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corvette_neutral_pilot_condition__defaultCondition (player, self))
		{
			corvette_neutral_pilot_action_sendToDungeon (player, self);

			//-- NPC: Whoa... hold on there. Not so fast. First I need to know you have proper authorization for this... I'm willing to help you, but I've gotta know this is legit. Jabba'd have my head if I started providing transportation to just anyone claiming to be on some mission. You got a travel authorization form?
			string_id message = new string_id (c_stringFile, "s_801d58df");
			removeObjVar (player, "conversation.corvette_neutral_pilot.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Hmmm... reminds me of some information I overheard recently. Don't you worry about where I heard it! Just be glad that I did, because I think I can help you. Oh, something you should know - after you get to the corvette, you'll have an hour to conclude your business. After an hour, it's too late. Game over. Mission failed.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Hmmm... reminds me of some information I overheard recently. Don't you worry about where I heard it! Just be glad that I did, because I think I can help you. Oh, something you should know - after you get to the corvette, you'll have an hour to conclude your business. After an hour, it's too late. Game over. Mission failed.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've changed my mind, and I'm leaving.
	if (branchId == 4 && response == "s_d553beb4")
	{
		//-- [NOTE] 
		if (corvette_neutral_pilot_condition__defaultCondition (player, self))
		{
			//-- NPC: Hey, no worries to me. Good luck explaining your cowardice to Jabba... assuming you really were doing this for him. [laughs]
			string_id message = new string_id (c_stringFile, "s_18d816d4");
			removeObjVar (player, "conversation.corvette_neutral_pilot.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Hmmm... reminds me of some information I overheard recently. Don't you worry about where I heard it! Just be glad that I did, because I think I can help you. Oh, something you should know - after you get to the corvette, you'll have an hour to conclude your business. After an hour, it's too late. Game over. Mission failed.' were false.");

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	removeObjVar (player, "conversation.corvette_neutral_pilot.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

