// ======================================================================
//
// fs_patrol_quest_start.script
// Copyright 2003, Sony Online Entertainment
// All Rights Reserved.
//
// DO NOT EDIT THIS AUTO-GENERATED FILE.  PLEASE USE THE CONVERATION EDITOR!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.fs_quests;
include library.quests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/fs_patrol_quest_start";

// ======================================================================
// Script Conditions
// ======================================================================

boolean fs_patrol_quest_start_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean fs_patrol_quest_start_condition_canTalkToVillagers (obj_id player, obj_id npc)
{
	return fs_quests.isVillageEligible(player);
}

// ----------------------------------------------------------------------

boolean fs_patrol_quest_start_condition_ableToDoQuest (obj_id player, obj_id npc)
{
	return fs_quests.hasQuestAccepted(player);
}

// ----------------------------------------------------------------------

boolean fs_patrol_quest_start_condition_finished (obj_id player, obj_id npc)
{
	return quests.isComplete("fs_patrol_quest_finish",player);
}

// ----------------------------------------------------------------------

boolean fs_patrol_quest_start_condition_Complete9andQualifiesToComplete10 (obj_id player, obj_id npc)
{
	//Checks if 9 is complete, and 10 is active, then checks if they qualify to complete 10.
	if (quests.isComplete("fs_patrol_quest_9",player) && quests.isActive("fs_patrol_quest_10",player))
	{
		string questName = "fs_patrol_quest_10";
		int waypointCount = 0;
		boolean currentPatrol = false;
		boolean currentPatrolPoint = false;
		if (hasObjVar(player, "quest.fs_patrol.current_patrol"))
			currentPatrol = getBooleanObjVar(player,"quest.fs_patrol.current_patrol");
		if (hasObjVar(player, "quest.fs_patrol.current_patrol_point"))
			currentPatrolPoint = getBooleanObjVar(player,"quest.fs_patrol.current_patrol_point");	
		if (hasObjVar(player, "quest." + questName + ".waypointcount"))
			waypointCount = getIntObjVar(player, "quest." + questName + ".waypointcount");
		
		if (waypointCount >=8 && currentPatrolPoint && currentPatrol)
			return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean fs_patrol_quest_start_condition_Complete19andQualifiesToComplete20 (obj_id player, obj_id npc)
{
	//Checks if 19 is complete, and 20 is active, then checks if they qualify to complete 20.
	if (quests.isComplete("fs_patrol_quest_19",player) && quests.isActive("fs_patrol_quest_20",player))
	{
		string questName = "fs_patrol_quest_20";
		int waypointCount = 0;
		boolean currentPatrol = false;
		boolean currentPatrolPoint = false;
		if (hasObjVar(player, "quest.fs_patrol.current_patrol"))
			currentPatrol = getBooleanObjVar(player,"quest.fs_patrol.current_patrol");
		if (hasObjVar(player, "quest.fs_patrol.current_patrol_point"))
			currentPatrolPoint = getBooleanObjVar(player,"quest.fs_patrol.current_patrol_point");	
		if (hasObjVar(player, "quest." + questName + ".waypointcount"))
			waypointCount = getIntObjVar(player, "quest." + questName + ".waypointcount");
		
		if (waypointCount >=8 && currentPatrolPoint && currentPatrol)
			return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean fs_patrol_quest_start_condition_CheckIfElevenIsGiven (obj_id player, obj_id npc)
{
	//Check if 11 is complete or active
	if (quests.isComplete("fs_patrol_quest_11",player) || quests.isActive("fs_patrol_quest_11",player)) return true;
	return false;
}

// ----------------------------------------------------------------------

boolean fs_patrol_quest_start_condition_CheckIfOneIsGiven (obj_id player, obj_id npc)
{
	//Check if 1 is complete or active
	if (quests.isComplete("fs_patrol_quest_1",player) || quests.isActive("fs_patrol_quest_1",player)) return true;
	return false;
}

// ----------------------------------------------------------------------

boolean fs_patrol_quest_start_condition_CheckIfTenIsComplete (obj_id player, obj_id npc)
{
	return quests.isComplete("fs_patrol_quest_10",player);
}

// ----------------------------------------------------------------------

boolean fs_patrol_quest_start_condition_FindCurrentCheckIfQualifyToComplete (obj_id player, obj_id npc)
{
	//Find current patrol, check Patrol flags to make sure they did not fail, check wp count to make sure all points were hit.
	string questName = "fs_patrol_quest_";
	for (int i = 1; i <21; i++)
	{
		if (DEBUGGING) sendSystemMessageTestingOnly(player,"fs_patrol_quest_"+i+" checking if active");
		if (quests.isActive("fs_patrol_quest_"+i,player))
		{
			int waypointCount = 0;
			boolean currentPatrol = false;
			boolean currentPatrolPoint = false;
			if (hasObjVar(player, "quest.fs_patrol.current_patrol"))
				currentPatrol = getBooleanObjVar(player,"quest.fs_patrol.current_patrol");
			if (hasObjVar(player, "quest.fs_patrol.current_patrol_point"))
				currentPatrolPoint = getBooleanObjVar(player,"quest.fs_patrol.current_patrol_point");	
			if (hasObjVar(player, "quest." + questName + i + ".waypointcount"))
				waypointCount = getIntObjVar(player, "quest." + questName + i + ".waypointcount");
			if (DEBUGGING) sendSystemMessageTestingOnly(player,"Found for fs_patrol_quest_"+i+" current, currentpoint, count" + currentPatrol + currentPatrolPoint + waypointCount);
			if (waypointCount >=8 && currentPatrolPoint && currentPatrol)
				return true;
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean fs_patrol_quest_start_condition_inventoryCheck (obj_id player, obj_id npc)
{
	obj_id inv = utils.getInventoryContainer(player);
	int freeSpace = getVolumeFree(inv);
	if (freeSpace<1)
	{
		if (quests.isActive("fs_patrol_quest_20",player))
		{
			string questName = "fs_patrol_quest_20";
			int waypointCount = 0;
			boolean currentPatrol = false;
			boolean currentPatrolPoint = false;
			if (hasObjVar(player, "quest.fs_patrol.current_patrol"))
				currentPatrol = getBooleanObjVar(player,"quest.fs_patrol.currnet_patrol");
			if (hasObjVar(player, "quest.fs_patrol.current_patrol_point"))
				currentPatrolPoint = getBooleanObjVar(player,"quest.fs_patrol.currnet_patrol_point");	
			if (hasObjVar(player, "quest." + questName + ".waypointcount"))
				waypointCount = getIntObjVar(player, "quest." + questName + ".waypointcount");
			
			if (waypointCount >=8 && currentPatrolPoint && currentPatrol)
				return true;		
		}
	}
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void fs_patrol_quest_start_action_GiveQuestOne (obj_id player, obj_id npc)
{
	//give quest one
	quests.activate("fs_patrol_quest_start",player,npc);
	//quests.activate("fs_patrol_quest_1",player,npc);
	fs_quests.setQuestAccepted(player);
	attachScript(player, "quest.force_sensitive.fs_patrol_spawns1");
	setObjVar(player, "quest.fs_patrol.current_patrol", true);
	setObjVar(player, "quest.fs_patrol.current_patrol_point", true);
}

// ----------------------------------------------------------------------

void fs_patrol_quest_start_action_GiveNextQuest (obj_id player, obj_id npc)
{
	//Find current quest number, complete current, give next.
	string questName = "fs_patrol_quest_";
	boolean gaveNextQuest = false;
	int i = 1;
	while (!gaveNextQuest)
	{
	if (quests.isActive("fs_patrol_quest_"+i,player))
		{
			if (i!= 10 || i!=20)
			{
				quests.complete(questName+i,player,true);
				int j = i+1;
				quests.activate(questName + j,player,npc);
				setObjVar(player, "quest.fs_patrol.current_patrol", true);
				setObjVar(player, "quest.fs_patrol.current_patrol_point", true);
				gaveNextQuest = true;
			}
		}
	i++;
	if (i>= 21) gaveNextQuest=true;
	}
}

// ----------------------------------------------------------------------

void fs_patrol_quest_start_action_GiveQuestEleven (obj_id player, obj_id npc)
{
	//Give Quest eleven
	quests.activate("fs_patrol_quest_11",player,npc);
	setObjVar(player, "quest.fs_patrol.current_patrol", true);
	setObjVar(player, "quest.fs_patrol.current_patrol_point", true);
}

// ----------------------------------------------------------------------

void fs_patrol_quest_start_action_UnlockFSBranch (obj_id player, obj_id npc)
{
	//unlock branch
	//complete quest 10
	fs_quests.unlockBranch(player, "force_sensitive_combat_prowess_ranged_accuracy");
	quests.complete("fs_patrol_quest_10",player,true);
}

// ----------------------------------------------------------------------

void fs_patrol_quest_start_action_GiveReward (obj_id player, obj_id npc)
{
	//detach spawn script
	//obj_id playerInventory = utils.getInventoryContainer(player);
	obj_id createdObject = createObjectInInventoryAllowOverload("object/tangible/item/quest/force_sensitive/fs_village_bannerpole_s01.iff", player);
	quests.complete("fs_patrol_quest_20",player,true);
	detachScript(player, "quest.force_sensitive.fs_patrol_spawns1");
	
}

// ----------------------------------------------------------------------

void fs_patrol_quest_start_action_resetCurrentPatrol (obj_id player, obj_id npc)
{
	//kill old WP's, give new ones, clear visited WP's
	string questName = "fs_patrol_quest_";
	for (int j = 1; j <21; j++)
	{
		if (hasObjVar(player, "quest." + questName + j))
		{
			removeObjVar(player, "quest." + questName + j + ".waypointcount");
			for (int i = 0; i < 8; i++)
			{
				if (hasObjVar(player, "quest." + questName + j + ".waypoint" + i))
				{
					obj_id waypoint = getObjIdObjVar(player, "quest." + questName + j + ".waypoint" + i);
					if(isIdValid(waypoint))
					{
						destroyWaypointInDatapad(waypoint, player);
					}
					removeObjVar (player, "quest." + questName + j + ".waypoint" + i);
				}
			}
			quests.deactivate(questName + j,player);
			quests.activate(questName + j,player,npc);
			setObjVar(player, "quest.fs_patrol.current_patrol", true);
			setObjVar(player, "quest.fs_patrol.current_patrol_point", true);
		}
	}
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// User Script Triggers
// ======================================================================

const boolean DEBUGGING = false;

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "npc.conversation.fs_patrol_quest_start");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "npc.conversation.fs_patrol_quest_start");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	if (ai_lib.isInCombat (self) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (!fs_patrol_quest_start_condition_canTalkToVillagers (player, self))
	{
		//-- NPC: I wish I could talk to you right now, but I just don't have the time.  Come see me later, though, I may have something for you then.
		string_id message = new string_id (c_stringFile, "s_ebd8c749");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_patrol_quest_start_condition_finished (player, self))
	{
		//-- NPC: You've been a lot of help to me, but our patrols are filled.  We don't need the help just yet.  Use this time for some R&R, or maybe see if someone else needs some help.
		string_id message = new string_id (c_stringFile, "s_5f2a0dac");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_patrol_quest_start_condition_Complete9andQualifiesToComplete10 (player, self))
	{
		fs_patrol_quest_start_action_UnlockFSBranch (player, self);

		//-- NPC: I hear your patrols are top of the line.  Good to have someone like you around.  I guess you're starting to get a sense of how powerful you really are.  Keep up the good work.
		string_id message = new string_id (c_stringFile, "s_7d744b43");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_patrol_quest_start_condition_Complete19andQualifiesToComplete20 (player, self))
	{
		fs_patrol_quest_start_action_GiveReward (player, self);

		//-- NPC: Your information gathering is first rate.  We should be able to start rebuilding.  I have something for you, it's not much, but it's what I've got.
		string_id message = new string_id (c_stringFile, "s_13f339fe");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_patrol_quest_start_condition_CheckIfElevenIsGiven (player, self))
	{
		//-- NPC: Are you back already?  You finish that last patrol?
		string_id message = new string_id (c_stringFile, "s_4b5df4f5");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes.
		boolean hasResponse0 = false;
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No, I need to restart the patrol.
		boolean hasResponse1 = false;
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_d70dba34");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_d33566f3");

			setObjVar (player, "conversation.fs_patrol_quest_start.branchId", 5);

			npcStartConversation (player, self, "fs_patrol_quest_start", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_patrol_quest_start_condition_CheckIfTenIsComplete (player, self))
	{
		//-- NPC: I need more help on the patrol routes.  You're proving to be quite valuable to this little operation.  Are you up for some more?
		string_id message = new string_id (c_stringFile, "s_fb116507");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Whatever I can do to help!
		boolean hasResponse0 = false;
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No thanks, Once was enough.
		boolean hasResponse1 = false;
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_ec2d9d88");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_60a74f25");

			setObjVar (player, "conversation.fs_patrol_quest_start.branchId", 11);

			npcStartConversation (player, self, "fs_patrol_quest_start", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_patrol_quest_start_condition_CheckIfOneIsGiven (player, self))
	{
		//-- NPC: Did you finish that patrol?  I see you're back, but I don't think that necessarily means you finished...
		string_id message = new string_id (c_stringFile, "s_9e38953b");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, and I'm ready for more.
		boolean hasResponse0 = false;
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No, I need to restart the patrol.
		boolean hasResponse1 = false;
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6d3ed33b");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_d33566f3");

			setObjVar (player, "conversation.fs_patrol_quest_start.branchId", 14);

			npcStartConversation (player, self, "fs_patrol_quest_start", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_patrol_quest_start_condition_ableToDoQuest (player, self))
	{
		//-- NPC: As I understand it you already have some assignments from some of the other villagers.  Come back when you don't have so much on your plate.
		string_id message = new string_id (c_stringFile, "s_37871f01");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_patrol_quest_start_condition__defaultCondition (player, self))
	{
		//-- NPC: How are you, soldier?  I understand you're looking for something to do?  Great.  I have some patrol routes I need covered.  You interested?
		string_id message = new string_id (c_stringFile, "s_b76cc5ed");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, I'm interested.
		boolean hasResponse0 = false;
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No thanks.
		boolean hasResponse1 = false;
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_240c8c9d");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_d6695e83");

			setObjVar (player, "conversation.fs_patrol_quest_start.branchId", 21);

			npcStartConversation (player, self, "fs_patrol_quest_start", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "fs_patrol_quest_start")
		return SCRIPT_CONTINUE;

	int branchId = getIntObjVar (player, "conversation.fs_patrol_quest_start.branchId");

	//-- [BRANCH NOTE] 
	//-- NPC: Are you back already?  You finish that last patrol?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (branchId == 5 && response == "s_d70dba34")
	{
		//-- [NOTE] 
		if (fs_patrol_quest_start_condition_FindCurrentCheckIfQualifyToComplete (player, self))
		{
			fs_patrol_quest_start_action_GiveNextQuest (player, self);

			//-- NPC: Ok, then here's another one for you.  Get to it soldier.
			string_id message = new string_id (c_stringFile, "s_1f1e059");
			removeObjVar (player, "conversation.fs_patrol_quest_start.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!fs_patrol_quest_start_condition_FindCurrentCheckIfQualifyToComplete (player, self))
		{
			fs_patrol_quest_start_action_resetCurrentPatrol (player, self);

			//-- NPC: Actually, it doesn't look like you did.  Your data is incomplete.  I'm gonna have to ask you to start over.  And soldier?  Do it right this time.
			string_id message = new string_id (c_stringFile, "s_67427da4");
			removeObjVar (player, "conversation.fs_patrol_quest_start.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Are you back already?  You finish that last patrol?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Are you back already?  You finish that last patrol?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I need to restart the patrol.
	if (branchId == 5 && response == "s_d33566f3")
	{
		//-- [NOTE] 
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			//-- NPC: Are you sure you want to start over?
			string_id message = new string_id (c_stringFile, "s_cbbe47bb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (fs_patrol_quest_start_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (fs_patrol_quest_start_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d70dba34");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4c695dbd");

				setObjVar (player, "conversation.fs_patrol_quest_start.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.fs_patrol_quest_start.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Are you back already?  You finish that last patrol?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Are you sure you want to start over?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (branchId == 8 && response == "s_d70dba34")
	{
		fs_patrol_quest_start_action_resetCurrentPatrol (player, self);

		//-- [NOTE] 
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, here's a new patrol.  Now get out there and get to it, soldier.  I don't have time to babysit you.
			string_id message = new string_id (c_stringFile, "s_61dc9e2d");
			removeObjVar (player, "conversation.fs_patrol_quest_start.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Are you sure you want to start over?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Are you sure you want to start over?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (branchId == 8 && response == "s_4c695dbd")
	{
		//-- [NOTE] 
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			//-- NPC: Well then, get out there and get the job done, soldier!
			string_id message = new string_id (c_stringFile, "s_30c694db");
			removeObjVar (player, "conversation.fs_patrol_quest_start.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Are you sure you want to start over?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I need more help on the patrol routes.  You're proving to be quite valuable to this little operation.  Are you up for some more?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Whatever I can do to help!
	if (branchId == 11 && response == "s_ec2d9d88")
	{
		fs_patrol_quest_start_action_GiveQuestEleven (player, self);

		//-- [NOTE] 
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			//-- NPC: Good. Ok, you know the drill.  Here's the next route.  Let's get it going.
			string_id message = new string_id (c_stringFile, "s_2872b835");
			removeObjVar (player, "conversation.fs_patrol_quest_start.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I need more help on the patrol routes.  You're proving to be quite valuable to this little operation.  Are you up for some more?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I need more help on the patrol routes.  You're proving to be quite valuable to this little operation.  Are you up for some more?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks, Once was enough.
	if (branchId == 11 && response == "s_60a74f25")
	{
		//-- [NOTE] 
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			//-- NPC: Sorry to hear that.  Let me know if you change your mind.
			string_id message = new string_id (c_stringFile, "s_1485495");
			removeObjVar (player, "conversation.fs_patrol_quest_start.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I need more help on the patrol routes.  You're proving to be quite valuable to this little operation.  Are you up for some more?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Did you finish that patrol?  I see you're back, but I don't think that necessarily means you finished...
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, and I'm ready for more.
	if (branchId == 14 && response == "s_6d3ed33b")
	{
		//-- [NOTE] 
		if (fs_patrol_quest_start_condition_FindCurrentCheckIfQualifyToComplete (player, self))
		{
			fs_patrol_quest_start_action_GiveNextQuest (player, self);

			//-- NPC:  Perfect.  We can put this information to some good use.  Ok, here's your next patrol route.  You know the routine.
			string_id message = new string_id (c_stringFile, "s_1b5216d5");
			removeObjVar (player, "conversation.fs_patrol_quest_start.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!fs_patrol_quest_start_condition_FindCurrentCheckIfQualifyToComplete (player, self))
		{
			fs_patrol_quest_start_action_resetCurrentPatrol (player, self);

			//-- NPC: I'm starting to worry about your performance soldier.  This data isn't complete.  Get back out there and start over, I don't have time for incomplete reports.
			string_id message = new string_id (c_stringFile, "s_491ce1ad");
			removeObjVar (player, "conversation.fs_patrol_quest_start.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Did you finish that patrol?  I see you're back, but I don't think that necessarily means you finished...' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Did you finish that patrol?  I see you're back, but I don't think that necessarily means you finished...
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I need to restart the patrol.
	if (branchId == 14 && response == "s_d33566f3")
	{
		//-- [NOTE] 
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			//-- NPC: Are you sure you want to start over?
			string_id message = new string_id (c_stringFile, "s_cbbe47bb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (fs_patrol_quest_start_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (fs_patrol_quest_start_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d70dba34");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4c695dbd");

				setObjVar (player, "conversation.fs_patrol_quest_start.branchId", 17);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.fs_patrol_quest_start.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Did you finish that patrol?  I see you're back, but I don't think that necessarily means you finished...' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Are you sure you want to start over?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (branchId == 17 && response == "s_d70dba34")
	{
		fs_patrol_quest_start_action_resetCurrentPatrol (player, self);

		//-- [NOTE] 
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			//-- NPC: I need the recon data ASAP.  I don't have time to wait, and neither do you.  Get back to work.
			string_id message = new string_id (c_stringFile, "s_649f5207");
			removeObjVar (player, "conversation.fs_patrol_quest_start.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Are you sure you want to start over?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Are you sure you want to start over?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (branchId == 17 && response == "s_4c695dbd")
	{
		//-- [NOTE] 
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			//-- NPC: Well then, get out there and get the job done, soldier!
			string_id message = new string_id (c_stringFile, "s_30c694db");
			removeObjVar (player, "conversation.fs_patrol_quest_start.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Are you sure you want to start over?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: How are you, soldier?  I understand you're looking for something to do?  Great.  I have some patrol routes I need covered.  You interested?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I'm interested.
	if (branchId == 21 && response == "s_240c8c9d")
	{
		//-- [NOTE] 
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			//-- NPC: All right, but here's the drill.  Once you start working for me, I can't have you taking jobs from anyone else.  I demand complete focus from all my soldiers. One other thing.  If you finish this, I'll let Noldan know you will be ready for some ranged accuracy training.
			string_id message = new string_id (c_stringFile, "s_2248d7ad");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, let's get started.
			boolean hasResponse0 = false;
			if (fs_patrol_quest_start_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No, there are others I need to help.
			boolean hasResponse1 = false;
			if (fs_patrol_quest_start_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199a175c");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_764478e7");

				setObjVar (player, "conversation.fs_patrol_quest_start.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.fs_patrol_quest_start.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'How are you, soldier?  I understand you're looking for something to do?  Great.  I have some patrol routes I need covered.  You interested?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: How are you, soldier?  I understand you're looking for something to do?  Great.  I have some patrol routes I need covered.  You interested?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks.
	if (branchId == 21 && response == "s_d6695e83")
	{
		//-- [NOTE] 
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			//-- NPC: Ok, but I'm gonna need to find someone to do these patrol routes.  I need to make sure the village isn't in any immediate danger.  Come back if you change your mind, I could use someone like you.
			string_id message = new string_id (c_stringFile, "s_fa12949a");
			removeObjVar (player, "conversation.fs_patrol_quest_start.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'How are you, soldier?  I understand you're looking for something to do?  Great.  I have some patrol routes I need covered.  You interested?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: All right, but here's the drill.  Once you start working for me, I can't have you taking jobs from anyone else.  I demand complete focus from all my soldiers. One other thing.  If you finish this, I'll let Noldan know you will be ready for some ranged accuracy training.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, let's get started.
	if (branchId == 22 && response == "s_199a175c")
	{
		fs_patrol_quest_start_action_GiveQuestOne (player, self);

		//-- [NOTE] 
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			//-- NPC: Good, here is your first assignment.  I need you to hit all eight points on this patrol, and then report back every time you finish so I can give you the next. I have ten total I need you to do. 
			string_id message = new string_id (c_stringFile, "s_9ec72704");
			removeObjVar (player, "conversation.fs_patrol_quest_start.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'All right, but here's the drill.  Once you start working for me, I can't have you taking jobs from anyone else.  I demand complete focus from all my soldiers. One other thing.  If you finish this, I'll let Noldan know you will be ready for some ranged accuracy training.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: All right, but here's the drill.  Once you start working for me, I can't have you taking jobs from anyone else.  I demand complete focus from all my soldiers. One other thing.  If you finish this, I'll let Noldan know you will be ready for some ranged accuracy training.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, there are others I need to help.
	if (branchId == 22 && response == "s_764478e7")
	{
		//-- [NOTE] 
		if (fs_patrol_quest_start_condition__defaultCondition (player, self))
		{
			//-- NPC: That's all right, everyone around here needs a little help.  Come back and see me when you've got more time on your hands.
			string_id message = new string_id (c_stringFile, "s_e0c9cc07");
			removeObjVar (player, "conversation.fs_patrol_quest_start.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'All right, but here's the drill.  Once you start working for me, I can't have you taking jobs from anyone else.  I demand complete focus from all my soldiers. One other thing.  If you finish this, I'll let Noldan know you will be ready for some ranged accuracy training.' were false.");

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	removeObjVar (player, "conversation.fs_patrol_quest_start.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

