// ======================================================================
//
// legacy_button_jawatracks_zef.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.features;
include library.groundquests;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/legacy_button_jawatracks_zef";

// ======================================================================
// Script Conditions
// ======================================================================

boolean legacy_button_jawatracks_zef_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean legacy_button_jawatracks_zef_condition_onDataDownload (obj_id player, obj_id npc)
{	
	int questId1 = questGetQuestId("quest/legacy_button_jawatracks_pt2");
	int onBody = groundquests.getTaskId(questId1, "legacy_button_jawatracks_e18");
		int onRats = groundquests.getTaskId(questId1, "legacy_button_jawatracks_e120");
	int questId2 = questGetQuestId("quest/legacy_button_jawatracks_reb_pt2");
	int onBody2 = groundquests.getTaskId(questId2, "legacy_button_jawatracks_e18r");
		int onRats2 = groundquests.getTaskId(questId2, "legacy_button_jawatracks_e120r");  

	
	boolean onTask = questIsTaskActive(questId1, onBody, player)
						|| questIsTaskActive(questId1, onRats, player)
							|| questIsTaskActive(questId2, onBody2, player)
								|| questIsTaskActive(questId2, onRats2, player);
							
	
	return onTask;

}

// ----------------------------------------------------------------------

boolean legacy_button_jawatracks_zef_condition_onDroidDead (obj_id player, obj_id npc)
{	
	int questId1 = questGetQuestId("quest/legacy_button_jawatracks_pt2");
	int onBody = groundquests.getTaskId(questId1, "legacy_button_jawatracks_e16"); 
	int questId2 = questGetQuestId("quest/legacy_button_jawatracks_reb_pt2");
	int onBody2 = groundquests.getTaskId(questId2, "legacy_button_jawatracks_e16r");
	
	boolean onTask = questIsTaskActive(questId1, onBody, player)
					||questIsTaskActive(questId2, onBody2, player) ;
	
	return onTask;

}

// ----------------------------------------------------------------------

boolean legacy_button_jawatracks_zef_condition_onKillDroid (obj_id player, obj_id npc)
{	
	int questId1 = questGetQuestId("quest/legacy_button_jawatracks_pt2");
	int onDroid = groundquests.getTaskId(questId1, "legacy_button_jawatracks_e10");  
	int questId2 = questGetQuestId("quest/legacy_button_jawatracks_reb_pt2");
	int onDroid2 = groundquests.getTaskId(questId2, "legacy_button_jawatracks_e10r");  
	
	boolean onTask =  questIsTaskActive(questId2, onDroid2, player) 
					 		||questIsTaskActive(questId1, onDroid, player);
	
	return onTask;

}

// ----------------------------------------------------------------------

boolean legacy_button_jawatracks_zef_condition_failSandCrawlerImp (obj_id player, obj_id npc)
{

            int questId1 = questGetQuestId("quest/legacy_button_jawatracks_pt2");
			int questId2 = questGetQuestId("quest/legacy_button_jawatracks_pt3_v2");

                        

            boolean OnTask = (questIsQuestComplete (questId1, player)) 
            				&& ( !(questIsQuestActive(questId2, player)) 
            					&& 	!(questIsQuestComplete (questId2, player)));

                                                                        

            return OnTask;                                                   

            

}

// ----------------------------------------------------------------------

boolean legacy_button_jawatracks_zef_condition_questTracks2Complete (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/legacy_button_jawatracks_pt2");
	int questId2 = questGetQuestId("quest/legacy_button_jawatracks_reb_pt2");
	
	boolean OnTask = 	questIsQuestComplete(questId1, player)
							||questIsQuestComplete(questId2, player);
	
	return OnTask;

}

// ----------------------------------------------------------------------

boolean legacy_button_jawatracks_zef_condition_failSandCrawlerReb (obj_id player, obj_id npc)
{

            int questId1 = questGetQuestId("quest/legacy_button_jawatracks_reb_pt2");
			int questId2 = questGetQuestId("quest/legacy_button_jawatracks_reb_pt3_v2");

                        

            boolean OnTask = (questIsQuestComplete (questId1, player)) 
            				&& ( !(questIsQuestActive(questId2, player)) 
            					&& 	!(questIsQuestComplete (questId2, player)));

                                                                        

            return OnTask;                                                   

            

}

// ----------------------------------------------------------------------

boolean legacy_button_jawatracks_zef_condition_onWompratsDead (obj_id player, obj_id npc)
{	
	int questId1 = questGetQuestId("quest/legacy_button_jawatracks_pt2");
	int onBody = groundquests.getTaskId(questId1, "legacy_button_jawatracks_e118"); 
	int questId2 = questGetQuestId("quest/legacy_button_jawatracks_reb_pt2");
	int onBody2 = groundquests.getTaskId(questId2, "legacy_button_jawatracks_e118r"); 
	
	boolean onTask = questIsTaskActive(questId1, onBody, player)
					||questIsTaskActive(questId2, onBody2, player) ;
	
	return onTask;

}

// ----------------------------------------------------------------------

boolean legacy_button_jawatracks_zef_condition_playerDeletedQuest (obj_id player, obj_id npc)
{
	return ((groundquests.hasCompletedQuest(player, "legacy_button_jawatracks")&&
	 		!(groundquests.isQuestActiveOrComplete(player, "legacy_button_jawatracks_pt2"))) ||
	 		(groundquests.hasCompletedQuest(player, "legacy_button_jawatracks_reb")&&
	 		!(groundquests.isQuestActiveOrComplete(player, "legacy_button_jawatracks_reb_pt2"))));
}

// ----------------------------------------------------------------------

boolean legacy_button_jawatracks_zef_condition_onFailedHarvestor (obj_id player, obj_id npc)
{	
	int questId1 = questGetQuestId("quest/legacy_button_jawatracks_pt2");
	int onfailedHarvestor = groundquests.getTaskId(questId1, "legacy_button_jawatracks_e116"); 
	int questId2 = questGetQuestId("quest/legacy_button_jawatracks_reb_pt2");
	int onfailedHarvestor2 = groundquests.getTaskId(questId2, "legacy_button_jawatracks_e116r");
	
	boolean onTask = questIsTaskActive(questId1, onfailedHarvestor, player)
					||questIsTaskActive(questId2, onfailedHarvestor2, player);
	
	return onTask;

}

// ----------------------------------------------------------------------

boolean legacy_button_jawatracks_zef_condition_onTracks2Quest (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/legacy_button_jawatracks_pt2");
	int questId2 = questGetQuestId("quest/legacy_button_jawatracks_reb_pt2");
	
	
	boolean OnTask =  	(questIsQuestActive(questId1, player))
							||(questIsQuestActive(questId2, player)) ;
						
	return OnTask;					
	
}

// ----------------------------------------------------------------------

boolean legacy_button_jawatracks_zef_condition_onkillWomprats (obj_id player, obj_id npc)
{	
	int questId1 = questGetQuestId("quest/legacy_button_jawatracks_pt2");
	int onBody = groundquests.getTaskId(questId1, "legacy_button_jawatracks_e117"); 
	int questId2 = questGetQuestId("quest/legacy_button_jawatracks_reb_pt2");
	int onBody2 = groundquests.getTaskId(questId2, "legacy_button_jawatracks_e117r"); 
	
	boolean onTask = questIsTaskActive(questId1, onBody, player)
					||questIsTaskActive(questId2, onBody2, player) ;
	
	return onTask;

}

// ======================================================================
// Script Actions
// ======================================================================

void legacy_button_jawatracks_zef_action_signaldrioid (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "legacy_button_jawatracks_launch_e14");
}

// ----------------------------------------------------------------------

void legacy_button_jawatracks_zef_action_giveDataPad (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "legacy_button_jawatracks_launch_e17");
}

// ----------------------------------------------------------------------

void legacy_button_jawatracks_zef_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void legacy_button_jawatracks_zef_action_giveSandCrawlerImp (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "legacy_button_jawatracks_pt3_v2");

}

// ----------------------------------------------------------------------

void legacy_button_jawatracks_zef_action_giveSandCrawlerReb (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "legacy_button_jawatracks_reb_pt3_v2");

}

// ----------------------------------------------------------------------

void legacy_button_jawatracks_zef_action_giveZefQuest (obj_id player, obj_id npc)
{
	if (groundquests.hasCompletedQuest(player, "legacy_button_jawatracks"))
		{ 
			groundquests.grantQuest(player, "legacy_button_jawatracks_pt2");
		}
	else if (groundquests.hasCompletedQuest(player, "legacy_button_jawatracks_reb"))
		{ 
			groundquests.grantQuest(player, "legacy_button_jawatracks_reb_pt2");
		}

}

// ----------------------------------------------------------------------

void legacy_button_jawatracks_zef_action_signalWomprats (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "legacy_button_jawatracks_launch_e117");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int legacy_button_jawatracks_zef_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good seeing you again my friend. Thanks so much for your help with those droids. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not a problem.
	if (response == "s_48")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			//-- NPC: Thanks.
			string_id message = new string_id (c_stringFile, "s_53");
			utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need the location of the Sand Crawler. 
	if (response == "s_49")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			legacy_button_jawatracks_zef_action_giveSandCrawlerReb (player, npc);

			//-- NPC: Here it is.
			string_id message = new string_id (c_stringFile, "s_51");
			utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need the location of the Sand Crawler.
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			legacy_button_jawatracks_zef_action_giveSandCrawlerImp (player, npc);

			//-- NPC: Here it is.
			string_id message = new string_id (c_stringFile, "s_52");
			utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int legacy_button_jawatracks_zef_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you done with my data pad yet? I really need it to start calculating future prices for next cycle water. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just going to get to it now.
	if (response == "s_151")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "cough_polite");

			//-- NPC: Thanks.
			string_id message = new string_id (c_stringFile, "s_152");
			utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Use it? I thought you where going to take care of getting me the information.
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			legacy_button_jawatracks_zef_action_facePlayer (player, npc);

			//-- NPC: Look, just open your backpack and download the data from my datapad.
			string_id message = new string_id (c_stringFile, "s_154");
			utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int legacy_button_jawatracks_zef_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Great. With those rodents taken care of I have a chance of getting this farm profitable. How can I help you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just let me have an inventory of what you bought from the Jawas. 
	if (response == "s_84")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "thank");

			legacy_button_jawatracks_zef_action_giveDataPad (player, npc);

			//-- NPC: Sure. Here you go. Just download what you need.
			string_id message = new string_id (c_stringFile, "s_46");
			utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int legacy_button_jawatracks_zef_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Argggh! That was my last harvester! Between that and the womp rats I am going to have to give up this farm!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is there anything I can do?
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			//-- NPC: The only hope I have is to get more harvesters on line fast. But those greater desert womp rats out there gnaw on the cables and damage them faster than I can get them operational.
			string_id message = new string_id (c_stringFile, "s_72");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I could kill the womp rats for you.
			boolean hasResponse0 = false;
			if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_78");

				utils.setScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Look can I get some information from you?
	if (response == "s_73")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			//-- NPC: 
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sorry. What can I do to help?
			boolean hasResponse0 = false;
			if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't have time for this.
			boolean hasResponse1 = false;
			if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_75");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				utils.setScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int legacy_button_jawatracks_zef_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The only hope I have is to get more harvesters on line fast. But those greater desert womp rats out there gnaw on the cables and damage them faster than I can get them operational.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I could kill the womp rats for you.
	if (response == "s_78")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			legacy_button_jawatracks_zef_action_signalWomprats (player, npc);

			//-- NPC: Yes that would help. Its the big ones that do the most damage. Get their population under control.
			string_id message = new string_id (c_stringFile, "s_79");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Its as good as done.
			boolean hasResponse0 = false;
			if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				utils.setScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int legacy_button_jawatracks_zef_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes that would help. Its the big ones that do the most damage. Get their population under control.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Its as good as done.
	if (response == "s_80")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			//-- NPC: Thanks.
			string_id message = new string_id (c_stringFile, "s_81");
			utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int legacy_button_jawatracks_zef_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry. What can I do to help?
	if (response == "s_75")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			//-- NPC: The only hope I have is to get more harvesters on line fast. But those greater desert womp rats out there gnaw on the cables and damage them faster than I can get them operational.
			string_id message = new string_id (c_stringFile, "s_72");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I could kill the womp rats for you.
			boolean hasResponse0 = false;
			if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_78");

				utils.setScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't have time for this.
	if (response == "s_76")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: And I don't have time for you then. 
			string_id message = new string_id (c_stringFile, "s_77");
			utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int legacy_button_jawatracks_zef_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh how can I thank you? Those droids were going to ruin me. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just let me have an inventory of what you bought from the Jawas. 
	if (response == "s_45")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "thank");

			legacy_button_jawatracks_zef_action_giveDataPad (player, npc);

			//-- NPC: Sure. Here you go. Just download what you need.
			string_id message = new string_id (c_stringFile, "s_46");
			utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int legacy_button_jawatracks_zef_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Help me! Those droids I bought are destroying everything!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just tell me what to do.
	if (response == "s_36")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "gesticulate_wildly");

			legacy_button_jawatracks_zef_action_signaldrioid (player, npc);

			//-- NPC: Run over to my harvesters and disarm the explosives on them!
			string_id message = new string_id (c_stringFile, "s_38");
			utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is going on?
	if (response == "s_40")
	{
		doAnimationAction (player, "embarrassed");

		legacy_button_jawatracks_zef_action_facePlayer (player, npc);

		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "cover_eyes");

			legacy_button_jawatracks_zef_action_facePlayer (player, npc);

			//-- NPC: I bought some supplies and some cheap droids from a Jawa trading party a while ago. The droids that  I purchased were supposed to be reprogrammed to maintain moisture harvesters. But they weren't!
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: OK what do you need me to to?
			boolean hasResponse0 = false;
			if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: They have gone around the bend?
			boolean hasResponse1 = false;
			if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_54");

				utils.setScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am not interested in helping.
	if (response == "s_62")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "gesticulate_wildly");

			//-- NPC: Please! Help!
			string_id message = new string_id (c_stringFile, "s_64");
			utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int legacy_button_jawatracks_zef_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I bought some supplies and some cheap droids from a Jawa trading party a while ago. The droids that  I purchased were supposed to be reprogrammed to maintain moisture harvesters. But they weren't!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: OK what do you need me to to?
	if (response == "s_44")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "gesticulate_wildly");

			legacy_button_jawatracks_zef_action_signaldrioid (player, npc);

			//-- NPC: Run over to my harvesters and disarm the explosives on them!
			string_id message = new string_id (c_stringFile, "s_38");
			utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: They have gone around the bend?
	if (response == "s_54")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes!  They decided that my harvester was too run down to function so they decided to demolish it. They have set a charge that will go off in 60 seconds. Stop them before they detonate the charge! And disarm the explosives! 
			string_id message = new string_id (c_stringFile, "s_56");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Just tell me where.
			boolean hasResponse0 = false;
			if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I think I will stay out of this one. 
			boolean hasResponse1 = false;
			if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_58");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_60");

				utils.setScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int legacy_button_jawatracks_zef_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes!  They decided that my harvester was too run down to function so they decided to demolish it. They have set a charge that will go off in 60 seconds. Stop them before they detonate the charge! And disarm the explosives! 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just tell me where.
	if (response == "s_58")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "gesticulate_wildly");

			legacy_button_jawatracks_zef_action_signaldrioid (player, npc);

			//-- NPC: Run over to my harvesters and disarm the explosives on them!
			string_id message = new string_id (c_stringFile, "s_38");
			utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I think I will stay out of this one. 
	if (response == "s_60")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "gesticulate_wildly");

			//-- NPC: Please! Help!
			string_id message = new string_id (c_stringFile, "s_64");
			utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int legacy_button_jawatracks_zef_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] D1
	//-- NPC: Hello. Sorry, I have already claimed this abandoned homestead. You have to find your own.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am not here to take this farm. Have you just moved in?
	if (response == "s_115")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			legacy_button_jawatracks_zef_action_facePlayer (player, npc);

			//-- NPC: The place has been abandoned for a while now. Last residents where killed by roving Sand People or the Rebels, or the Empire. It all depends on who you talk to. But the place in mine now. I think I can turn it around and be profitable.
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I understand. I'll be on my way then.
			boolean hasResponse0 = false;
			if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85");

				utils.setScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No problem. 
	if (response == "s_87")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good. Move along. 
			string_id message = new string_id (c_stringFile, "s_89");
			utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Was there something I was supposed to do for you?
	if (response == "s_91")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			legacy_button_jawatracks_zef_action_giveZefQuest (player, npc);

			//-- NPC: Yes, as a matter of fact, there was. 
			string_id message = new string_id (c_stringFile, "s_93");
			utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int legacy_button_jawatracks_zef_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The place has been abandoned for a while now. Last residents where killed by roving Sand People or the Rebels, or the Empire. It all depends on who you talk to. But the place in mine now. I think I can turn it around and be profitable.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I understand. I'll be on my way then.
	if (response == "s_85")
	{
		//-- [NOTE] 
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good. Move along. 
			string_id message = new string_id (c_stringFile, "s_89");
			utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.legacy_button_jawatracks_zef");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Zef Ando");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Zef Ando");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.legacy_button_jawatracks_zef");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (legacy_button_jawatracks_zef_condition_questTracks2Complete (player, npc))
	{
		doAnimationAction (npc, "greet");

		legacy_button_jawatracks_zef_action_facePlayer (player, npc);

		//-- NPC: Good seeing you again my friend. Thanks so much for your help with those droids. 
		string_id message = new string_id (c_stringFile, "s_101");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Not a problem.
		boolean hasResponse0 = false;
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I need the location of the Sand Crawler. 
		boolean hasResponse1 = false;
		if (legacy_button_jawatracks_zef_condition_failSandCrawlerReb (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I need the location of the Sand Crawler.
		boolean hasResponse2 = false;
		if (legacy_button_jawatracks_zef_condition_failSandCrawlerImp (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_48");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_49");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_50");

			utils.setScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId", 1);

			npcStartConversation (player, npc, "legacy_button_jawatracks_zef", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (legacy_button_jawatracks_zef_condition_onDataDownload (player, npc))
	{
		doAnimationAction (npc, "check_wrist_device");

		//-- NPC: Are you done with my data pad yet? I really need it to start calculating future prices for next cycle water. 
		string_id message = new string_id (c_stringFile, "s_150");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Just going to get to it now.
		boolean hasResponse0 = false;
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Use it? I thought you where going to take care of getting me the information.
		boolean hasResponse1 = false;
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_151");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_153");

			utils.setScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId", 5);

			npcStartConversation (player, npc, "legacy_button_jawatracks_zef", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (legacy_button_jawatracks_zef_condition_onWompratsDead (player, npc))
	{
		//-- NPC: Great. With those rodents taken care of I have a chance of getting this farm profitable. How can I help you?
		string_id message = new string_id (c_stringFile, "s_83");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Just let me have an inventory of what you bought from the Jawas. 
		boolean hasResponse0 = false;
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_84");

			utils.setScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId", 8);

			npcStartConversation (player, npc, "legacy_button_jawatracks_zef", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (legacy_button_jawatracks_zef_condition_onkillWomprats (player, npc))
	{
		doAnimationAction (npc, "backhand");

		legacy_button_jawatracks_zef_action_facePlayer (player, npc);

		//-- NPC: I still need those womp rats killed.
		string_id message = new string_id (c_stringFile, "s_82");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (legacy_button_jawatracks_zef_condition_onFailedHarvestor (player, npc))
	{
		doAnimationAction (npc, "claw");

		legacy_button_jawatracks_zef_action_facePlayer (player, npc);

		//-- NPC: Argggh! That was my last harvester! Between that and the womp rats I am going to have to give up this farm!
		string_id message = new string_id (c_stringFile, "s_70");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Is there anything I can do?
		boolean hasResponse0 = false;
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Look can I get some information from you?
		boolean hasResponse1 = false;
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_71");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_73");

			utils.setScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId", 10);

			npcStartConversation (player, npc, "legacy_button_jawatracks_zef", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (legacy_button_jawatracks_zef_condition_onDroidDead (player, npc))
	{
		doAnimationAction (npc, "applause_excited");

		legacy_button_jawatracks_zef_action_facePlayer (player, npc);

		//-- NPC: Oh how can I thank you? Those droids were going to ruin me. 
		string_id message = new string_id (c_stringFile, "s_145");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Just let me have an inventory of what you bought from the Jawas. 
		boolean hasResponse0 = false;
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_45");

			utils.setScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId", 16);

			npcStartConversation (player, npc, "legacy_button_jawatracks_zef", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (legacy_button_jawatracks_zef_condition_onKillDroid (player, npc))
	{
		doAnimationAction (npc, "gesticulate_wildly");

		legacy_button_jawatracks_zef_action_facePlayer (player, npc);

		//-- NPC: What are you waiting around for! Disarm that bomb!
		string_id message = new string_id (c_stringFile, "s_144");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (legacy_button_jawatracks_zef_condition_onTracks2Quest (player, npc))
	{
		doAnimationAction (npc, "gesticulate_wildly");

		legacy_button_jawatracks_zef_action_facePlayer (player, npc);

		//-- NPC: Help me! Those droids I bought are destroying everything!
		string_id message = new string_id (c_stringFile, "s_34");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Just tell me what to do.
		boolean hasResponse0 = false;
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: What is going on?
		boolean hasResponse1 = false;
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I am not interested in helping.
		boolean hasResponse2 = false;
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_36");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_40");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_62");

			utils.setScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId", 19);

			npcStartConversation (player, npc, "legacy_button_jawatracks_zef", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] D1
	if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "shush");

		legacy_button_jawatracks_zef_action_facePlayer (player, npc);

		//-- NPC: Hello. Sorry, I have already claimed this abandoned homestead. You have to find your own.
		string_id message = new string_id (c_stringFile, "s_805");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am not here to take this farm. Have you just moved in?
		boolean hasResponse0 = false;
		if (legacy_button_jawatracks_zef_condition_onTracks2Quest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No problem. 
		boolean hasResponse1 = false;
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Was there something I was supposed to do for you?
		boolean hasResponse2 = false;
		if (legacy_button_jawatracks_zef_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_115");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_87");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_91");

			utils.setScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId", 24);

			npcStartConversation (player, npc, "legacy_button_jawatracks_zef", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "legacy_button_jawatracks_zef")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

	if (branchId == 1 && legacy_button_jawatracks_zef_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && legacy_button_jawatracks_zef_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && legacy_button_jawatracks_zef_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && legacy_button_jawatracks_zef_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && legacy_button_jawatracks_zef_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && legacy_button_jawatracks_zef_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && legacy_button_jawatracks_zef_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && legacy_button_jawatracks_zef_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && legacy_button_jawatracks_zef_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && legacy_button_jawatracks_zef_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && legacy_button_jawatracks_zef_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && legacy_button_jawatracks_zef_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && legacy_button_jawatracks_zef_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.legacy_button_jawatracks_zef.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

