// ======================================================================
//
// ep3_forest_sertild.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/ep3_forest_sertild";

// ======================================================================
// Script Conditions
// ======================================================================

boolean ep3_forest_sertild_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean ep3_forest_sertild_condition_isTaskActiveOne (obj_id player, obj_id npc)
{
	return groundquests.isQuestActiveOrComplete(player, "ep3_forest_dahlia_epic_3");
}

// ----------------------------------------------------------------------

boolean ep3_forest_sertild_condition_hasCompletedQuestOne (obj_id player, obj_id npc)
{
		return groundquests.isQuestActiveOrComplete(player, "ep3_forest_dahlia_epic_4");
}

// ======================================================================
// Script Actions
// ======================================================================

void ep3_forest_sertild_action_giveSignalOne (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "start");
	// Apply the first quest to the player here
	groundquests.grantQuest(player, "ep3_forest_dahlia_epic_4");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int ep3_forest_sertild_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Sertild nods.] Mercenary..

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am here on our Lady's word. She told me to give you this.
	if (response == "s_831")
	{
		//-- [NOTE] 
		if (ep3_forest_sertild_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Sertild nods again.] Good, then let's begin this. Are you ready?
			string_id message = new string_id (c_stringFile, "s_833");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Not yet. Wait one more second.
			boolean hasResponse0 = false;
			if (ep3_forest_sertild_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Let's do this.
			boolean hasResponse1 = false;
			if (ep3_forest_sertild_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_835");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_839");

				utils.setScriptVar (player, "conversation.ep3_forest_sertild.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_sertild.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_sertild_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Sertild nods again.] Good, then let's begin this. Are you ready?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not yet. Wait one more second.
	if (response == "s_835")
	{
		//-- [NOTE] 
		if (ep3_forest_sertild_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Sertild nods.]
			string_id message = new string_id (c_stringFile, "s_837");
			utils.removeScriptVar (player, "conversation.ep3_forest_sertild.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Let's do this.
	if (response == "s_839")
	{
		//-- [NOTE] 
		if (ep3_forest_sertild_condition__defaultCondition (player, npc))
		{
			ep3_forest_sertild_action_giveSignalOne (player, npc);

			//-- NPC: It is done...
			string_id message = new string_id (c_stringFile, "s_841");
			utils.removeScriptVar (player, "conversation.ep3_forest_sertild.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.ep3_forest_sertild");

	setCondition (self, CONDITION_CONVERSABLE);
	setName (self, new string_id( "ep3/npc_names", "sertild" ));
	setInvulnerable(self, true);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setName (self, new string_id( "ep3/npc_names", "sertild" ));
	setInvulnerable(self, true);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.ep3_forest_sertild");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (ep3_forest_sertild_condition_hasCompletedQuestOne (player, npc))
	{
		//-- NPC: [Sertild says nothing, concentrating on the matters at hand.]
		string_id message = new string_id (c_stringFile, "s_827");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_sertild_condition_isTaskActiveOne (player, npc))
	{
		//-- NPC: [Sertild nods.] Mercenary..
		string_id message = new string_id (c_stringFile, "s_829");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am here on our Lady's word. She told me to give you this.
		boolean hasResponse0 = false;
		if (ep3_forest_sertild_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_831");

			utils.setScriptVar (player, "conversation.ep3_forest_sertild.branchId", 2);

			npcStartConversation (player, npc, "ep3_forest_sertild", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_sertild_condition__defaultCondition (player, npc))
	{
		//-- NPC: ...
		string_id message = new string_id (c_stringFile, "s_843");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "ep3_forest_sertild")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.ep3_forest_sertild.branchId");

	if (branchId == 2 && ep3_forest_sertild_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && ep3_forest_sertild_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.ep3_forest_sertild.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

