// ======================================================================
//
// greeter_tyrena_load_lifter.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.features;
include library.skill;
include library.space_flags;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/greeter_tyrena_load_lifter";

// ======================================================================
// Script Conditions
// ======================================================================

boolean greeter_tyrena_load_lifter_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean greeter_tyrena_load_lifter_condition_remembersPlayer (obj_id player, obj_id npc)
{
	return ( utils.hasScriptVar( player, "metNewbiePilot" ));
}

// ----------------------------------------------------------------------

boolean greeter_tyrena_load_lifter_condition_isAnImperialPilot (obj_id player, obj_id npc)
{
	return space_flags.isImperialPilot(player);
}

// ----------------------------------------------------------------------

boolean greeter_tyrena_load_lifter_condition_isARebelPilot (obj_id player, obj_id npc)
{
	return space_flags.isRebelPilot(player);
}

// ----------------------------------------------------------------------

boolean greeter_tyrena_load_lifter_condition_isPrivateerPilot (obj_id player, obj_id npc)
{
	return space_flags.isNeutralPilot(player);
}

// ----------------------------------------------------------------------

boolean greeter_tyrena_load_lifter_condition_hasSpaceExpansion (obj_id player, obj_id npc)
{
	return ( features.isSpaceEdition( player ) );
}

// ----------------------------------------------------------------------

boolean greeter_tyrena_load_lifter_condition_hasSpaceShip (obj_id player, obj_id npc)
{
	return ( space_quest.hasShip( player ) );
}

// ======================================================================
// Script Actions
// ======================================================================

void greeter_tyrena_load_lifter_action_rememberPlayer (obj_id player, obj_id npc)
{
	utils.setScriptVar( player, "metNewbiePilot", true );
}

// ----------------------------------------------------------------------

void greeter_tyrena_load_lifter_action_grantQuestOne (obj_id player, obj_id npc)
{
	space_quest.grantQuest ( player, "delivery", "tatooine_newbie_1");
	space_quest.grantNewbieShip( player, "rebel");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int greeter_tyrena_load_lifter_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] "Excuse me, but I am on a break."
	//-- NPC: 01000101 01111000 01100011 01110101 01110011 01100101 00100000 01101101 01100101 00101100 00100000 01100010 01110101 01110100 00100000 01001001 00100000 01100001 01101101 00100000 01101111 01101110 00100000 01100001 00100000 01100010 01110010 01100101 01100001 01101011.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Pardon?
	if (response == "s_587012f7")
	{
		//-- [NOTE] "I am on a break... between lifts."
		if (greeter_tyrena_load_lifter_condition__defaultCondition (player, npc))
		{
			//-- NPC: 01001001 00100000 01100001 01101101 00100000 01101111 01101110 00100000 01100001 00100000 01100010 01110010 01100101 01100001 01101011 00101110 00101110 00101110 00100000 01100010 01100101 01110100 01110111 01100101 01100101 01101110 00100000 01101100 01101001 01100110 01110100 01110011.
			string_id message = new string_id (c_stringFile, "s_54423fa5");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Um, right. Never mind.
			boolean hasResponse0 = false;
			if (greeter_tyrena_load_lifter_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e24faab1");

				utils.setScriptVar (player, "conversation.greeter_tyrena_load_lifter.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.greeter_tyrena_load_lifter.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh. Um, 1011 1101?
	if (response == "s_155345dc")
	{
		//-- [NOTE] "You are speaking nonsense."
		if (greeter_tyrena_load_lifter_condition__defaultCondition (player, npc))
		{
			//-- NPC: 01011001 01101111 01110101 00100000 01100001 01110010 01100101 00100000 01110011 01110000 01100101 01100001 01101011 01101001 01101110 01100111 00100000 01101110 01101111 01101110 01110011 01100101 01101110 01110011 01100101.
			string_id message = new string_id (c_stringFile, "s_99e1932f");
			utils.removeScriptVar (player, "conversation.greeter_tyrena_load_lifter.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int greeter_tyrena_load_lifter_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] "I am on a break... between lifts."
	//-- NPC: 01001001 00100000 01100001 01101101 00100000 01101111 01101110 00100000 01100001 00100000 01100010 01110010 01100101 01100001 01101011 00101110 00101110 00101110 00100000 01100010 01100101 01110100 01110111 01100101 01100101 01101110 00100000 01101100 01101001 01100110 01110100 01110011.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Um, right. Never mind.
	if (response == "s_e24faab1")
	{
		//-- [NOTE] "I must be focused and ready."
		if (greeter_tyrena_load_lifter_condition__defaultCondition (player, npc))
		{
			//-- NPC: 01001001 00100000 01101101 01110101 01110011 01110100 00100000 01100010 01100101 00100000 01100110 01101111 01100011 01110101 01110011 01100101 01100100 00100000 01100001 01101110 01100100 00100000 01110010 01100101 01100001 01100100 01111001.
			string_id message = new string_id (c_stringFile, "s_ca271611");
			utils.removeScriptVar (player, "conversation.greeter_tyrena_load_lifter.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.greeter_tyrena_load_lifter");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	setCondition( self, CONDITION_SPACE_INTERESTING );
	//setName (self, "CLL-8 (a binary load lifter)");

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	setCondition( self, CONDITION_SPACE_INTERESTING );
	//setName (self, "CLL-8 (a binary load lifter)");

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable(self, true);
	faceTo( self, player );
	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	setCondition( self, CONDITION_SPACE_INTERESTING );
	
	detachScript (self, "conversation.greeter_tyrena_load_lifter");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] "Excuse me, but I am on a break."
	if (greeter_tyrena_load_lifter_condition__defaultCondition (player, npc))
	{
		//-- NPC: 01000101 01111000 01100011 01110101 01110011 01100101 00100000 01101101 01100101 00101100 00100000 01100010 01110101 01110100 00100000 01001001 00100000 01100001 01101101 00100000 01101111 01101110 00100000 01100001 00100000 01100010 01110010 01100101 01100001 01101011.
		string_id message = new string_id (c_stringFile, "s_520cd709");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Pardon?
		boolean hasResponse0 = false;
		if (greeter_tyrena_load_lifter_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Oh. Um, 1011 1101?
		boolean hasResponse1 = false;
		if (greeter_tyrena_load_lifter_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_587012f7");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_155345dc");

			utils.setScriptVar (player, "conversation.greeter_tyrena_load_lifter.branchId", 1);

			npcStartConversation (player, npc, "greeter_tyrena_load_lifter", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "greeter_tyrena_load_lifter")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.greeter_tyrena_load_lifter.branchId");

	if (branchId == 1 && greeter_tyrena_load_lifter_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && greeter_tyrena_load_lifter_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.greeter_tyrena_load_lifter.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

