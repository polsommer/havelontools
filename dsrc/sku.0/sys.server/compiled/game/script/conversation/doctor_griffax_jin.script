// ======================================================================
//
// doctor_griffax_jin.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.create;
include library.groundquests;
include library.stealth;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/doctor_griffax_jin";

// ======================================================================
// Script Conditions
// ======================================================================

boolean doctor_griffax_jin_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean doctor_griffax_jin_condition_hasTask (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "outbreak_quest_facility_04", "findJin")
	|| groundquests.isTaskActive(player, "outbreak_quest_facility_04", "defeatJin");
}

// ======================================================================
// Script Actions
// ======================================================================

void doctor_griffax_jin_action_transformMonster (obj_id player, obj_id npc)
{
	npcEndConversation (npc);
	string_id barkString = new string_id("theme_park/outbreak/outbreak", "griffax_jin_last_words");
	chat.chat(npc, barkString);
	
	dictionary params = new dictionary();
	params.put("player", player);
	messageTo(npc, "transformIntoMonster", params, 4, false);
	ai_lib.setMood(npc, "npc_dead_02");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int doctor_griffax_jin_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: (Cough)

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Doctor Jin, I have to get you out of here.
	if (response == "s_39")
	{
		//-- [NOTE] 
		if (doctor_griffax_jin_condition__defaultCondition (player, npc))
		{
			//-- NPC: I...I'm fine. Who are you?
			string_id message = new string_id (c_stringFile, "s_40");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm here to evacuate you.
			boolean hasResponse0 = false;
			if (doctor_griffax_jin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				utils.setScriptVar (player, "conversation.doctor_griffax_jin.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.doctor_griffax_jin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int doctor_griffax_jin_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I...I'm fine. Who are you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm here to evacuate you.
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (doctor_griffax_jin_condition__defaultCondition (player, npc))
		{
			//-- NPC: The virus...has it escaped the facility?
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: The virus has escaped the facility and ravaged a good portion of Dathomir.
			boolean hasResponse0 = false;
			if (doctor_griffax_jin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				utils.setScriptVar (player, "conversation.doctor_griffax_jin.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.doctor_griffax_jin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int doctor_griffax_jin_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The virus...has it escaped the facility?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The virus has escaped the facility and ravaged a good portion of Dathomir.
	if (response == "s_43")
	{
		//-- [NOTE] 
		if (doctor_griffax_jin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh no...We have got to destroy the facility. (Cough)
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Perhaps, but not until you are evacuated and the unmutated Blackwing sample are safe.
			boolean hasResponse0 = false;
			if (doctor_griffax_jin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_45");

				utils.setScriptVar (player, "conversation.doctor_griffax_jin.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.doctor_griffax_jin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int doctor_griffax_jin_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh no...We have got to destroy the facility. (Cough)

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Perhaps, but not until you are evacuated and the unmutated Blackwing sample are safe.
	if (response == "s_45")
	{
		//-- [NOTE] 
		if (doctor_griffax_jin_condition__defaultCondition (player, npc))
		{
			//-- NPC: (Cough) How...how do you know about the sample?
			string_id message = new string_id (c_stringFile, "s_47");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I've been sent by Vader to collect the sample.
			boolean hasResponse0 = false;
			if (doctor_griffax_jin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				utils.setScriptVar (player, "conversation.doctor_griffax_jin.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.doctor_griffax_jin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int doctor_griffax_jin_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: (Cough) How...how do you know about the sample?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've been sent by Vader to collect the sample.
	if (response == "s_49")
	{
		//-- [NOTE] 
		if (doctor_griffax_jin_condition__defaultCondition (player, npc))
		{
			doctor_griffax_jin_action_transformMonster (player, npc);

			//-- NPC: It is too dangerous. So many lives lost...only to come back. I'm (Cough) not going to let you have it! Oh no....noooo....Ack!
			string_id message = new string_id (c_stringFile, "s_56");
			utils.removeScriptVar (player, "conversation.doctor_griffax_jin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

const string MENU_STRING_FILE			= "theme_park/outbreak/outbreak";
const string_id SID_NOT_ENOUGH_POWER		= new string_id(MENU_STRING_FILE, "not_enough_power");
const string_id SID_MAIN_PWR_ON				= new string_id(MENU_STRING_FILE, "main_power_on");
const string_id SID_MAIN_PWR_OFF			= new string_id(MENU_STRING_FILE, "main_power_off");
const string_id SID_BKUP_PWR_ON				= new string_id(MENU_STRING_FILE, "backup_power_on");
const string_id SID_BKUP_PWR_OFF			= new string_id(MENU_STRING_FILE, "backup_power_off");
const string_id SID_DMG_CTRL_SYS_ON			= new string_id(MENU_STRING_FILE, "damage_control_info_sys_on");
const string_id SID_DMG_CTRL_SYS_OFF		= new string_id(MENU_STRING_FILE, "damage_control_info_sys_off");
const string_id SID_COMM_SYS_ON				= new string_id(MENU_STRING_FILE, "internal_communications_sys_on");
const string_id SID_COMM_SYS_OFF			= new string_id(MENU_STRING_FILE, "internal_communications_sys_off");
const string_id SID_ACCESS_DENIED			= new string_id(MENU_STRING_FILE, "access_denied");
const string_id SID_NO_BKUP_PWR				= new string_id(MENU_STRING_FILE, "no_bkup_power");

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.doctor_griffax_jin");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.doctor_griffax_jin");

	return SCRIPT_CONTINUE;
}

messageHandler transformIntoMonster()
{
	if((params == null) || (params.isEmpty()))
	{
		return SCRIPT_CONTINUE;
	}
	if(!params.containsKey("player"))
	{
		CustomerServiceLog("outbreak_themepark", "doctor_griffax_jin.transformIntoMonster() player param not found.");
		return SCRIPT_CONTINUE;
	}
	obj_id player = params.getObjId("player");
	if(!isValidId(player) || !exists(player))
	{
		CustomerServiceLog("outbreak_themepark", "doctor_griffax_jin.transformIntoMonster() player OID invalid.");
		return SCRIPT_CONTINUE;
	}
	npcEndConversation (self);
	groundquests.sendSignal(player, "hasFoundJin"); 
	location curLoc = getLocation(self);
	if(curLoc == null)
		return SCRIPT_CONTINUE;
		
	obj_id mob = create.object("outbreak_scientist_griffax_jin_afflicted", curLoc);
	if(!isValidId(mob) || !exists(mob))
		return SCRIPT_CONTINUE;
	
	setObjVar(mob, "owner", player);
	stealth.testInvisNonCombatAction(player, self);
	startCombat(mob, player);

	destroyObject(self);
	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (doctor_griffax_jin_condition_hasTask (player, npc))
	{
		//-- NPC: (Cough)
		string_id message = new string_id (c_stringFile, "s_38");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Doctor Jin, I have to get you out of here.
		boolean hasResponse0 = false;
		if (doctor_griffax_jin_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_39");

			utils.setScriptVar (player, "conversation.doctor_griffax_jin.branchId", 1);

			npcStartConversation (player, npc, "doctor_griffax_jin", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (doctor_griffax_jin_condition__defaultCondition (player, npc))
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- NPC: It is every person for themselves now. I can't help you.
		string_id message = new string_id (c_stringFile, "s_65");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "doctor_griffax_jin")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.doctor_griffax_jin.branchId");

	if (branchId == 1 && doctor_griffax_jin_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && doctor_griffax_jin_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && doctor_griffax_jin_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && doctor_griffax_jin_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && doctor_griffax_jin_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.doctor_griffax_jin.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

