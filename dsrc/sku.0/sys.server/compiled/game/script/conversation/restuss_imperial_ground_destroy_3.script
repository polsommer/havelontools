// ======================================================================
//
// restuss_imperial_ground_destroy_3.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.groundquests;
include library.restuss_event;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/restuss_imperial_ground_destroy_3";

// ======================================================================
// Script Conditions
// ======================================================================

boolean restuss_imperial_ground_destroy_3_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ground_destroy_3_condition_stage3ready (obj_id player, obj_id npc)
{
	if (factions.isImperial(player)&& restuss_event.isRestussInStageThree(npc))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ground_destroy_3_condition_mission1Active (obj_id player, obj_id npc)
{
	if (groundquests.isQuestActive(player, "restuss_imperial_st3_destroy_installation_1") ||
		groundquests.isQuestActive(player, "restuss_imperial_st3_destroy_installation_1_commando"))
		return true;
	else
		return false;	
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ground_destroy_3_condition_mission1Success (obj_id player, obj_id npc)
{
	if (groundquests.isTaskActive(player, "restuss_imperial_st3_destroy_installation_1", "returnOkto1")||
		groundquests.isTaskActive(player, "restuss_imperial_st3_destroy_installation_1_commando", "returnOkto1"))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ground_destroy_3_condition_completedMission1 (obj_id player, obj_id npc)
{
	if (groundquests.hasCompletedQuest(player, "restuss_imperial_st3_destroy_installation_1") ||
		groundquests.hasCompletedQuest(player, "restuss_imperial_st3_destroy_installation_1_commando"))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ground_destroy_3_condition_mission2Active (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "restuss_imperial_st3_destroy_boss");
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ground_destroy_3_condition_mission2Success (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "restuss_imperial_st3_destroy_boss", "returnOkto2");
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ground_destroy_3_condition_notCommando (obj_id player, obj_id npc)
{
	//Credit farmers are haxor'n the restuss_imperial_ground_destroy_3_condition_commando version of this quest, so I am removing the option. -TJH 11/1/07
	//Modified this condition to return true the "commando" condition to always return false.

	return true;
	/*
	if (utils.isProfession(player, utils.COMMANDO))
		return false;
	else
		return true;
	*/
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ground_destroy_3_condition_commando (obj_id player, obj_id npc)
{
	//Credit farmers are haxor'n the restuss_imperial_ground_destroy_3_condition_commando version of this quest, so I am removing the option. -TJH 11/1/07
	//Modified this condition to return false the "notCommando" condition to always return true.
	return false;
//	return (utils.isProfession(player, utils.COMMANDO));
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ground_destroy_3_condition_completedMission2 (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "restuss_imperial_st3_destroy_boss");
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ground_destroy_3_condition_playerImperial (obj_id player, obj_id npc)
{
	if (factions.isImperial(player))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ground_destroy_3_condition_isPlayerRebel (obj_id player, obj_id npc)
{
	return factions.isRebel(player);
}

// ======================================================================
// Script Actions
// ======================================================================

void restuss_imperial_ground_destroy_3_action_giveAntenna (obj_id player, obj_id npc)
{
	groundquests.grantQuest (player, "restuss_imperial_st3_destroy_installation_1");
}

// ----------------------------------------------------------------------

void restuss_imperial_ground_destroy_3_action_reward1 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "returnedOkto1");
}

// ----------------------------------------------------------------------

void restuss_imperial_ground_destroy_3_action_giveKillBoss (obj_id player, obj_id npc)
{
	groundquests.grantQuest (player, "restuss_imperial_st3_destroy_boss");
}

// ----------------------------------------------------------------------

void restuss_imperial_ground_destroy_3_action_reward2 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "returnedOkto2");
}

// ----------------------------------------------------------------------

void restuss_imperial_ground_destroy_3_action_giveAntennaCommando (obj_id player, obj_id npc)
{
	groundquests.grantQuest (player, "restuss_imperial_st3_destroy_installation_1_commando");
}

// ----------------------------------------------------------------------

void restuss_imperial_ground_destroy_3_action_eject (obj_id player, obj_id npc)
{
	expelFromBuilding(player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int restuss_imperial_ground_destroy_3_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm getting disturbing reports, soldier. It appears Vrinko somehow survived! We have a new location for him though so if you're set, we need you to take care of him, for good this time.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: They must have some medical staff. Very well, sir. I will do it!
	if (response == "s_74")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			restuss_imperial_ground_destroy_3_action_giveKillBoss (player, npc);

			//-- NPC: Excellent, soldier! Same plan as last time, defeat any troops he sends out of his hideout until he has no choice but to show himself.
			string_id message = new string_id (c_stringFile, "s_76");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Send someone else this time, I'm here to blow some stuff up!
	if (response == "s_78")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			//-- NPC: Understood, soldier. Yeah, we still need help sabotaging more of those infernal antennas.
			string_id message = new string_id (c_stringFile, "s_80");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Perfect, I will take care of it, sir!
			boolean hasResponse0 = false;
			if (restuss_imperial_ground_destroy_3_condition_notCommando (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Not a problem, sir!
			boolean hasResponse1 = false;
			if (restuss_imperial_ground_destroy_3_condition_commando (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
			boolean hasResponse2 = false;
			if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90");

				utils.setScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
	if (response == "s_94")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: Fine, soldier. For the Emperor!
			string_id message = new string_id (c_stringFile, "s_96");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_imperial_ground_destroy_3_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Understood, soldier. Yeah, we still need help sabotaging more of those infernal antennas.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Perfect, I will take care of it, sir!
	if (response == "s_82")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			restuss_imperial_ground_destroy_3_action_giveAntenna (player, npc);

			//-- NPC: Excellent, soldier! Show them the might of the Imperial army!
			string_id message = new string_id (c_stringFile, "s_84");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not a problem, sir!
	if (response == "s_86")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			restuss_imperial_ground_destroy_3_action_giveAntennaCommando (player, npc);

			//-- NPC: Excellent, soldier! Show them the might of the Imperial army!
			string_id message = new string_id (c_stringFile, "s_88");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
	if (response == "s_90")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: Fine, soldier. For the Emperor!
			string_id message = new string_id (c_stringFile, "s_92");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_imperial_ground_destroy_3_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There you are, soldier. Excellent, the Rebels keep throwing up more antennas as fast as we can bring them down. We've found out who's behind it though and it's time to put a stop to him. We have his location and need you to eliminate him, permanently.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not a problem, sir! Who's the target?
	if (response == "s_27")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			restuss_imperial_ground_destroy_3_action_giveKillBoss (player, npc);

			//-- NPC: A Mon Calamari captain of the Rebel Army, named Vrinko. He's hiding in a well guarded building but is about to relocate, so this is our chance. He will probably send out his troops first, so you will have to take care of them until he has no choice but to try and make a break for it.
			string_id message = new string_id (c_stringFile, "s_29");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Doesn't sound like something I'm suited for, sir. Anything else I can do?
	if (response == "s_31")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			//-- NPC: Alright, soldier. Yeah, we still need help sabotaging more of those infernal antennas.
			string_id message = new string_id (c_stringFile, "s_33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm all over it, sir!
			boolean hasResponse0 = false;
			if (restuss_imperial_ground_destroy_3_condition_notCommando (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I will handle it, sir!
			boolean hasResponse1 = false;
			if (restuss_imperial_ground_destroy_3_condition_commando (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
			boolean hasResponse2 = false;
			if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_65");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_42");

				utils.setScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
	if (response == "s_46")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: Fine, soldier. For the Emperor!
			string_id message = new string_id (c_stringFile, "s_48");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_imperial_ground_destroy_3_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Alright, soldier. Yeah, we still need help sabotaging more of those infernal antennas.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm all over it, sir!
	if (response == "s_65")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			restuss_imperial_ground_destroy_3_action_giveAntenna (player, npc);

			//-- NPC: Excellent, soldier! Show them the might of the Imperial Army!
			string_id message = new string_id (c_stringFile, "s_67");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will handle it, sir!
	if (response == "s_37")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			restuss_imperial_ground_destroy_3_action_giveAntennaCommando (player, npc);

			//-- NPC: Excellent, soldier! Show them the might of the Imperial Army!
			string_id message = new string_id (c_stringFile, "s_69");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
	if (response == "s_42")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: Fine, soldier. For the Emperor!
			string_id message = new string_id (c_stringFile, "s_44");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_imperial_ground_destroy_3_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Attention, soldier! I have an urgent mission for you. The Rebels have placed antennas around Restuss to help them coordinate their attacks on our salvage teams. Your orders will be to sabotage one of these antennas.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm all over it, sir!
	if (response == "s_52")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			restuss_imperial_ground_destroy_3_action_giveAntenna (player, npc);

			//-- NPC: Excellent, soldier! Show them the might of the Imperial Army!
			string_id message = new string_id (c_stringFile, "s_54");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not a problem, sir!
	if (response == "s_61")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			restuss_imperial_ground_destroy_3_action_giveAntennaCommando (player, npc);

			//-- NPC: Excellent, soldier! Show them the might of the Imperial Army!
			string_id message = new string_id (c_stringFile, "s_63");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
	if (response == "s_57")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: Fine, soldier. For the Emperor!
			string_id message = new string_id (c_stringFile, "s_59");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.restuss_imperial_ground_destroy_3");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.restuss_imperial_ground_destroy_3");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (restuss_imperial_ground_destroy_3_condition_isPlayerRebel (player, npc))
	{
		restuss_imperial_ground_destroy_3_action_eject (player, npc);

		//-- NPC: Begone Rebel scum!
		string_id message = new string_id (c_stringFile, "s_66");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ground_destroy_3_condition_mission2Success (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		restuss_imperial_ground_destroy_3_action_reward2 (player, npc);

		//-- NPC: Superbly handled, soldier! The Rebels are reeling from the loss of Vrinko and we should be able to take advantage of it. Again, splendid work!
		string_id message = new string_id (c_stringFile, "s_39");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ground_destroy_3_condition_mission1Success (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		restuss_imperial_ground_destroy_3_action_reward1 (player, npc);

		//-- NPC: Great job out there, soldier! The Rebel forces are in disarray as their communications are breaking down!
		string_id message = new string_id (c_stringFile, "s_10");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ground_destroy_3_condition_mission1Active (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: Any problems, soldier? Your orders should be clear. Sabotage one of the Rebel antennas in Restuss.
		string_id message = new string_id (c_stringFile, "s_9");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ground_destroy_3_condition_mission2Active (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: We still need Vrinko dealt with, soldier. Immediately, before he relocates to a new safe house.
		string_id message = new string_id (c_stringFile, "s_25");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ground_destroy_3_condition_completedMission2 (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: I'm getting disturbing reports, soldier. It appears Vrinko somehow survived! We have a new location for him though so if you're set, we need you to take care of him, for good this time.
		string_id message = new string_id (c_stringFile, "s_72");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: They must have some medical staff. Very well, sir. I will do it!
		boolean hasResponse0 = false;
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Send someone else this time, I'm here to blow some stuff up!
		boolean hasResponse1 = false;
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
		boolean hasResponse2 = false;
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_74");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_78");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_94");

			utils.setScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId", 6);

			npcStartConversation (player, npc, "restuss_imperial_ground_destroy_3", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ground_destroy_3_condition_completedMission1 (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: There you are, soldier. Excellent, the Rebels keep throwing up more antennas as fast as we can bring them down. We've found out who's behind it though and it's time to put a stop to him. We have his location and need you to eliminate him, permanently.
		string_id message = new string_id (c_stringFile, "s_24");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Not a problem, sir! Who's the target?
		boolean hasResponse0 = false;
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Doesn't sound like something I'm suited for, sir. Anything else I can do?
		boolean hasResponse1 = false;
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
		boolean hasResponse2 = false;
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_27");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_31");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_46");

			utils.setScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId", 13);

			npcStartConversation (player, npc, "restuss_imperial_ground_destroy_3", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ground_destroy_3_condition_stage3ready (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: Attention, soldier! I have an urgent mission for you. The Rebels have placed antennas around Restuss to help them coordinate their attacks on our salvage teams. Your orders will be to sabotage one of these antennas.
		string_id message = new string_id (c_stringFile, "s_50");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm all over it, sir!
		boolean hasResponse0 = false;
		if (restuss_imperial_ground_destroy_3_condition_notCommando (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Not a problem, sir!
		boolean hasResponse1 = false;
		if (restuss_imperial_ground_destroy_3_condition_commando (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
		boolean hasResponse2 = false;
		if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_52");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_61");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_57");

			utils.setScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId", 20);

			npcStartConversation (player, npc, "restuss_imperial_ground_destroy_3", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ground_destroy_3_condition_playerImperial (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: I'm still awaiting new orders, soldier. Come back later and I will have your mission plan ready.
		string_id message = new string_id (c_stringFile, "s_62");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ground_destroy_3_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "dismiss");

		//-- NPC: Move along, citizen. This is no place for a civilian!
		string_id message = new string_id (c_stringFile, "s_68");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "restuss_imperial_ground_destroy_3")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId");

	if (branchId == 6 && restuss_imperial_ground_destroy_3_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && restuss_imperial_ground_destroy_3_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && restuss_imperial_ground_destroy_3_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && restuss_imperial_ground_destroy_3_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && restuss_imperial_ground_destroy_3_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.restuss_imperial_ground_destroy_3.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

