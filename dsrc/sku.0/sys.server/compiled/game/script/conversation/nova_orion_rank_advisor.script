// ======================================================================
//
// nova_orion_rank_advisor.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.badge;
include library.chat;
include library.groundquests;
include library.township;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/nova_orion_rank_advisor";

// ======================================================================
// Script Conditions
// ======================================================================

boolean nova_orion_rank_advisor_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean nova_orion_rank_advisor_condition_isRank4 (obj_id player, obj_id npc)
{
	return (hasCompletedCollectionSlot(player, "nova_rank_01_04") ||
			hasCompletedCollectionSlot(player, "orion_rank_01_04"));
}

// ----------------------------------------------------------------------

boolean nova_orion_rank_advisor_condition_isRank2Orion (obj_id player, obj_id npc)
{
	if(!hasObjVar(player, township.OBJVAR_NOVA_ORION_FACTION))
		return false;
	
	string faction = getStringObjVar(player, township.OBJVAR_NOVA_ORION_FACTION);	
	return (hasCompletedCollectionSlot(player, "nova_orion_rank_02") && faction.equals("orion"));
}

// ----------------------------------------------------------------------

boolean nova_orion_rank_advisor_condition_hasEnoughCrystalsRank3 (obj_id player, obj_id npc)
{
	int count = township.getMidlitheCrystalCount(player);
	return count >= township.RANK_THREE_AMOUNT;
}

// ----------------------------------------------------------------------

boolean nova_orion_rank_advisor_condition_readyRank3 (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedQuest(player, "no_rank2_04") &&
			(!hasCompletedCollectionSlot(player, "orion_rank_01_03") ||
			!hasCompletedCollectionSlot(player, "nova_rank_01_03")));
}

// ----------------------------------------------------------------------

boolean nova_orion_rank_advisor_condition_isRank2Nova (obj_id player, obj_id npc)
{
	if(!hasObjVar(player, township.OBJVAR_NOVA_ORION_FACTION))
		return false;
	
	string faction = getStringObjVar(player, township.OBJVAR_NOVA_ORION_FACTION);	
	return (hasCompletedCollectionSlot(player, "nova_orion_rank_02") && faction.equals("nova"));
}

// ----------------------------------------------------------------------

boolean nova_orion_rank_advisor_condition_orionReadyRank4 (obj_id player, obj_id npc)
{
	if(!hasObjVar(player, township.OBJVAR_NOVA_ORION_FACTION))
		return false;
	
	string faction = getStringObjVar(player, township.OBJVAR_NOVA_ORION_FACTION);
		
	return (groundquests.hasCompletedQuest(player, "orion_rank3_04") && faction.equals("orion") &&
			!hasCompletedCollectionSlot(player, "orion_rank_01_04"));
}

// ----------------------------------------------------------------------

boolean nova_orion_rank_advisor_condition_readyRank2 (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedQuest(player, "nova_orion_rank1_03") &&
			nova_orion_rank_advisor_condition_hasLarnedAboutCrystals(player, npc));
}

// ----------------------------------------------------------------------

boolean nova_orion_rank_advisor_condition_novaReadyRank4 (obj_id player, obj_id npc)
{
	if(!hasObjVar(player, township.OBJVAR_NOVA_ORION_FACTION))
		return false;
	
	string faction = getStringObjVar(player, township.OBJVAR_NOVA_ORION_FACTION);
		
	return (groundquests.hasCompletedQuest(player, "nova_rank3_05") && faction.equals("nova") &&
			!hasCompletedCollectionSlot(player, "nova_rank_01_04"));
}

// ----------------------------------------------------------------------

boolean nova_orion_rank_advisor_condition_notReadyRank4Nova (obj_id player, obj_id npc)
{
	if( !hasObjVar(player, township.OBJVAR_NOVA_ORION_FACTION) )
		return false;
	
	string faction = getStringObjVar(player, township.OBJVAR_NOVA_ORION_FACTION);
		
	return ( hasCompletedCollectionSlot(player, "nova_rank_01_03") && faction.equals("nova") && 
	!groundquests.hasCompletedQuest(player, "nova_rank3_05") );
}

// ----------------------------------------------------------------------

boolean nova_orion_rank_advisor_condition_needsRank1 (obj_id player, obj_id npc)
{
	return (!hasCompletedCollectionSlot(player, "nova_orion_rank_01") &&
			groundquests.hasCompletedQuest(player, "nova_orion_intro_01"));
}

// ----------------------------------------------------------------------

boolean nova_orion_rank_advisor_condition_hasLarnedAboutCrystals (obj_id player, obj_id npc)
{
	return hasObjVar(player, township.OBJVAR_KNOWS_CRYSTAL);
}

// ----------------------------------------------------------------------

boolean nova_orion_rank_advisor_condition_notReadyRank4Orion (obj_id player, obj_id npc)
{
	if( !hasObjVar(player, township.OBJVAR_NOVA_ORION_FACTION) )
		return false;
	
	string faction = getStringObjVar(player, township.OBJVAR_NOVA_ORION_FACTION);
		
	return ( hasCompletedCollectionSlot(player, "orion_rank_01_03") && faction.equals("orion") && 
	!groundquests.hasCompletedQuest(player, "orion_rank3_04") );
}

// ----------------------------------------------------------------------

boolean nova_orion_rank_advisor_condition_hasEnoughCrystalsRank2 (obj_id player, obj_id npc)
{
	int count = township.getMidlitheCrystalCount(player);
	return count >= township.RANK_TWO_AMOUNT;
}

// ----------------------------------------------------------------------

boolean nova_orion_rank_advisor_condition_hasEnoughCrystalsRank4 (obj_id player, obj_id npc)
{
	int count = township.getMidlitheCrystalCount(player);
	return count >= township.RANK_FOUR_AMOUNT;
}

// ----------------------------------------------------------------------

boolean nova_orion_rank_advisor_condition_notReadyRank3 (obj_id player, obj_id npc)
{
	return (!groundquests.hasCompletedQuest(player, "no_rank2_04") &&
			hasCompletedCollectionSlot(player, "nova_orion_rank_02"));
}

// ----------------------------------------------------------------------

boolean nova_orion_rank_advisor_condition_notReadyRank2 (obj_id player, obj_id npc)
{
	return (!groundquests.hasCompletedQuest(player, "nova_orion_rank1_03") &&
			hasCompletedCollectionSlot(player, "nova_orion_rank_01"));
}

// ----------------------------------------------------------------------

boolean nova_orion_rank_advisor_condition_needsToLearnCrystals (obj_id player, obj_id npc)
{
	return (!hasObjVar(player, township.OBJVAR_KNOWS_CRYSTAL) &&
			groundquests.hasCompletedQuest(player, "nova_orion_rank1_03"));
}

// ======================================================================
// Script Actions
// ======================================================================

void nova_orion_rank_advisor_action_grantRank1 (obj_id player, obj_id npc)
{
	modifyCollectionSlotValue(player, "nova_orion_rank_01", 1);
}

// ----------------------------------------------------------------------

void nova_orion_rank_advisor_action_setLearnedCrystals (obj_id player, obj_id npc)
{
	setObjVar(player, township.OBJVAR_KNOWS_CRYSTAL, true);
}

// ----------------------------------------------------------------------

void nova_orion_rank_advisor_action_grantRank2 (obj_id player, obj_id npc)
{
	int count = township.getMidlitheCrystalCount(player);
	obj_id crystal = utils.getStaticItemInInventory(player, township.MIDLITHE_CRYSTAL);
	count -= township.RANK_TWO_AMOUNT;
	
	if(count <= 0)
	{
		destroyObject(crystal);
	}
	else
	{	
		setCount(crystal, count);
	}
	
	modifyCollectionSlotValue(player, "nova_orion_rank_02", 1);
}

// ----------------------------------------------------------------------

void nova_orion_rank_advisor_action_grantRank3Orion (obj_id player, obj_id npc)
{
	int count = township.getMidlitheCrystalCount(player);
	obj_id crystal = utils.getStaticItemInInventory(player, township.MIDLITHE_CRYSTAL);
	count -= township.RANK_THREE_AMOUNT;
	
	if(count <= 0)
	{
		destroyObject(crystal);
	}
	else
	{	
		setCount(crystal, count);
	}
	
	modifyCollectionSlotValue(player, township.ORION_TRACKER_SLOT_NAME, township.RANK_THREE_AMOUNT);
}

// ----------------------------------------------------------------------

void nova_orion_rank_advisor_action_grantRank3Nova (obj_id player, obj_id npc)
{
	int count = township.getMidlitheCrystalCount(player);
	obj_id crystal = utils.getStaticItemInInventory(player, township.MIDLITHE_CRYSTAL);
	count -= township.RANK_THREE_AMOUNT;
	
	if(count <= 0)
	{
		destroyObject(crystal);
	}
	else
	{	
		setCount(crystal, count);
	}
	
	modifyCollectionSlotValue(player, township.NOVA_TRACKER_SLOT_NAME, township.RANK_THREE_AMOUNT);
}

// ----------------------------------------------------------------------

void nova_orion_rank_advisor_action_grantRank4Nova (obj_id player, obj_id npc)
{
	int count = township.getMidlitheCrystalCount(player);
	obj_id crystal = utils.getStaticItemInInventory(player, township.MIDLITHE_CRYSTAL);
	count -= township.RANK_FOUR_AMOUNT;
	
	if(count <= 0)
	{
		destroyObject(crystal);
	}
	else
	{	
		setCount(crystal, count);
	}
	
	modifyCollectionSlotValue(player, township.NOVA_TRACKER_SLOT_NAME, township.RANK_FOUR_AMOUNT);
}

// ----------------------------------------------------------------------

void nova_orion_rank_advisor_action_grantRank4Orion (obj_id player, obj_id npc)
{
	int count = township.getMidlitheCrystalCount(player);
	obj_id crystal = utils.getStaticItemInInventory(player, township.MIDLITHE_CRYSTAL);
	count -= township.RANK_FOUR_AMOUNT;
	
	if(count <= 0)
	{
		destroyObject(crystal);
	}
	else
	{	
		setCount(crystal, count);
	}
	
	modifyCollectionSlotValue(player, township.ORION_TRACKER_SLOT_NAME, township.RANK_FOUR_AMOUNT);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

string nova_orion_rank_advisor_tokenTO_rank3JobTitle (obj_id player, obj_id npc)
{
	string rank3Job = "Technician";
	if ( getStringObjVar(player, township.OBJVAR_NOVA_ORION_FACTION).equals("orion") )
	{
		rank3Job = "Researcher";
	}
	
	return rank3Job;
}

// ======================================================================
// Script %DI Tokens
// ======================================================================

int nova_orion_rank_advisor_tokenDI_rank2Amount (obj_id player, obj_id npc)
{
	return township.RANK_TWO_AMOUNT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_tokenDI_rank2Short (obj_id player, obj_id npc)
{
	int count = township.getMidlitheCrystalCount(player);
	
	return township.RANK_TWO_AMOUNT - count;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_tokenDI_rank3Amount (obj_id player, obj_id npc)
{
	return township.RANK_THREE_AMOUNT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_tokenDI_rank3Short (obj_id player, obj_id npc)
{
	int count = township.getMidlitheCrystalCount(player);
	
	return township.RANK_THREE_AMOUNT - count;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_tokenDI_rank4Amount (obj_id player, obj_id npc)
{
	return township.RANK_FOUR_AMOUNT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_tokenDI_rank4Short (obj_id player, obj_id npc)
{
	int count = township.getMidlitheCrystalCount(player);
	
	return township.RANK_FOUR_AMOUNT - count;
}

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int nova_orion_rank_advisor_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What can I do for you 'Researcher'?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready for another promotion.
	if (response == "s_99")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, for %DI midlithe, I can make you the 'Chief of Production'.
			string_id message = new string_id (c_stringFile, "s_100");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I have it here.
			boolean hasResponse0 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I will come back when I have it.
			boolean hasResponse1 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 5);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = nova_orion_rank_advisor_tokenDI_rank4Amount (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = nova_orion_rank_advisor_tokenDI_rank4Amount (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, for %DI midlithe, I can make you the 'Chief of Production'.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have it here.
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (!nova_orion_rank_advisor_condition_hasEnoughCrystalsRank4 (player, npc))
		{
			//-- NPC: I see you are a little short by about %DI. Come back when you have it all.
			string_id message = new string_id (c_stringFile, "s_104");
			utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);
			pp.digitInteger = nova_orion_rank_advisor_tokenDI_rank4Short (player, npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			nova_orion_rank_advisor_action_grantRank4Orion (player, npc);

			//-- NPC: Good, let me take those, and update your personnel files.
			string_id message = new string_id (c_stringFile, "s_105");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Is that all?
			boolean hasResponse0 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will come back when I have it.
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Do hurry, I don't know how long I can hold it for you.
			string_id message = new string_id (c_stringFile, "s_103");
			utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good, let me take those, and update your personnel files.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is that all?
	if (response == "s_106")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes, 'Chief of Production' %TU, you report to Garrick Orion himself now.
			string_id message = new string_id (c_stringFile, "s_107");
			utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What can I do for you 'Technician'?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready for another promotion.
	if (response == "s_90")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, for %DI midlithe, I can make you the 'Chief of Science'.
			string_id message = new string_id (c_stringFile, "s_91");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I have it here.
			boolean hasResponse0 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I will come back when I have it.
			boolean hasResponse1 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_92");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_93");

				utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 11);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = nova_orion_rank_advisor_tokenDI_rank4Amount (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = nova_orion_rank_advisor_tokenDI_rank4Amount (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, for %DI midlithe, I can make you the 'Chief of Science'.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have it here.
	if (response == "s_92")
	{
		//-- [NOTE] 
		if (!nova_orion_rank_advisor_condition_hasEnoughCrystalsRank4 (player, npc))
		{
			//-- NPC: I see you are a little short by about %DI. Come back when you have it all.
			string_id message = new string_id (c_stringFile, "s_95");
			utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);
			pp.digitInteger = nova_orion_rank_advisor_tokenDI_rank4Short (player, npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			nova_orion_rank_advisor_action_grantRank4Nova (player, npc);

			//-- NPC: Good, let me take those, and update your personnel files.
			string_id message = new string_id (c_stringFile, "s_96");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Is that all?
			boolean hasResponse0 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will come back when I have it.
	if (response == "s_93")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Do hurry, I don't know how long I can hold it for you.
			string_id message = new string_id (c_stringFile, "s_94");
			utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good, let me take those, and update your personnel files.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is that all?
	if (response == "s_97")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes, 'Chief of Science' %TU, you report to Jonas Nova himself now.
			string_id message = new string_id (c_stringFile, "s_98");
			utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes 'Security Officer', what can I do for you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready for another promotion.
	if (response == "s_69")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you now. Well let's see what we have...
			string_id message = new string_id (c_stringFile, "s_70");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Let me guess, a long waiting list?
			boolean hasResponse0 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.other.set (nova_orion_rank_advisor_tokenTO_rank3JobTitle (player, npc));

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.other.set (nova_orion_rank_advisor_tokenTO_rank3JobTitle (player, npc));

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you now. Well let's see what we have...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Let me guess, a long waiting list?
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Looks that way yes. But we can fix that can't we?
			string_id message = new string_id (c_stringFile, "s_72");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How many do you need this time?
			boolean hasResponse0 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Looks that way yes. But we can fix that can't we?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How many do you need this time?
	if (response == "s_73")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well as this is a little riskier, I think I need %DI
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I have it here.
			boolean hasResponse0 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I will come back when I have it.
			boolean hasResponse1 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_75");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 20);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = nova_orion_rank_advisor_tokenDI_rank3Amount (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = nova_orion_rank_advisor_tokenDI_rank3Amount (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well as this is a little riskier, I think I need %DI

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have it here.
	if (response == "s_75")
	{
		//-- [NOTE] 
		if (!nova_orion_rank_advisor_condition_hasEnoughCrystalsRank3 (player, npc))
		{
			//-- NPC: I see you are a little short by about %DI. Come back when you have it all.
			string_id message = new string_id (c_stringFile, "s_76");
			utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);
			pp.digitInteger = nova_orion_rank_advisor_tokenDI_rank3Short (player, npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition_isRank2Nova (player, npc))
		{
			nova_orion_rank_advisor_action_grantRank3Nova (player, npc);

			//-- NPC: Good, let me take those, and update your personnel files.
			string_id message = new string_id (c_stringFile, "s_79");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Is that all?
			boolean hasResponse0 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83");

				utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition_isRank2Orion (player, npc))
		{
			nova_orion_rank_advisor_action_grantRank3Orion (player, npc);

			//-- NPC: Alright, let me take those, and update your personnel files.
			string_id message = new string_id (c_stringFile, "s_109");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Is that all?
			boolean hasResponse0 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will come back when I have it.
	if (response == "s_80")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: No problem, I can wait.
			string_id message = new string_id (c_stringFile, "s_81");
			utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good, let me take those, and update your personnel files.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is that all?
	if (response == "s_83")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes, 'Technician' %TU, you now need to report to Vothinyak.
			string_id message = new string_id (c_stringFile, "s_85");
			utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Alright, let me take those, and update your personnel files.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is that all?
	if (response == "s_112")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes, 'Researcher' %TU, you now need to report to Rassthern.
			string_id message = new string_id (c_stringFile, "s_114");
			utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch28 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello %TU, do you have the crystals?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I do.
	if (response == "s_48")
	{
		//-- [NOTE] 
		if (!nova_orion_rank_advisor_condition_hasEnoughCrystalsRank2 (player, npc))
		{
			//-- NPC: I see you are a little short by about %DI. Come back when you have it all.
			string_id message = new string_id (c_stringFile, "s_50");
			utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);
			pp.digitInteger = nova_orion_rank_advisor_tokenDI_rank2Short (player, npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			nova_orion_rank_advisor_action_grantRank2 (player, npc);

			//-- NPC: Good, let me take those, and update your personnel files.
			string_id message = new string_id (c_stringFile, "s_52");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Is that all?
			boolean hasResponse0 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_55");

				utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 30);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, not yet.
	if (response == "s_59")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well your promotion will be here waiting for you when you do.
			string_id message = new string_id (c_stringFile, "s_61");
			utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good, let me take those, and update your personnel files.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is that all?
	if (response == "s_55")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes, 'Security Officer' %TU, you now need to report to Dexen Eronoss.
			string_id message = new string_id (c_stringFile, "s_57");
			utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well hello again 'Mail Room Attendant' %TU. What can I do for you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to get a promotion.
	if (response == "s_65")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well let's see what we have here...
			string_id message = new string_id (c_stringFile, "s_77");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Is there anything I can do to speed this up?
			boolean hasResponse0 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 34);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch34 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well let's see what we have here...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is there anything I can do to speed this up?
	if (response == "s_82")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, there is one thing...
			string_id message = new string_id (c_stringFile, "s_108");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And...?
			boolean hasResponse0 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch35 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, there is one thing...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: And...?
	if (response == "s_111")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: You see there is a small competition here, between me and some of the engineers. I haven't won in a while, but I think I know why.
			string_id message = new string_id (c_stringFile, "s_116");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You want me to cripple the competition?
			boolean hasResponse0 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 36);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch36 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You see there is a small competition here, between me and some of the engineers. I haven't won in a while, but I think I know why.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You want me to cripple the competition?
	if (response == "s_118")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			nova_orion_rank_advisor_action_setLearnedCrystals (player, npc);

			//-- NPC: Oh, goodness no. What I mean is, I found out they are using a special crystal to power their racers. It is called 'Midlithe'. If you can get me, oh say %DI crystals. I might be able to do something.
			string_id message = new string_id (c_stringFile, "s_120");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Just get you these crystals?
			boolean hasResponse0 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 37);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = nova_orion_rank_advisor_tokenDI_rank2Amount (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = nova_orion_rank_advisor_tokenDI_rank2Amount (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch37 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh, goodness no. What I mean is, I found out they are using a special crystal to power their racers. It is called 'Midlithe'. If you can get me, oh say %DI crystals. I might be able to do something.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just get you these crystals?
	if (response == "s_122")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, provided you have done all your work for your current rank, yes.
			string_id message = new string_id (c_stringFile, "s_124");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I get them?
			boolean hasResponse0 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch38 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, provided you have done all your work for your current rank, yes.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where do I get them?
	if (response == "s_126")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Some of the people you work for will give some as rewards to their top pilots. Also some have been stolen by pirates. You can usually loot them from their blown up ships.
			string_id message = new string_id (c_stringFile, "s_128");
			utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch40 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello, I am Willard Wassleman III. I work for the Humanoid Resource department for Nova Orion Industries. You must be %TU.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I am.
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good, good. I got word that you wanted to work with us. You still do, don't you?
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 41);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int nova_orion_rank_advisor_handleBranch41 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good, good. I got word that you wanted to work with us. You still do, don't you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_136")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			nova_orion_rank_advisor_action_grantRank1 (player, npc);

			//-- NPC: Good, good. Well, I can hire you in as a Mail Room Attendant. Don't worry about it though, this is just a title, I am sure we will find plenty of things for you to do. Please report to Byrec to get started.
			string_id message = new string_id (c_stringFile, "s_138");
			utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Okay, come back if you change your mind.
			string_id message = new string_id (c_stringFile, "s_142");
			utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.nova_orion_rank_advisor");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.nova_orion_rank_advisor");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (nova_orion_rank_advisor_condition_isRank4 (player, npc))
	{
		//-- NPC: I am sorry, there is nothing else I can do for you.
		string_id message = new string_id (c_stringFile, "s_115");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (nova_orion_rank_advisor_condition_notReadyRank4Nova (player, npc))
	{
		//-- NPC: Shouldn't you be working for Vothinyak?
		string_id message = new string_id (c_stringFile, "s_87");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (nova_orion_rank_advisor_condition_notReadyRank4Orion (player, npc))
	{
		//-- NPC: Shouldn't you be working for Rassthern?
		string_id message = new string_id (c_stringFile, "s_86");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (nova_orion_rank_advisor_condition_orionReadyRank4 (player, npc))
	{
		//-- NPC: What can I do for you 'Researcher'?
		string_id message = new string_id (c_stringFile, "s_88");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am ready for another promotion.
		boolean hasResponse0 = false;
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_99");

			utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 4);

			npcStartConversation (player, npc, "nova_orion_rank_advisor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (nova_orion_rank_advisor_condition_novaReadyRank4 (player, npc))
	{
		//-- NPC: What can I do for you 'Technician'?
		string_id message = new string_id (c_stringFile, "s_89");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am ready for another promotion.
		boolean hasResponse0 = false;
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_90");

			utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 10);

			npcStartConversation (player, npc, "nova_orion_rank_advisor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (nova_orion_rank_advisor_condition_notReadyRank3 (player, npc))
	{
		//-- NPC: Shouldn't you be working for Dexen?
		string_id message = new string_id (c_stringFile, "s_67");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (nova_orion_rank_advisor_condition_readyRank3 (player, npc))
	{
		//-- NPC: Yes 'Security Officer', what can I do for you?
		string_id message = new string_id (c_stringFile, "s_68");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am ready for another promotion.
		boolean hasResponse0 = false;
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_69");

			utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 17);

			npcStartConversation (player, npc, "nova_orion_rank_advisor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (nova_orion_rank_advisor_condition_notReadyRank2 (player, npc))
	{
		//-- NPC: Shouldn't you be working for Byrec?
		string_id message = new string_id (c_stringFile, "s_53");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (nova_orion_rank_advisor_condition_readyRank2 (player, npc))
	{
		//-- NPC: Hello %TU, do you have the crystals?
		string_id message = new string_id (c_stringFile, "s_46");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, I do.
		boolean hasResponse0 = false;
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No, not yet.
		boolean hasResponse1 = false;
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_48");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_59");

			utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 28);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "nova_orion_rank_advisor", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (nova_orion_rank_advisor_condition_needsToLearnCrystals (player, npc))
	{
		//-- NPC: Well hello again 'Mail Room Attendant' %TU. What can I do for you?
		string_id message = new string_id (c_stringFile, "s_63");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I would like to get a promotion.
		boolean hasResponse0 = false;
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_65");

			utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 33);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "nova_orion_rank_advisor", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (nova_orion_rank_advisor_condition_needsRank1 (player, npc))
	{
		//-- NPC: Hello, I am Willard Wassleman III. I work for the Humanoid Resource department for Nova Orion Industries. You must be %TU.
		string_id message = new string_id (c_stringFile, "s_130");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, I am.
		boolean hasResponse0 = false;
		if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_132");

			utils.setScriptVar (player, "conversation.nova_orion_rank_advisor.branchId", 40);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "nova_orion_rank_advisor", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (nova_orion_rank_advisor_condition__defaultCondition (player, npc))
	{
		//-- NPC: I am sorry, do you work here?
		string_id message = new string_id (c_stringFile, "s_144");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "nova_orion_rank_advisor")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

	if (branchId == 4 && nova_orion_rank_advisor_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && nova_orion_rank_advisor_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && nova_orion_rank_advisor_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && nova_orion_rank_advisor_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && nova_orion_rank_advisor_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && nova_orion_rank_advisor_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && nova_orion_rank_advisor_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && nova_orion_rank_advisor_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && nova_orion_rank_advisor_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && nova_orion_rank_advisor_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && nova_orion_rank_advisor_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && nova_orion_rank_advisor_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 28 && nova_orion_rank_advisor_handleBranch28 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && nova_orion_rank_advisor_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && nova_orion_rank_advisor_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 34 && nova_orion_rank_advisor_handleBranch34 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 35 && nova_orion_rank_advisor_handleBranch35 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 36 && nova_orion_rank_advisor_handleBranch36 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 37 && nova_orion_rank_advisor_handleBranch37 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 38 && nova_orion_rank_advisor_handleBranch38 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 40 && nova_orion_rank_advisor_handleBranch40 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 41 && nova_orion_rank_advisor_handleBranch41 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.nova_orion_rank_advisor.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

