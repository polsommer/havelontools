// ======================================================================
//
// npe_main_bartender.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.npe;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/npe_main_bartender";

// ======================================================================
// Script Conditions
// ======================================================================

boolean npe_main_bartender_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean npe_main_bartender_condition_onPointerQuest (obj_id player, obj_id npc)
{
	string pTemplate = getSkillTemplate(player);
	if(pTemplate.indexOf("trader") > -1 )
		return true;
	else 
		return false;
}

// ----------------------------------------------------------------------

boolean npe_main_bartender_condition_completedAssignment (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_new_artisan_quest", "readyforreward");
}

// ----------------------------------------------------------------------

boolean npe_main_bartender_condition_isArtisanQuestActive (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "npe_new_artisan_quest");
}

// ----------------------------------------------------------------------

boolean npe_main_bartender_condition_completedArtisanQuest (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "npe_new_artisan_quest");
}

// ----------------------------------------------------------------------

boolean npe_main_bartender_condition_onTraderTask (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_prof_artisan1", "talktobartender");
}

// ----------------------------------------------------------------------

boolean npe_main_bartender_condition_ifBHPointed (obj_id player, obj_id npc)
{
	string pTemplate = getSkillTemplate(player);
	if(pTemplate.indexOf("bounty_hunter") > -1 )
	{
		if(groundquests.isQuestActive(player, "npe_pointer_artisan"))
		{
			if(!hasObjVar(player, "npe.finishedTemplate"))
				return true;
		}
	}
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void npe_main_bartender_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void npe_main_bartender_action_signalMainLineStepComplete (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_new_artisan_quest_complete");
	groundquests.grantQuest(player, "npe_prof_artisan1");
	npe.giveTraderXpPopUp(player);

}

// ----------------------------------------------------------------------

void npe_main_bartender_action_signalTraderTask (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_prof_artisan1_bartender");
}

// ----------------------------------------------------------------------

void npe_main_bartender_action_giveQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "npe_new_artisan_quest");
	groundquests.sendSignal(player,"talked_to_bartender");
	
	npe.giveInvPopUp(player, npc);
	npe.giveCraftPopUp(player, npc);
	
	obj_id[] playerStuff = getInventoryAndEquipment(player);

	obj_id[] myResources = new obj_id[3];
	myResources[0] = npe.grantNpeResourceStack(player, "fruit_flowers_naboo", 2);
	myResources[1] = npe.grantNpeResourceStack(player, "gemstone_mixed_low_quality", 10);
	myResources[2] = npe.grantNpeResourceStack(player, "water_vapor_rori", 5);
	showLootBox(player, myResources);

}

// ----------------------------------------------------------------------

void npe_main_bartender_action_giveBHPointer (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player,"talked_to_bartender");
	groundquests.grantQuest(player, "npe_pointer_bounty_template");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int npe_main_bartender_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Can I help you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do you know any bounty hunters around here?
	if (response == "s_49")
	{
		//-- [NOTE] 
		if (npe_main_bartender_condition__defaultCondition (player, npc))
		{
			//-- NPC: Generally speaking, most people don't go looking for bounty hunters. Usually, it's the other way around. There's only one bounty hunter on this station right now, and that's Boba Fett. He's over there. I don't know if he'll help you, but that's the best I can do for you.
			string_id message = new string_id (c_stringFile, "s_50");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks!
			boolean hasResponse0 = false;
			if (npe_main_bartender_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				utils.setScriptVar (player, "conversation.npe_main_bartender.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_main_bartender.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_main_bartender_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Generally speaking, most people don't go looking for bounty hunters. Usually, it's the other way around. There's only one bounty hunter on this station right now, and that's Boba Fett. He's over there. I don't know if he'll help you, but that's the best I can do for you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks!
	if (response == "s_51")
	{
		//-- [NOTE] 
		if (npe_main_bartender_condition__defaultCondition (player, npc))
		{
			npe_main_bartender_action_giveBHPointer (player, npc);

			//-- NPC: Good luck to you.
			string_id message = new string_id (c_stringFile, "s_58");
			utils.removeScriptVar (player, "conversation.npe_main_bartender.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_main_bartender_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Thank you again for showing me the right way to make Spiced Tea.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm happy to help. It must be exciting to work here.
	if (response == "s_54")
	{
		//-- [NOTE] 
		if (npe_main_bartender_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ha! You aren't kidding. There's so much going on here, you wouldn't believe it!
			string_id message = new string_id (c_stringFile, "s_55");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Really?  Tell me!
			boolean hasResponse0 = false;
			if (npe_main_bartender_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				utils.setScriptVar (player, "conversation.npe_main_bartender.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_main_bartender.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_main_bartender_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ha! You aren't kidding. There's so much going on here, you wouldn't believe it!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Really?  Tell me!
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (npe_main_bartender_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, if you haven't heard already, pirates have invaded the lower deck, there may be a war brewing with the Rak'qua on Station Gamma, and there's a hot shipment that just came through here. A buddy of mine was involved with it. Apparently, and I don't think he even knew this, there were some Old Republic relics in it!
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's a lot of activity for such a small station.
			boolean hasResponse0 = false;
			if (npe_main_bartender_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				utils.setScriptVar (player, "conversation.npe_main_bartender.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_main_bartender.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_main_bartender_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, if you haven't heard already, pirates have invaded the lower deck, there may be a war brewing with the Rak'qua on Station Gamma, and there's a hot shipment that just came through here. A buddy of mine was involved with it. Apparently, and I don't think he even knew this, there were some Old Republic relics in it!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's a lot of activity for such a small station.
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (npe_main_bartender_condition__defaultCondition (player, npc))
		{
			npe_main_bartender_action_signalTraderTask (player, npc);

			//-- NPC: You aren't kidding. I'm glad I'm not involved, and that's all I can say. Inaldra, the new station master, has her hands full at the moment. Anyhow, take care of yourself!
			string_id message = new string_id (c_stringFile, "s_72");
			utils.removeScriptVar (player, "conversation.npe_main_bartender.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_main_bartender_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Do you have the tea?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes! Here it is.
	if (response == "s_40")
	{
		doAnimationAction (player, "feed_creature_medium");

		//-- [NOTE] 
		if (npe_main_bartender_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, it has a delicate aroma. This is almost good enough for me to sell to my customers! Perhaps I should have washed the petals first for my teas.
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Oh...yes. Washing them is a good idea before storage, actually.
			boolean hasResponse0 = false;
			if (npe_main_bartender_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				utils.setScriptVar (player, "conversation.npe_main_bartender.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_main_bartender.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not done yet.
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (npe_main_bartender_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave1");

			//-- NPC: I'll be here when you're done. If you need more ingredients, Jesi in Cargo Bay 2 should have more.
			string_id message = new string_id (c_stringFile, "s_43");
			utils.removeScriptVar (player, "conversation.npe_main_bartender.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_main_bartender_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah, it has a delicate aroma. This is almost good enough for me to sell to my customers! Perhaps I should have washed the petals first for my teas.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh...yes. Washing them is a good idea before storage, actually.
	if (response == "s_44")
	{
		//-- [NOTE] 
		if (npe_main_bartender_condition__defaultCondition (player, npc))
		{
			npe_main_bartender_action_signalMainLineStepComplete (player, npc);

			//-- NPC: Ah. I'll remember. Thank you! Please accept this in payment for your help.
			string_id message = new string_id (c_stringFile, "s_45");
			utils.removeScriptVar (player, "conversation.npe_main_bartender.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_main_bartender_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: How may I help you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I hear that you are the resident master drink mixer around here.
	if (response == "s_57")
	{
		//-- [NOTE] 
		if (npe_main_bartender_condition__defaultCondition (player, npc))
		{
			//-- NPC: I am. You are %TU, though, are you not?
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am. 
			boolean hasResponse0 = false;
			if (npe_main_bartender_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				utils.setScriptVar (player, "conversation.npe_main_bartender.branchId", 14);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_main_bartender.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was wondering if you had any work?
	if (response == "s_78")
	{
		//-- [NOTE] 
		if (npe_main_bartender_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh, wonderful! I have a spiced tea that is not selling at all. I wonder if you have a family recipe that you would share.
			string_id message = new string_id (c_stringFile, "s_64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Certainly. If you have the items that I need, I can make a glass for you.
			boolean hasResponse0 = false;
			if (npe_main_bartender_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.npe_main_bartender.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_main_bartender.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_main_bartender_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I am. You are %TU, though, are you not?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am. 
	if (response == "s_61")
	{
		//-- [NOTE] 
		if (npe_main_bartender_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh, wonderful! I have a spiced tea that is not selling at all. I wonder if you have a family recipe that you would share.
			string_id message = new string_id (c_stringFile, "s_64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Certainly. If you have the items that I need, I can make a glass for you.
			boolean hasResponse0 = false;
			if (npe_main_bartender_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.npe_main_bartender.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_main_bartender.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_main_bartender_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh, wonderful! I have a spiced tea that is not selling at all. I wonder if you have a family recipe that you would share.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Certainly. If you have the items that I need, I can make a glass for you.
	if (response == "s_66")
	{
		//-- [NOTE] 
		if (npe_main_bartender_condition__defaultCondition (player, npc))
		{
			//-- NPC: Okay! Let's see...gemstones for the glass, and flowers and water for the tea. Is that what you need?
			string_id message = new string_id (c_stringFile, "s_67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes. Now I can whip up my version of Spiced Tea for you.
			boolean hasResponse0 = false;
			if (npe_main_bartender_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				utils.setScriptVar (player, "conversation.npe_main_bartender.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_main_bartender.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_main_bartender_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Okay! Let's see...gemstones for the glass, and flowers and water for the tea. Is that what you need?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. Now I can whip up my version of Spiced Tea for you.
	if (response == "s_76")
	{
		//-- [NOTE] 
		if (npe_main_bartender_condition__defaultCondition (player, npc))
		{
			npe_main_bartender_action_giveQuest (player, npc);

			//-- NPC: Thanks! Just let me know when you're done.
			string_id message = new string_id (c_stringFile, "s_77");
			utils.removeScriptVar (player, "conversation.npe_main_bartender.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.npe_main_bartender");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Bartender");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	setName (self, "Bartender");
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.npe_main_bartender");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (npe_main_bartender_condition_ifBHPointed (player, npc))
	{
		npe_main_bartender_action_facePlayer (player, npc);

		//-- NPC: Can I help you?
		string_id message = new string_id (c_stringFile, "s_48");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Do you know any bounty hunters around here?
		boolean hasResponse0 = false;
		if (npe_main_bartender_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_49");

			utils.setScriptVar (player, "conversation.npe_main_bartender.branchId", 1);

			npcStartConversation (player, npc, "npe_main_bartender", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_main_bartender_condition_onTraderTask (player, npc))
	{
		//-- NPC: Thank you again for showing me the right way to make Spiced Tea.
		string_id message = new string_id (c_stringFile, "s_53");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm happy to help. It must be exciting to work here.
		boolean hasResponse0 = false;
		if (npe_main_bartender_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_54");

			utils.setScriptVar (player, "conversation.npe_main_bartender.branchId", 4);

			npcStartConversation (player, npc, "npe_main_bartender", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_main_bartender_condition_completedArtisanQuest (player, npc))
	{
		npe_main_bartender_action_facePlayer (player, npc);

		//-- NPC: Thanks for everything!
		string_id message = new string_id (c_stringFile, "s_32");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_main_bartender_condition_isArtisanQuestActive (player, npc))
	{
		npe_main_bartender_action_facePlayer (player, npc);

		//-- NPC: Do you have the tea?
		string_id message = new string_id (c_stringFile, "s_39");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes! Here it is.
		boolean hasResponse0 = false;
		if (npe_main_bartender_condition_completedAssignment (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm not done yet.
		boolean hasResponse1 = false;
		if (!npe_main_bartender_condition_completedAssignment (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_40");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_41");

			utils.setScriptVar (player, "conversation.npe_main_bartender.branchId", 9);

			npcStartConversation (player, npc, "npe_main_bartender", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_main_bartender_condition_onPointerQuest (player, npc))
	{
		npe_main_bartender_action_facePlayer (player, npc);

		//-- NPC: How may I help you?
		string_id message = new string_id (c_stringFile, "s_24");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I hear that you are the resident master drink mixer around here.
		boolean hasResponse0 = false;
		if (npe_main_bartender_condition_onPointerQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I was wondering if you had any work?
		boolean hasResponse1 = false;
		if (!npe_main_bartender_condition_onPointerQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_57");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_78");

			utils.setScriptVar (player, "conversation.npe_main_bartender.branchId", 13);

			npcStartConversation (player, npc, "npe_main_bartender", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_main_bartender_condition__defaultCondition (player, npc))
	{
		//-- NPC: You should try the Fermented Blue Milk. It's excellent!
		string_id message = new string_id (c_stringFile, "s_80");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "npe_main_bartender")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.npe_main_bartender.branchId");

	if (branchId == 1 && npe_main_bartender_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && npe_main_bartender_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && npe_main_bartender_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && npe_main_bartender_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && npe_main_bartender_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && npe_main_bartender_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && npe_main_bartender_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && npe_main_bartender_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && npe_main_bartender_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && npe_main_bartender_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && npe_main_bartender_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.npe_main_bartender.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

