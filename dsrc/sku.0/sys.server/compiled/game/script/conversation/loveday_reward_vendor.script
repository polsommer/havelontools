// ======================================================================
//
// loveday_reward_vendor.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/loveday_reward_vendor";

// ======================================================================
// Script Conditions
// ======================================================================

boolean loveday_reward_vendor_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ======================================================================
// Script Actions
// ======================================================================

void loveday_reward_vendor_action_showResourceVendorUI (obj_id player, obj_id npc)
{
    dictionary d = new dictionary();
    d.put("player", player);
    messageTo(npc, "showInventorySUI", d, 0, false);
    return;
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

string loveday_reward_vendor_tokenTO_tokenTO0001 (obj_id player, obj_id npc)
{
	return new string();
}

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.loveday_reward_vendor");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition(self, CONDITION_HOLIDAY_INTERESTING);
	
	ai_lib.setDefaultCalmBehavior (self, ai_lib.BEHAVIOR_SENTINEL);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition(self, CONDITION_HOLIDAY_INTERESTING);
	
	ai_lib.setDefaultCalmBehavior (self, ai_lib.BEHAVIOR_SENTINEL);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);
	
	faceTo( self, player );

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.loveday_reward_vendor");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (loveday_reward_vendor_condition__defaultCondition (player, npc))
	{
		loveday_reward_vendor_action_showResourceVendorUI (player, npc);

		//-- NPC: Greetings and a happy Festival of Love to you. Please let me know if you would like to purchase something.
		string_id message = new string_id (c_stringFile, "s_4");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "loveday_reward_vendor")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.loveday_reward_vendor.branchId");

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.loveday_reward_vendor.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

