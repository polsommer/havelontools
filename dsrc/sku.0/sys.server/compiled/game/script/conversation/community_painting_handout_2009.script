// ======================================================================
//
// community_painting_handout_2009.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.collection;
include library.conversation;
include library.static_item;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/community_painting_handout_2009";

// ======================================================================
// Script Conditions
// ======================================================================

boolean community_painting_handout_2009_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean community_painting_handout_2009_condition_hasReceivedRebelPainting (obj_id player, obj_id npc)
{
	if(hasCompletedCollectionSlot(player, "received_rebel_contest_painting_2009"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean community_painting_handout_2009_condition_hasReceivedImpPainting (obj_id player, obj_id npc)
{
	if(hasCompletedCollectionSlot(player, "received_imperial_contest_painting_2009"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean community_painting_handout_2009_condition_canReceivePaintings (obj_id player, obj_id npc)
{
	int myAge = getCurrentBirthDate() - getPlayerBirthDate(player);
	
	if( hasCompletedCollection(player, "player_received_contest_painting_2009_tracker") || myAge  < 10 )
	{
		return false;
	}
	return true;
}

// ----------------------------------------------------------------------

boolean community_painting_handout_2009_condition_hasNone (obj_id player, obj_id npc)
{
	if( hasCompletedCollectionSlot(player, "received_rebel_contest_painting_2009") || 
	hasCompletedCollectionSlot(player, "received_imperial_contest_painting_2009") )
	{
		return false;
	}
	return true;
}

// ----------------------------------------------------------------------

boolean community_painting_handout_2009_condition_not_old_enough (obj_id player, obj_id npc)
{
	int myAge = getCurrentBirthDate() - getPlayerBirthDate(player);
	//check character age if they are less than 10 days no joy
	if( myAge < 10 )
	{
		//	sendSystemMessage(player, SID_NOT_OLD_ENOUGH);
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean community_painting_handout_2009_condition_hasReceivedBothCommunity (obj_id player, obj_id npc)
{
	if(hasCompletedCollection(player, "player_received_contest_painting_2009_tracker"))
	{
		return true;
	}
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void community_painting_handout_2009_action_grantRebelCommunityPainting (obj_id player, obj_id npc)
{
	if(!isIdValid(player) || !isIdValid(npc))
		return;
		
	if(!hasCompletedCollection(player, "player_received_contest_painting_2009_tracker") && 
	!hasCompletedCollectionSlot(player, "received_rebel_contest_painting"))
	{
		//get player inventory
		obj_id pInv = utils.getInventoryContainer(player);
		//create the gift in their inventory (***Both Paintings***)
		obj_id painting_rebel = static_item.createNewItemFunction("community_painting_2009_reb", pInv);
		//Validate to make sure it was created correctly
		if(isValidId(painting_rebel) || exists(painting_rebel))	
		{
			if(!hasCompletedCollectionSlot(player, "received_rebel_contest_painting_2009"))
			{
				//increment collection tracker slot
				modifyCollectionSlotValue(player, "received_rebel_contest_painting_2009", 1);
			}
			//Send CS Log
			CustomerServiceLog("Collection: ", "Player " + getFirstName(player) + "(" + player + ") received " + "rebel_community_painting_2008_02_01" + "(" + painting_rebel + ").");
		}
		
	}
}

// ----------------------------------------------------------------------

void community_painting_handout_2009_action_grantImpCommunitylPainting (obj_id player, obj_id npc)
{
	if(!isValidId(player) || !isValidId(npc))
		return;
		
	if(!hasCompletedCollection(player, "player_received_contest_painting_2009_tracker") && 
	!hasCompletedCollectionSlot(player, "received_imperial_contest_painting_2009"))
	{
		//get player inventory
		obj_id pInv = utils.getInventoryContainer(player);
		//create the gift in their inventory (***Imperial Painting***)
		obj_id painting_imperial = static_item.createNewItemFunction("community_painting_2009_imp", pInv);
		//Validate to make sure it was created correctly
		if(isValidId(painting_imperial) || exists(painting_imperial))	
		{
			if(!hasCompletedCollectionSlot(player, "received_imperial_contest_painting_2009"))
			{
				//increment collection tracker slot
				modifyCollectionSlotValue(player, "received_imperial_contest_painting_2009", 1);
			}
			//Send CS Log
			CustomerServiceLog("Collection: ", "Player " + getFirstName(player) + "(" + player + ") received " + "community_painting_2009_imp" + "(" + painting_imperial + ").");
		}
	}	
}

// ----------------------------------------------------------------------

void community_painting_handout_2009_action_grantBothCommunityPaintings (obj_id player, obj_id npc)
{
	if(!isIdValid(player) || !isIdValid(npc))
		return;
	//Check to see if they have completed the Collection already.
	if(!hasCompletedCollection(player, "player_received_contest_painting_2009_tracker"))
	{
		//get player inventory
		obj_id pInv = utils.getInventoryContainer(player);
		//create the gift in their inventory (***Both Paintings***)
		obj_id painting_rebel = static_item.createNewItemFunction("community_painting_2009_reb", pInv);
		obj_id painting_imperial = static_item.createNewItemFunction("community_painting_2009_imp", pInv);
		//Validate to make sure it was created correctly
		if(isValidId(painting_rebel) || exists(painting_rebel))	
		{
			if(!hasCompletedCollectionSlot(player, "received_rebel_contest_painting_2009"))
			{
				//increment collection tracker slot
				modifyCollectionSlotValue(player, "received_rebel_contest_painting_2009", 1);
			}
			//Send CS Log
			CustomerServiceLog("Collection: ", "Player " + getFirstName(player) + "(" + player + ") received " + "community_painting_2009_reb" + "(" + painting_rebel + ").");
		}
		//Validate to make sure it was created correctly
		if(isValidId(painting_imperial) || exists(painting_imperial))	
		{
			if(!hasCompletedCollectionSlot(player, "received_imperial_contest_painting_2009"))
			{
				//increment collection tracker slot
				modifyCollectionSlotValue(player, "received_imperial_contest_painting_2009", 1);
			}
			//Send CS Log
			CustomerServiceLog("Collection: ", "Player " + getFirstName(player) + "(" + player + ") received " + "community_painting_2009_imp" + "(" + painting_imperial + ").");
		}
	}
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int community_painting_handout_2009_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello there! I am a distributor of unique and interesting art, and I have a limited time offer you might be interested in.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you have for me?
	if (response == "s_6")
	{
		//-- [NOTE] 
		if (community_painting_handout_2009_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Emperor once again commissioned artists across the Galaxy to express the power of the Empire with paint. I was then hired to give the painting to all citizens. Are you interested in a free painting?
			string_id message = new string_id (c_stringFile, "s_8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure, I'll take a free painting.
			boolean hasResponse0 = false;
			if (community_painting_handout_2009_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Paintings? Art? Blech! No thanks.
			boolean hasResponse1 = false;
			if (community_painting_handout_2009_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26");

				utils.setScriptVar (player, "conversation.community_painting_handout_2009.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.community_painting_handout_2009.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not interested.
	if (response == "s_30")
	{
		//-- [NOTE] 
		if (community_painting_handout_2009_condition__defaultCondition (player, npc))
		{
			//-- NPC: I will only be here for a limited time.  Should you change your mind, come back and see me.
			string_id message = new string_id (c_stringFile, "s_32");
			utils.removeScriptVar (player, "conversation.community_painting_handout_2009.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int community_painting_handout_2009_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Emperor once again commissioned artists across the Galaxy to express the power of the Empire with paint. I was then hired to give the painting to all citizens. Are you interested in a free painting?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure, I'll take a free painting.
	if (response == "s_10")
	{
		//-- [NOTE] 
		if (community_painting_handout_2009_condition__defaultCondition (player, npc))
		{
			//-- NPC: And...just between you and me, the Rebellion also hired me to distribute a painting created by one their own, on the downlow of course. I'm not one to turn down a job so I'm handing these out as well. 
			string_id message = new string_id (c_stringFile, "s_12");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I don't want anything touched by those Rebel scum.  Just give me the Imperial painting.
			boolean hasResponse0 = false;
			if (!community_painting_handout_2009_condition_hasReceivedImpPainting (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I won't hang Imperial propaganda in my home!  Just give me the Rebel painting.
			boolean hasResponse1 = false;
			if (!community_painting_handout_2009_condition_hasReceivedRebelPainting (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to get both paintings.
			boolean hasResponse2 = false;
			if (community_painting_handout_2009_condition_hasNone (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_18");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_22");

				utils.setScriptVar (player, "conversation.community_painting_handout_2009.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.community_painting_handout_2009.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Paintings? Art? Blech! No thanks.
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (community_painting_handout_2009_condition__defaultCondition (player, npc))
		{
			//-- NPC: I will only be here for a limited time.  Should you change your mind, come back and see me.
			string_id message = new string_id (c_stringFile, "s_28");
			utils.removeScriptVar (player, "conversation.community_painting_handout_2009.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int community_painting_handout_2009_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: And...just between you and me, the Rebellion also hired me to distribute a painting created by one their own, on the downlow of course. I'm not one to turn down a job so I'm handing these out as well. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't want anything touched by those Rebel scum.  Just give me the Imperial painting.
	if (response == "s_14")
	{
		community_painting_handout_2009_action_grantImpCommunitylPainting (player, npc);

		//-- [NOTE] 
		if (community_painting_handout_2009_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here's the Imperial painting.  Long Live the Empire!
			string_id message = new string_id (c_stringFile, "s_16");
			utils.removeScriptVar (player, "conversation.community_painting_handout_2009.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I won't hang Imperial propaganda in my home!  Just give me the Rebel painting.
	if (response == "s_18")
	{
		community_painting_handout_2009_action_grantRebelCommunityPainting (player, npc);

		//-- [NOTE] 
		if (community_painting_handout_2009_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here's the Rebel painting.  Remember, don't tell anyone I'm handing these out.  The Emperor would be very displeased to put it lightly.
			string_id message = new string_id (c_stringFile, "s_20");
			utils.removeScriptVar (player, "conversation.community_painting_handout_2009.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to get both paintings.
	if (response == "s_22")
	{
		community_painting_handout_2009_action_grantBothCommunityPaintings (player, npc);

		//-- [NOTE] 
		if (community_painting_handout_2009_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here you go, both paintings are yours.  Take care!
			string_id message = new string_id (c_stringFile, "s_24");
			utils.removeScriptVar (player, "conversation.community_painting_handout_2009.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

string_id SID_NOT_OLD_ENOUGH = new string_id("collection", "not_old_enough");

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.community_painting_handout_2009");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.community_painting_handout_2009");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (community_painting_handout_2009_condition_hasReceivedBothCommunity (player, npc))
	{
		//-- NPC: Hey there!  I hope you're enjoying the new paintings.
		string_id message = new string_id (c_stringFile, "s_34");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (community_painting_handout_2009_condition_canReceivePaintings (player, npc))
	{
		//-- NPC: Hello there! I am a distributor of unique and interesting art, and I have a limited time offer you might be interested in.
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What do you have for me?
		boolean hasResponse0 = false;
		if (community_painting_handout_2009_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm not interested.
		boolean hasResponse1 = false;
		if (community_painting_handout_2009_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_30");

			utils.setScriptVar (player, "conversation.community_painting_handout_2009.branchId", 2);

			npcStartConversation (player, npc, "community_painting_handout_2009", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (community_painting_handout_2009_condition_not_old_enough (player, npc))
	{
		//-- NPC: It looks like you're new to the area.  If you come back after you've been around for 15 days or more, I'll have a few gifts for you.
		string_id message = new string_id (c_stringFile, "s_36");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "community_painting_handout_2009")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.community_painting_handout_2009.branchId");

	if (branchId == 2 && community_painting_handout_2009_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && community_painting_handout_2009_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && community_painting_handout_2009_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.community_painting_handout_2009.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

