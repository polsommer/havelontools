// ======================================================================
//
// blacksun_guri.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.factions;
include library.groundquests;
include library.holiday;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/blacksun_guri";

// ======================================================================
// Script Conditions
// ======================================================================

boolean blacksun_guri_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean blacksun_guri_condition_hasNotStartedQuestLine (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (!groundquests.isQuestActiveOrComplete(player, "outbreak_quest_01_imperial") 
	&& !groundquests.isQuestActiveOrComplete(player, "outbreak_quest_01_rebel")
	&& !groundquests.isQuestActiveOrComplete(player, "outbreak_quest_01_neutral"));
}

// ----------------------------------------------------------------------

boolean blacksun_guri_condition_hasFirstQuestNeutral (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.isQuestActive(player, "outbreak_quest_01_neutral");
}

// ----------------------------------------------------------------------

boolean blacksun_guri_condition_hasSecondQuestImperial (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.isQuestActive(player, "outbreak_quest_02_neutral");
}

// ----------------------------------------------------------------------

boolean blacksun_guri_condition_hasFoundStormtroopers (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.hasCompletedQuest(player, "outbreak_quest_02_neutral");
}

// ----------------------------------------------------------------------

boolean blacksun_guri_condition_hasCompletedMissions (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "outbreak_quest_facility_05_neutral", "speakPietteDebrief");
}

// ----------------------------------------------------------------------

boolean blacksun_guri_condition_hasCompletedAll (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "outbreak_quest_facility_05_neutral")
	&& groundquests.hasCompletedQuest(player, "outbreak_quest_final_neutral");
}

// ----------------------------------------------------------------------

boolean blacksun_guri_condition_isLiveConversion (obj_id player, obj_id npc)
{
	return blacksun_guri_condition_hasNotStartedQuestLine(player,npc) 
	&& 
	(groundquests.isTaskActive(player, "outbreak_live_conversion_neutral", "speakGuri")
	|| groundquests.hasCompletedQuest(player, "outbreak_live_conversion_neutral"))
	||
	(groundquests.isTaskActive(player, "outbreak_switch_to_neutral", "speakGuri")
	|| groundquests.hasCompletedQuest(player, "outbreak_switch_to_neutral"));
}

// ----------------------------------------------------------------------

boolean blacksun_guri_condition_isPlayerRebel (obj_id player, obj_id npc)
{
	return factions.isRebel(player);
}

// ----------------------------------------------------------------------

boolean blacksun_guri_condition_isPlayerImp (obj_id player, obj_id npc)
{
	return factions.isImperial(player);
}

// ----------------------------------------------------------------------

boolean blacksun_guri_condition_hasDeletedLiveConversion (obj_id player, obj_id npc)
{
	if(groundquests.hasCompletedQuest(player, "quest_08_dathomir_outpost_final")
	|| groundquests.hasCompletedQuest(player, "quest_08_dathomir_outpost"))
	{
		if(!groundquests.isQuestActiveOrComplete(player, "outbreak_switch_to_rebel")
		&& !groundquests.isQuestActiveOrComplete(player, "outbreak_switch_to_imperial")
		&& !groundquests.isQuestActiveOrComplete(player, "outbreak_switch_to_neutral")
		&& !groundquests.isQuestActiveOrComplete(player, "outbreak_live_conversion_neutral")
		&& !groundquests.isQuestActiveOrComplete(player, "outbreak_live_conversion_rebel")
		&& !groundquests.isQuestActiveOrComplete(player, "outbreak_live_conversion_imperial"))
			return true;	
	}
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void blacksun_guri_action_grantMissionOne (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	groundquests.grantQuest(player, "quest/outbreak_quest_01_neutral"); 
}

// ----------------------------------------------------------------------

void blacksun_guri_action_completeQuest5 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "hasSpokenPietteDebreif"); 
	if(!hasCompletedCollectionSlot(player, "outbreak_flare_s_slot"))
	{
		modifyCollectionSlotValue(player, "outbreak_flare_s_slot", 1);
	}
}

// ----------------------------------------------------------------------

void blacksun_guri_action_clearLiveConversion (obj_id player, obj_id npc)
{
	if(!groundquests.isTaskActive(player, "outbreak_live_conversion_neutral", "speakGuri")
	&& !groundquests.isTaskActive(player, "outbreak_switch_to_neutral", "speakGuri"))
		return;
		
	groundquests.sendSignal(player, "liveConversionSpokeGuri"); 
}

// ----------------------------------------------------------------------

void blacksun_guri_action_revokeNeutralGiveImperial (obj_id player, obj_id npc)
{
	if(groundquests.isQuestActiveOrComplete(player, "outbreak_live_conversion_neutral"))
	{
		groundquests.clearQuest(player, "outbreak_live_conversion_neutral");
		groundquests.grantQuest(player, "outbreak_switch_to_imperial"); 
	}
	if(groundquests.isQuestActiveOrComplete(player, "outbreak_switch_to_neutral"))
	{
		groundquests.clearQuest(player, "outbreak_switch_to_neutral");
		groundquests.grantQuest(player, "outbreak_switch_to_imperial"); 
	}

}

// ----------------------------------------------------------------------

void blacksun_guri_action_revokeNeutralGiveRebel (obj_id player, obj_id npc)
{
	if(groundquests.isQuestActiveOrComplete(player, "outbreak_live_conversion_neutral"))
	{
		groundquests.clearQuest(player, "outbreak_live_conversion_neutral");
		groundquests.grantQuest(player, "outbreak_switch_to_rebel"); 
	}
	if(groundquests.isQuestActiveOrComplete(player, "outbreak_switch_to_neutral"))
	{
		groundquests.clearQuest(player, "outbreak_switch_to_neutral");
		groundquests.grantQuest(player, "outbreak_switch_to_rebel"); 
	}
}

// ----------------------------------------------------------------------

void blacksun_guri_action_revokeEntireNeutQuestLine (obj_id player, obj_id npc)
{
	holiday.removeAllCompletedQuestsForDeathTroopers(player);
}

// ----------------------------------------------------------------------

void blacksun_guri_action_grantRebQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "outbreak_switch_to_rebel"); 
}

// ----------------------------------------------------------------------

void blacksun_guri_action_grantImpQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "outbreak_switch_to_imperial"); 
}

// ----------------------------------------------------------------------

void blacksun_guri_action_grantNeutQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "outbreak_switch_to_neutral"); 
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int blacksun_guri_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Don't be silly, %TU. I am not going to give you my comm-number.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Actually, I want to do it all again.
	if (response == "s_95")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excuse me?
			string_id message = new string_id (c_stringFile, "s_96");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to do all the quests again.
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excuse me?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to do all the quests again.
	if (response == "s_97")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you absolutely sure, %TU? You won't be able to reverse this. You will only get to keep your rewards.
			string_id message = new string_id (c_stringFile, "s_98");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 3);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you absolutely sure, %TU? You won't be able to reverse this. You will only get to keep your rewards.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_99")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			blacksun_guri_action_revokeEntireNeutQuestLine (player, npc);

			//-- NPC: Okay then, you are all set. Which version of the story would you like?
			string_id message = new string_id (c_stringFile, "s_100");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Freelance again.
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Rebel.
			boolean hasResponse1 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Imperial.
			boolean hasResponse2 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Okay then, you are all set. Which version of the story would you like?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Freelance again.
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			blacksun_guri_action_grantNeutQuest (player, npc);

			//-- NPC: Done.
			string_id message = new string_id (c_stringFile, "s_104");
			utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Rebel.
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			blacksun_guri_action_grantRebQuest (player, npc);

			//-- NPC: Done.
			string_id message = new string_id (c_stringFile, "s_105");
			utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Imperial.
	if (response == "s_103")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			blacksun_guri_action_grantImpQuest (player, npc);

			//-- NPC: Done.
			string_id message = new string_id (c_stringFile, "s_106");
			utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You have fulfilled your duties honorably, %TU. Saving the Scientists and diminishing the virus were a nice touch. I would venture to say that you are a hero.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just take the Blackwing sample.
	if (response == "s_124")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "handshake_tandem");

			doAnimationAction (player, "handshake_tandem");

			//-- NPC: Of course.
			string_id message = new string_id (c_stringFile, "s_125");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want my payment and I want you to forget everything about me.
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Of course.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want my payment and I want you to forget everything about me.
	if (response == "s_126")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: You may change your mind once you have received your payment, %TU. You can always contact Xizor, or me, if you change your mind.
			string_id message = new string_id (c_stringFile, "s_127");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I doubt it.
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_128");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 10);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You may change your mind once you have received your payment, %TU. You can always contact Xizor, or me, if you change your mind.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I doubt it.
	if (response == "s_128")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			blacksun_guri_action_completeQuest5 (player, npc);

			//-- NPC: I understand, %TU. Goodbye.
			string_id message = new string_id (c_stringFile, "s_129");
			utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Thank you for coming, %TU.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is this place and who are you?
	if (response == "s_29")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition_isPlayerRebel (player, npc))
		{
			//-- NPC: Well, originally we contacted you because we thought you were a freelancer. I see you are a part of the Alliance. 
			string_id message = new string_id (c_stringFile, "s_71");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes. I think they need my help.
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No I want to help you.
			boolean hasResponse1 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_72");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (blacksun_guri_condition_isPlayerImp (player, npc))
		{
			//-- NPC: Well, originally we contacted you because we thought you were a freelancer. I see you are a part of the Empire. 
			string_id message = new string_id (c_stringFile, "s_75");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes. I think they need my help.
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No I want to help you.
			boolean hasResponse1 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: I am Guri, lieutenant to Prince Xizor and this is the Quarantine Zone.
			string_id message = new string_id (c_stringFile, "s_49");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quarantine?  Is there a disease?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, originally we contacted you because we thought you were a freelancer. I see you are a part of the Alliance. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. I think they need my help.
	if (response == "s_72")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you sure? Once you start working for them there wont be any turning back.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 17);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No I want to help you.
	if (response == "s_73")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you sure? Once you start working for me there wont be any turning back.
			string_id message = new string_id (c_stringFile, "s_84");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you sure? Once you start working for them there wont be any turning back.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes
	if (response == "s_90")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			blacksun_guri_action_revokeNeutralGiveRebel (player, npc);

			//-- NPC: Well then...see you around...probably dead.
			string_id message = new string_id (c_stringFile, "s_91");
			utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you sure? Once you start working for me there wont be any turning back.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_85")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, in that case I am Guri, lieutenant to Prince Xizor and this is the Quarantine Zone.
			string_id message = new string_id (c_stringFile, "s_88");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quarantine?  Is there a disease?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, in that case I am Guri, lieutenant to Prince Xizor and this is the Quarantine Zone.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Quarantine?  Is there a disease?
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well yes, you could call it that. There was an accident at an Imperial Research and Prison Facility and as a result many...well, most in the area have become infected.
			string_id message = new string_id (c_stringFile, "s_142");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How is it spread?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_144");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, originally we contacted you because we thought you were a freelancer. I see you are a part of the Empire. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. I think they need my help.
	if (response == "s_76")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you sure? Once you start working for them there wont be any turning back.
			string_id message = new string_id (c_stringFile, "s_92");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_93");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No I want to help you.
	if (response == "s_77")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you sure? Once you start working for me there wont be any turning back.
			string_id message = new string_id (c_stringFile, "s_80");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_81");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you sure? Once you start working for them there wont be any turning back.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_93")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			blacksun_guri_action_revokeNeutralGiveImperial (player, npc);

			//-- NPC: Well then...see you around...probably dead.
			string_id message = new string_id (c_stringFile, "s_94");
			utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you sure? Once you start working for me there wont be any turning back.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_81")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, in that case I am Guri, lieutenant to Prince Xizor and this is the Quarantine Zone.
			string_id message = new string_id (c_stringFile, "s_83");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Quarantine?  Is there a disease?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, in that case I am Guri, lieutenant to Prince Xizor and this is the Quarantine Zone.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Quarantine?  Is there a disease?
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well yes, you could call it that. There was an accident at an Imperial Research and Prison Facility and as a result many...well, most in the area have become infected.
			string_id message = new string_id (c_stringFile, "s_142");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How is it spread?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_144");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I am Guri, lieutenant to Prince Xizor and this is the Quarantine Zone.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Quarantine?  Is there a disease?
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well yes, you could call it that. There was an accident at an Imperial Research and Prison Facility and as a result many...well, most in the area have become infected.
			string_id message = new string_id (c_stringFile, "s_142");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How is it spread?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_144");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch27 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well yes, you could call it that. There was an accident at an Imperial Research and Prison Facility and as a result many...well, most in the area have become infected.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How is it spread?
	if (response == "s_144")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: All research into the problem suggest it is an airborne virus and highly contagious.
			string_id message = new string_id (c_stringFile, "s_146");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: There is no cure?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_148");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch28 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: All research into the problem suggest it is an airborne virus and highly contagious.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: There is no cure?
	if (response == "s_148")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: No, not really. Once you have contracted the virus it will eventually kill the host.
			string_id message = new string_id (c_stringFile, "s_150");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why haven't the Imperial Navy used orbital bombardment?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 29);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No, not really. Once you have contracted the virus it will eventually kill the host.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why haven't the Imperial Navy used orbital bombardment?
	if (response == "s_152")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: There is reason to believe that Lord Vader himself needs something inside the Research Facility.
			string_id message = new string_id (c_stringFile, "s_154");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I suppose he hasn't had much luck finding someone suicidal.
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 30);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There is reason to believe that Lord Vader himself needs something inside the Research Facility.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I suppose he hasn't had much luck finding someone suicidal.
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Actually, reports show that the Empire has sent in several volunteers.
			string_id message = new string_id (c_stringFile, "s_242");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Are they using Zero-G suits?  How are they avoiding the virus?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_243");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 31);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch31 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Actually, reports show that the Empire has sent in several volunteers.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Are they using Zero-G suits?  How are they avoiding the virus?
	if (response == "s_243")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Reports show there is a doctor inside the quarantine zone that is providing an anti-virus. Several sources have confirmed the doctor is in a hold out camp just inside the quarantine zone.
			string_id message = new string_id (c_stringFile, "s_244");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What could possibly be so valuable in this research facility?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_245");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 32);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch32 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Reports show there is a doctor inside the quarantine zone that is providing an anti-virus. Several sources have confirmed the doctor is in a hold out camp just inside the quarantine zone.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What could possibly be so valuable in this research facility?
	if (response == "s_245")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: We contacted you because you have already done some fact finding on the subject. The Empire believes they can mutate the virus to make a super soldier. Considering you actually obtained the scientific data on the virus genome without the Empire knowing, you seemed like a resourceful candidate.
			string_id message = new string_id (c_stringFile, "s_247");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Oh that...Why the interest if it kills everyone?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_249");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 33);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We contacted you because you have already done some fact finding on the subject. The Empire believes they can mutate the virus to make a super soldier. Considering you actually obtained the scientific data on the virus genome without the Empire knowing, you seemed like a resourceful candidate.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh that...Why the interest if it kills everyone?
	if (response == "s_249")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: I guess you aren't completely familiar with the side-effects of the virus then.
			string_id message = new string_id (c_stringFile, "s_260");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why don't you educate me?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_261");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 34);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch34 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I guess you aren't completely familiar with the side-effects of the virus then.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why don't you educate me?
	if (response == "s_261")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: The virus appears to infect and kill the host rapidly. Not long after the host's death the virus takes over the motor functions of the dead host's body.
			string_id message = new string_id (c_stringFile, "s_262");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Are you telling me that when someone dies the virus re-animates their dead body?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_263");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch35 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The virus appears to infect and kill the host rapidly. Not long after the host's death the virus takes over the motor functions of the dead host's body.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Are you telling me that when someone dies the virus re-animates their dead body?
	if (response == "s_263")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes. We believe this is why the Empire is so interested. They are not researching a live super soldier with special powers. They are interested in cultivating a dead being that is hard to destroy and can spread their own infection to an enemy.
			string_id message = new string_id (c_stringFile, "s_264");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Does their evil know no bounds?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_265");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 36);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch36 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes. We believe this is why the Empire is so interested. They are not researching a live super soldier with special powers. They are interested in cultivating a dead being that is hard to destroy and can spread their own infection to an enemy.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Does their evil know no bounds?
	if (response == "s_265")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: We need your help, %TU. Can you infiltrate the quarantine zone and beat the Imperials from getting their hands on the virus?
			string_id message = new string_id (c_stringFile, "s_266");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is Xizor going to do with it? Sell it to the highest bidder?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_267");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 37);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch37 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We need your help, %TU. Can you infiltrate the quarantine zone and beat the Imperials from getting their hands on the virus?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is Xizor going to do with it? Sell it to the highest bidder?
	if (response == "s_267")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: I assure you Xizor has his own plans and it doesn't involve selling it.
			string_id message = new string_id (c_stringFile, "s_268");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I refuse?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_269");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch38 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I assure you Xizor has his own plans and it doesn't involve selling it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I refuse?
	if (response == "s_269")
	{
		doAnimationAction (player, "shrug_hands");

		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: It may be hard to keep the fact that you have the scientific data a secret, %TU. As you have noticed there is a vested interest in keeping it a secret.
			string_id message = new string_id (c_stringFile, "s_271");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So if I don't help, I die, and if I try and fail, I am dead as well.
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_273");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 39);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch39 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It may be hard to keep the fact that you have the scientific data a secret, %TU. As you have noticed there is a vested interest in keeping it a secret.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So if I don't help, I die, and if I try and fail, I am dead as well.
	if (response == "s_273")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: But if you try and succeed, Xizor is a very very generous individual.
			string_id message = new string_id (c_stringFile, "s_275");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Well, since I have no choice, might as well tell me your plans.
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_277");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 40);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch40 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: But if you try and succeed, Xizor is a very very generous individual.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well, since I have no choice, might as well tell me your plans.
	if (response == "s_277")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: The plan is simple. Make your way into the quarantine zone and receive the anti-virus. Once you have obtained a defense against the virus you will need to find the research facility and search for the original strain of the virus.
			string_id message = new string_id (c_stringFile, "s_279");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if no such strain exists?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_280");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 41);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch41 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The plan is simple. Make your way into the quarantine zone and receive the anti-virus. Once you have obtained a defense against the virus you will need to find the research facility and search for the original strain of the virus.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if no such strain exists?
	if (response == "s_280")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: We will be monitoring your progress, %TU. We are certain the strain exists but it is imperative that you arrive before other interested parties. Is there anything else you need to discuss?
			string_id message = new string_id (c_stringFile, "s_281");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So there are survivors of this virus?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What symptoms do the infected exhibit?
			boolean hasResponse1 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How did the virus escape in the first place?
			boolean hasResponse2 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: No, I'm ready.
			boolean hasResponse3 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_283");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_293");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_303");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_309");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 42);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch42 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We will be monitoring your progress, %TU. We are certain the strain exists but it is imperative that you arrive before other interested parties. Is there anything else you need to discuss?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So there are survivors of this virus?
	if (response == "s_283")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Quite a few based on reports.
			string_id message = new string_id (c_stringFile, "s_285");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why aren't they being evacuated?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_287");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 43);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What symptoms do the infected exhibit?
	if (response == "s_293")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Symptoms of the disease are the sudden onset of seizures followed by a phase where the victim appears dead. 
			string_id message = new string_id (c_stringFile, "s_295");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And then they just wake up?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_297");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 46);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How did the virus escape in the first place?
	if (response == "s_303")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lord Vader is convinced the Rebellion is behind the outbreak. We think it was a research accident. Did you have any other questions?
			string_id message = new string_id (c_stringFile, "s_305");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So there are survivors of this virus?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What symptoms do the infected exhibit?
			boolean hasResponse1 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How did the virus escape in the first place?
			boolean hasResponse2 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: No, I'm ready.
			boolean hasResponse3 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_283");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_293");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_303");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_309");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 42);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I'm ready.
	if (response == "s_309")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			blacksun_guri_action_grantMissionOne (player, npc);

			//-- NPC: I have uploaded the details to your datapad. We have procured a stolen Imperial authorization code that shows you are working as an Imperial volunteer. Anyone who examines the authorization will think you are working for Vader himself.
			string_id message = new string_id (c_stringFile, "s_311");
			utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch43 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Quite a few based on reports.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why aren't they being evacuated?
	if (response == "s_287")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: There have been attempts but most have proven to be fatal to rescue parties.
			string_id message = new string_id (c_stringFile, "s_289");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I see.
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_291");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 44);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch44 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There have been attempts but most have proven to be fatal to rescue parties.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see.
	if (response == "s_291")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Any other questions?
			string_id message = new string_id (c_stringFile, "s_312");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So there are survivors of this virus?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What symptoms do the infected exhibit?
			boolean hasResponse1 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How did the virus escape in the first place?
			boolean hasResponse2 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: No, I'm ready.
			boolean hasResponse3 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_283");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_293");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_303");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_309");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 42);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch45 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Any other questions?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So there are survivors of this virus?
	if (response == "s_283")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Quite a few based on reports.
			string_id message = new string_id (c_stringFile, "s_285");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why aren't they being evacuated?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_287");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 43);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What symptoms do the infected exhibit?
	if (response == "s_293")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Symptoms of the disease are the sudden onset of seizures followed by a phase where the victim appears dead. 
			string_id message = new string_id (c_stringFile, "s_295");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And then they just wake up?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_297");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 46);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How did the virus escape in the first place?
	if (response == "s_303")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lord Vader is convinced the Rebellion is behind the outbreak. We think it was a research accident. Did you have any other questions?
			string_id message = new string_id (c_stringFile, "s_305");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So there are survivors of this virus?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What symptoms do the infected exhibit?
			boolean hasResponse1 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How did the virus escape in the first place?
			boolean hasResponse2 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: No, I'm ready.
			boolean hasResponse3 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_283");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_293");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_303");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_309");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 42);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I'm ready.
	if (response == "s_309")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			blacksun_guri_action_grantMissionOne (player, npc);

			//-- NPC: I have uploaded the details to your datapad. We have procured a stolen Imperial authorization code that shows you are working as an Imperial volunteer. Anyone who examines the authorization will think you are working for Vader himself.
			string_id message = new string_id (c_stringFile, "s_311");
			utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch46 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Symptoms of the disease are the sudden onset of seizures followed by a phase where the victim appears dead. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: And then they just wake up?
	if (response == "s_297")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Sometime after death the victim suddenly reanimates and becomes very violent. Any non-infected in the immediate area risk being attacked and, if subdued, eaten by the infected.
			string_id message = new string_id (c_stringFile, "s_299");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wait...what?  Eaten?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_301");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 47);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch47 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Sometime after death the victim suddenly reanimates and becomes very violent. Any non-infected in the immediate area risk being attacked and, if subdued, eaten by the infected.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wait...what?  Eaten?
	if (response == "s_301")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: The infected are apparently in a constant state of hunger which appears to be the motivation for attacking.
			string_id message = new string_id (c_stringFile, "s_313");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: This is horrible.
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_314");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch48 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The infected are apparently in a constant state of hunger which appears to be the motivation for attacking.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: This is horrible.
	if (response == "s_314")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Any other questions?
			string_id message = new string_id (c_stringFile, "s_315");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So there are survivors of this virus?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What symptoms do the infected exhibit?
			boolean hasResponse1 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How did the virus escape in the first place?
			boolean hasResponse2 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: No, I'm ready.
			boolean hasResponse3 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_283");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_293");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_303");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_309");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 42);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch49 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Any other questions?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So there are survivors of this virus?
	if (response == "s_283")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Quite a few based on reports.
			string_id message = new string_id (c_stringFile, "s_285");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why aren't they being evacuated?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_287");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 43);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What symptoms do the infected exhibit?
	if (response == "s_293")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Symptoms of the disease are the sudden onset of seizures followed by a phase where the victim appears dead. 
			string_id message = new string_id (c_stringFile, "s_295");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And then they just wake up?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_297");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 46);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How did the virus escape in the first place?
	if (response == "s_303")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lord Vader is convinced the Rebellion is behind the outbreak. We think it was a research accident. Did you have any other questions?
			string_id message = new string_id (c_stringFile, "s_305");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So there are survivors of this virus?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What symptoms do the infected exhibit?
			boolean hasResponse1 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How did the virus escape in the first place?
			boolean hasResponse2 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: No, I'm ready.
			boolean hasResponse3 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_283");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_293");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_303");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_309");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 42);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I'm ready.
	if (response == "s_309")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			blacksun_guri_action_grantMissionOne (player, npc);

			//-- NPC: I have uploaded the details to your datapad. We have procured a stolen Imperial authorization code that shows you are working as an Imperial volunteer. Anyone who examines the authorization will think you are working for Vader himself.
			string_id message = new string_id (c_stringFile, "s_311");
			utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch50 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Lord Vader is convinced the Rebellion is behind the outbreak. We think it was a research accident. Did you have any other questions?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So there are survivors of this virus?
	if (response == "s_283")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Quite a few based on reports.
			string_id message = new string_id (c_stringFile, "s_285");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why aren't they being evacuated?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_287");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 43);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What symptoms do the infected exhibit?
	if (response == "s_293")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Symptoms of the disease are the sudden onset of seizures followed by a phase where the victim appears dead. 
			string_id message = new string_id (c_stringFile, "s_295");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And then they just wake up?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_297");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 46);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How did the virus escape in the first place?
	if (response == "s_303")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lord Vader is convinced the Rebellion is behind the outbreak. We think it was a research accident. Did you have any other questions?
			string_id message = new string_id (c_stringFile, "s_305");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So there are survivors of this virus?
			boolean hasResponse0 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What symptoms do the infected exhibit?
			boolean hasResponse1 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How did the virus escape in the first place?
			boolean hasResponse2 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: No, I'm ready.
			boolean hasResponse3 = false;
			if (blacksun_guri_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_283");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_293");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_303");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_309");

				utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 42);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I'm ready.
	if (response == "s_309")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			blacksun_guri_action_grantMissionOne (player, npc);

			//-- NPC: I have uploaded the details to your datapad. We have procured a stolen Imperial authorization code that shows you are working as an Imperial volunteer. Anyone who examines the authorization will think you are working for Vader himself.
			string_id message = new string_id (c_stringFile, "s_311");
			utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int blacksun_guri_handleBranch52 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Uh, hello. You look like you might be lost. Would you like to know what is going on here?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_149")
	{
		//-- [NOTE] 
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			blacksun_guri_action_grantNeutQuest (player, npc);

			//-- NPC: Okay, let me contact you via comm after I check with Prince Xizor.
			string_id message = new string_id (c_stringFile, "s_153");
			utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.blacksun_guri");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.blacksun_guri");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (blacksun_guri_condition_hasCompletedAll (player, npc))
	{
		//-- NPC: Don't be silly, %TU. I am not going to give you my comm-number.
		string_id message = new string_id (c_stringFile, "s_130");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Actually, I want to do it all again.
		boolean hasResponse0 = false;
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_95");

			utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 1);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "blacksun_guri", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (blacksun_guri_condition_hasCompletedMissions (player, npc))
	{
		//-- NPC: You have fulfilled your duties honorably, %TU. Saving the Scientists and diminishing the virus were a nice touch. I would venture to say that you are a hero.
		string_id message = new string_id (c_stringFile, "s_123");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Just take the Blackwing sample.
		boolean hasResponse0 = false;
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_124");

			utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 8);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "blacksun_guri", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (blacksun_guri_condition_hasFoundStormtroopers (player, npc))
	{
		//-- NPC: Great job finding the Stormtrooper contingent. Now complete your missions and report back.
		string_id message = new string_id (c_stringFile, "s_122");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (blacksun_guri_condition_hasSecondQuestImperial (player, npc))
	{
		//-- NPC: You need to find those Stormtroopers at the Research and Prison facility, %TU. I'll be in touch once you locate them.
		string_id message = new string_id (c_stringFile, "s_121");
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (blacksun_guri_condition_hasFirstQuestNeutral (player, npc))
	{
		//-- NPC: Please hurry, %TU, the Empire already has operatives insider the quarantine zone.
		string_id message = new string_id (c_stringFile, "s_74");
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (blacksun_guri_condition_isLiveConversion (player, npc))
	{
		doAnimationAction (npc, "nod");

		blacksun_guri_action_clearLiveConversion (player, npc);

		//-- NPC: Thank you for coming, %TU.
		string_id message = new string_id (c_stringFile, "s_27");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What is this place and who are you?
		boolean hasResponse0 = false;
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_29");

			utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 15);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "blacksun_guri", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (blacksun_guri_condition_hasDeletedLiveConversion (player, npc))
	{
		//-- NPC: Uh, hello. You look like you might be lost. Would you like to know what is going on here?
		string_id message = new string_id (c_stringFile, "s_147");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes.
		boolean hasResponse0 = false;
		if (blacksun_guri_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_149");

			utils.setScriptVar (player, "conversation.blacksun_guri.branchId", 52);

			npcStartConversation (player, npc, "blacksun_guri", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (blacksun_guri_condition__defaultCondition (player, npc))
	{
		//-- NPC: I suggest you evacuate the area citizen. This is no place to be curious.
		string_id message = new string_id (c_stringFile, "s_157");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "blacksun_guri")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.blacksun_guri.branchId");

	if (branchId == 1 && blacksun_guri_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && blacksun_guri_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && blacksun_guri_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && blacksun_guri_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && blacksun_guri_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && blacksun_guri_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && blacksun_guri_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && blacksun_guri_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && blacksun_guri_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && blacksun_guri_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && blacksun_guri_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && blacksun_guri_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && blacksun_guri_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && blacksun_guri_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && blacksun_guri_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && blacksun_guri_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && blacksun_guri_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 27 && blacksun_guri_handleBranch27 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 28 && blacksun_guri_handleBranch28 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && blacksun_guri_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && blacksun_guri_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 31 && blacksun_guri_handleBranch31 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 32 && blacksun_guri_handleBranch32 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && blacksun_guri_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 34 && blacksun_guri_handleBranch34 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 35 && blacksun_guri_handleBranch35 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 36 && blacksun_guri_handleBranch36 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 37 && blacksun_guri_handleBranch37 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 38 && blacksun_guri_handleBranch38 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 39 && blacksun_guri_handleBranch39 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 40 && blacksun_guri_handleBranch40 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 41 && blacksun_guri_handleBranch41 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 42 && blacksun_guri_handleBranch42 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 43 && blacksun_guri_handleBranch43 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 44 && blacksun_guri_handleBranch44 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 45 && blacksun_guri_handleBranch45 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 46 && blacksun_guri_handleBranch46 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 47 && blacksun_guri_handleBranch47 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 48 && blacksun_guri_handleBranch48 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 49 && blacksun_guri_handleBranch49 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 50 && blacksun_guri_handleBranch50 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 52 && blacksun_guri_handleBranch52 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.blacksun_guri.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

