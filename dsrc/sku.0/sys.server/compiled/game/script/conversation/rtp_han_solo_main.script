// ======================================================================
//
// rtp_han_solo_main.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.groundquests;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/rtp_han_solo_main";

// ======================================================================
// Script Conditions
// ======================================================================

boolean rtp_han_solo_main_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean rtp_han_solo_main_condition_rtp_han_solo_01_active (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "rtp_han_solo_01");
}

// ----------------------------------------------------------------------

boolean rtp_han_solo_main_condition_rtp_han_solo_01_complete (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "rtp_han_solo_01", "rtp_han_solo_01_03") ||
	groundquests.hasCompletedQuest(player, "rtp_han_solo_01");
}

// ----------------------------------------------------------------------

boolean rtp_han_solo_main_condition_rtp_han_solo_02_active (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "rtp_han_solo_02");
}

// ----------------------------------------------------------------------

boolean rtp_han_solo_main_condition_rtp_han_solo_02_completed (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "rtp_han_solo_02", "rtp_han_solo_02_02") ||
	groundquests.hasCompletedQuest(player, "rtp_han_solo_02");
}

// ----------------------------------------------------------------------

boolean rtp_han_solo_main_condition_completedNienNunb (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "rtp_nien_nunb_01");
}

// ----------------------------------------------------------------------

boolean rtp_han_solo_main_condition_notRebel (obj_id player, obj_id npc)
{
	string playerFaction = factions.getFaction(player);
	if ( playerFaction == null || !playerFaction.equals("Rebel") )
	{
		return true;
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean rtp_han_solo_main_condition_rebel_isOnLeave (obj_id player, obj_id npc)
{
	return factions.isOnLeave(player);
}

// ======================================================================
// Script Actions
// ======================================================================

void rtp_han_solo_main_action_rtp_han_solo_01_granted (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "rtp_han_solo_01");
}

// ----------------------------------------------------------------------

void rtp_han_solo_main_action_rtp_han_solo_01_signal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "rtp_han_solo_01_03");
}

// ----------------------------------------------------------------------

void rtp_han_solo_main_action_rtp_han_solo_02_signal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "rtp_han_solo_02_02");
}

// ----------------------------------------------------------------------

void rtp_han_solo_main_action_rtp_han_solo_02_granted (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "rtp_han_solo_02");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int rtp_han_solo_main_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Mahar Spince was the traitor? That's too bad, I liked taking his money in Sabaac. Okay, well I'm going to go speak with Nym, but I want you to go disrupt the Imperial base here on Lok.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on my way.
	if (response == "s_22")
	{
		//-- [NOTE] 
		if (rtp_han_solo_main_condition__defaultCondition (player, npc))
		{
			rtp_han_solo_main_action_rtp_han_solo_02_granted (player, npc);

			//-- NPC: Right. The base is commanded by a man named General Otto. I don't think much of him personally. Show him that being on Lok is not an easy assignment.
			string_id message = new string_id (c_stringFile, "s_25");
			utils.removeScriptVar (player, "conversation.rtp_han_solo_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thank you.
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (rtp_han_solo_main_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well.
			string_id message = new string_id (c_stringFile, "s_30");
			utils.removeScriptVar (player, "conversation.rtp_han_solo_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rtp_han_solo_main_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Finally got through Nien, eh? That's good enough for me. I need some help to get Nym to listen. If he won't meet with me, I can't convince him to help the Rebel Alliance. So you are going to help make him want to listen.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm ready. What do I need to do?
	if (response == "s_36")
	{
		//-- [NOTE] 
		if (rtp_han_solo_main_condition__defaultCondition (player, npc))
		{
			rtp_han_solo_main_action_rtp_han_solo_01_granted (player, npc);

			//-- NPC: Some of Nym's munitions were stolen by some Blood Razor pirates. First get back those munitions and eliminate the Blood Razor leader, Jorund Saleem. That will be a good start. But they were aided by someone inside of Nym's organization. So you'll need to find out who and deal with them as well.
			string_id message = new string_id (c_stringFile, "s_38");
			utils.removeScriptVar (player, "conversation.rtp_han_solo_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thank you.
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (rtp_han_solo_main_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well.
			string_id message = new string_id (c_stringFile, "s_42");
			utils.removeScriptVar (player, "conversation.rtp_han_solo_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.rtp_han_solo_main");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	
	faceTo( self, player );

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.rtp_han_solo_main");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (rtp_han_solo_main_condition_notRebel (player, npc))
	{
		//-- NPC: I don't know who you are, and I can't afford to find out. Shoo. Go away.
		string_id message = new string_id (c_stringFile, "s_44");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!rtp_han_solo_main_condition_completedNienNunb (player, npc))
	{
		//-- NPC: Hey kid. Well okay, maybe you're no kid. But that doesn't change the fact that I don't have time to talk right now. I have to figure out how to get Nym to speak with me.
		string_id message = new string_id (c_stringFile, "s_24");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rtp_han_solo_main_condition_rebel_isOnLeave (player, npc))
	{
		//-- NPC: You look capable, but I'm only working with active duty soldiers.
		string_id message = new string_id (c_stringFile, "s_43");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rtp_han_solo_main_condition_rtp_han_solo_02_completed (player, npc))
	{
		rtp_han_solo_main_action_rtp_han_solo_02_signal (player, npc);

		//-- NPC: Nice work. I hear General Otto turned tail and ran. Wish I'd been there to see it. I'd love to have some more fun with them, but you are needed on Dantooine. Admiral Ackbar is expecting you.
		string_id message = new string_id (c_stringFile, "s_9");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rtp_han_solo_main_condition_rtp_han_solo_02_active (player, npc))
	{
		//-- NPC: Go disrupt the Imperial base here on Lok. It's commanded by a man named General Otto. I don't think much of him personally. Show him that being on Lok is not an easy assignment.
		string_id message = new string_id (c_stringFile, "s_16");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rtp_han_solo_main_condition_rtp_han_solo_01_complete (player, npc))
	{
		rtp_han_solo_main_action_rtp_han_solo_01_signal (player, npc);

		//-- NPC: Mahar Spince was the traitor? That's too bad, I liked taking his money in Sabaac. Okay, well I'm going to go speak with Nym, but I want you to go disrupt the Imperial base here on Lok.
		string_id message = new string_id (c_stringFile, "s_20");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm on my way.
		boolean hasResponse0 = false;
		if (rtp_han_solo_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No thank you.
		boolean hasResponse1 = false;
		if (rtp_han_solo_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_22");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_26");

			utils.setScriptVar (player, "conversation.rtp_han_solo_main.branchId", 6);

			npcStartConversation (player, npc, "rtp_han_solo_main", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rtp_han_solo_main_condition_rtp_han_solo_01_active (player, npc))
	{
		//-- NPC: Some of Nym's munitions were stolen by some Blood Razor pirates. First get back those munitions and eliminate the Blood Razor leader, Jorund Saleem. That will be a good start. But they were aided by someone inside of Nym's organization. So you'll need to find out who and deal with them as well.
		string_id message = new string_id (c_stringFile, "s_32");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rtp_han_solo_main_condition__defaultCondition (player, npc))
	{
		//-- NPC: Finally got through Nien, eh? That's good enough for me. I need some help to get Nym to listen. If he won't meet with me, I can't convince him to help the Rebel Alliance. So you are going to help make him want to listen.
		string_id message = new string_id (c_stringFile, "s_34");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm ready. What do I need to do?
		boolean hasResponse0 = false;
		if (rtp_han_solo_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No thank you.
		boolean hasResponse1 = false;
		if (rtp_han_solo_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_36");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_40");

			utils.setScriptVar (player, "conversation.rtp_han_solo_main.branchId", 10);

			npcStartConversation (player, npc, "rtp_han_solo_main", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "rtp_han_solo_main")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.rtp_han_solo_main.branchId");

	if (branchId == 6 && rtp_han_solo_main_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && rtp_han_solo_main_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.rtp_han_solo_main.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

