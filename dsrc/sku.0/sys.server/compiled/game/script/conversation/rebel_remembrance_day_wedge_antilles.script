// ======================================================================
//
// rebel_remembrance_day_wedge_antilles.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.badge;
include library.buff;
include library.chat;
include library.collection;
include library.conversation;
include library.create;
include library.factions;
include library.groundquests;
include library.holiday;
include library.static_item;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/rebel_remembrance_day_wedge_antilles";

// ======================================================================
// Script Conditions
// ======================================================================

boolean rebel_remembrance_day_wedge_antilles_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_isBelow60thLevelOrTraderEntertainer (obj_id player, obj_id npc)
{
	return (rebel_remembrance_day_wedge_antilles_condition_isBelow60thLevel(player, npc) || rebel_remembrance_day_wedge_antilles_condition_isEntertainer(player, npc) || rebel_remembrance_day_wedge_antilles_condition_isTrader(player, npc));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_isEntertainer (obj_id player, obj_id npc)
{	
	faceTo(npc, player);
	return utils.isProfession(player, utils.ENTERTAINER);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_isTrader (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return utils.isProfession(player, utils.TRADER);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_isBelow60thLevel (obj_id player, obj_id npc)
{
	return (60 > getLevel(player));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_hasAMisionActive (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	for(int i = 0; i < holiday.ALL_REBEL_QUESTS.length; i++)
	{
		if(groundquests.isQuestActive(player, holiday.ALL_REBEL_QUESTS[i]))
		{
			return true;
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_hasAnIncompleteCombatMission (obj_id player, obj_id npc)
{
	return (!rebel_remembrance_day_wedge_antilles_condition_completed7thQuest(player, npc) && 
	(rebel_remembrance_day_wedge_antilles_condition_hasCompleted1stMissionNot2nd(player, npc) ||
	rebel_remembrance_day_wedge_antilles_condition_hasCompleted2ndMissionNot3rd(player, npc) || 
	rebel_remembrance_day_wedge_antilles_condition_hasCompleted3rdMissionNot4th(player, npc) ||
	rebel_remembrance_day_wedge_antilles_condition_hasCompleted4thMissionNot5th(player, npc) ||
	rebel_remembrance_day_wedge_antilles_condition_hasCompleted5thMissionNot6th(player, npc) ||
	rebel_remembrance_day_wedge_antilles_condition_hasCompleted6thMissionNot7th(player, npc)));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_hasNotStartedSecondMission (obj_id player, obj_id npc)
{
	return (!groundquests.isQuestActive(player, holiday.EMPIREDAYQUEST_REB_COMBAT_02)
	&& groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_01));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_isChampion (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return hasCompletedCollectionSlot(player, holiday.REMEMBRANCE_DAY_CHAMPION_BADGE);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_completed7thQuest (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_07);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_completed7thQuestNoAutograph (obj_id player, obj_id npc)
{
	return rebel_remembrance_day_wedge_antilles_condition_completed7thQuest(player, npc) && !groundquests.isQuestActiveOrComplete(player, holiday.EMPIREDAYQUEST_REB_COMBAT_AUTOGRAPH);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_isImperialPlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (factions.isImperial(player));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_isNeutralPlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return(!factions.isImperial(player) && !factions.isRebel(player));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_completed7thQuestHasAutograph (obj_id player, obj_id npc)
{
	return rebel_remembrance_day_wedge_antilles_condition_completed7thQuest(player, npc) && groundquests.isQuestActiveOrComplete(player, holiday.EMPIREDAYQUEST_REB_COMBAT_AUTOGRAPH);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_hasCompleted7thMission (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_07));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_hasNotCompletedMission1 (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.isQuestActive(player, holiday.EMPIREDAYQUEST_REB_COMBAT_01) && !groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_01);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_hasCompleted1stMissionNot2nd (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_01)
	&& !groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_02)
	&& groundquests.isQuestActive(player, holiday.EMPIREDAYQUEST_REB_COMBAT_02));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_hasCompleted2ndMissionNot3rd (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_02)
	&& !groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_03));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_hasCompleted3rdMissionNot4th (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_03)
	&& !groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_04));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_hasCompleted4thMissionNot5th (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_04)
	&& !groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_05));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_hasCompleted5thMissionNot6th (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_05)
	&& !groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_06));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_wedge_antilles_condition_hasCompleted6thMissionNot7th (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_06)
	&& !groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_07);
}

// ======================================================================
// Script Actions
// ======================================================================

void rebel_remembrance_day_wedge_antilles_action_grantMissionOne (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_01); 
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_wedge_antilles_action_grantMissionTwo (obj_id player, obj_id npc)
{
	if(getCollectionSlotValue(player, holiday.REBEL_RESCUE_START_SLOT) <= 0)
			modifyCollectionSlotValue(player, holiday.REBEL_RESCUE_START_SLOT, 1);

	groundquests.grantQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_02); 
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_wedge_antilles_action_revokeMission2Regrant (obj_id player, obj_id npc)
{
	if(groundquests.isQuestActive(player, holiday.EMPIREDAYQUEST_REB_COMBAT_02))
	{
		groundquests.clearQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_02);
	}
	
	groundquests.grantQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_02); 
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_wedge_antilles_action_revokeMission3Regrant (obj_id player, obj_id npc)
{
	if(groundquests.isQuestActive(player, holiday.EMPIREDAYQUEST_REB_COMBAT_03))
	{
		groundquests.clearQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_03);
	}
	
	groundquests.grantQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_03); 
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_wedge_antilles_action_revokeMission4Regrant (obj_id player, obj_id npc)
{
	if(groundquests.isQuestActive(player, holiday.EMPIREDAYQUEST_REB_COMBAT_04))
	{
		groundquests.clearQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_04);
	}
	
	groundquests.grantQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_04); 
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_wedge_antilles_action_spawnTroopers (obj_id player, obj_id npc)
{
	//spawn some mean enemies
	for (int i = 0; i < 3; i++)
	{
		location guardLocation = groundquests.getRandom2DLocationAroundLocation(npc, 1, 1, 5, 12);
		int mobLevel = getLevel(player);
		obj_id guard = create.object("rebel_emperorsday_ceremony_sentry", guardLocation, mobLevel);
		attachScript(guard, "event.emp_day.factional_guard_self_destruct");
		startCombat(guard, player);
	}
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_wedge_antilles_action_revokeMission5Regrant (obj_id player, obj_id npc)
{
	if(groundquests.isQuestActive(player, holiday.EMPIREDAYQUEST_REB_COMBAT_05))
	{
		groundquests.clearQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_05);
	}
	
	groundquests.grantQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_05); 
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_wedge_antilles_action_revokeMission6Regrant (obj_id player, obj_id npc)
{
	if(groundquests.isQuestActive(player, holiday.EMPIREDAYQUEST_REB_COMBAT_06))
	{
		groundquests.clearQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_06);
	}
	
	groundquests.grantQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_06); 
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_wedge_antilles_action_revokeMission7Regrant (obj_id player, obj_id npc)
{
	if(groundquests.isQuestActive(player, holiday.EMPIREDAYQUEST_REB_COMBAT_07))
	{
		groundquests.clearQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_07);
	}
	
	groundquests.grantQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_07); 
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_wedge_antilles_action_grantAutograph (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, holiday.EMPIREDAYQUEST_REB_COMBAT_AUTOGRAPH); 
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_wedge_antilles_action_giveWaypoint (obj_id player, obj_id npc)
{
	location loc = new location(4000, 37, -6168, "yavin4");
	obj_id wpt = createWaypointInDatapad(player, loc);
	setWaypointName(wpt, "Detainment Facility");
	setWaypointActive(wpt, true);
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_wedge_antilles_action_sendSignalToSpeak (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "hasSpokenToRecoveryQuestNpc");

}

// ======================================================================
// Script %TO Tokens
// ======================================================================

string rebel_remembrance_day_wedge_antilles_tokenTO_timeLeftRecruitment (obj_id player, obj_id npc)
{
	string returnString = holiday.getTimeRemainingBeforeLockoutRemoved(player, holiday.EMPIRE_DAY_RECRUITMENT_TIMESTAMP);
	if(returnString == null || returnString.equals(""))
		return "might have to contact Customer Service. I can't seem to get any time data off your character.";
	return returnString;
}

// ----------------------------------------------------------------------

string rebel_remembrance_day_wedge_antilles_tokenTO_timeLeftPropaganda (obj_id player, obj_id npc)
{
	string returnString = holiday.getTimeRemainingBeforeLockoutRemoved(player, holiday.EMPIRE_DAY_PROPAGANDA_TIMESTAMP);
	if(returnString == null || returnString.equals(""))
		return "might have to contact Customer Service. I can't seem to get any time data off your character.";
	return returnString;
}

// ======================================================================
// Script %DI Tokens
// ======================================================================

int rebel_remembrance_day_wedge_antilles_tokenDI_notUsed (obj_id player, obj_id npc)
{
	return 0;
}

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int rebel_remembrance_day_wedge_antilles_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Uh oh.  What happened at the Detainment Facility? Are you stuck?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need a waypoint to the facility.
	if (response == "s_83")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_wedge_antilles_action_giveWaypoint (player, npc);

			//-- NPC: Here you go.
			string_id message = new string_id (c_stringFile, "s_85");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need you to reset my mission.
	if (response == "s_84")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which one?
			string_id message = new string_id (c_stringFile, "s_87");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: The first pilot mission.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition_hasCompleted1stMissionNot2nd (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: The second pilot mission.
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_wedge_antilles_condition_hasCompleted2ndMissionNot3rd (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: The third pilot mission.
			boolean hasResponse2 = false;
			if (rebel_remembrance_day_wedge_antilles_condition_hasCompleted3rdMissionNot4th (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: The fourth pilot mission.
			boolean hasResponse3 = false;
			if (rebel_remembrance_day_wedge_antilles_condition_hasCompleted4thMissionNot5th (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: The fifth pilot mission.
			boolean hasResponse4 = false;
			if (rebel_remembrance_day_wedge_antilles_condition_hasCompleted5thMissionNot6th (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: The sixth pilot mission.
			boolean hasResponse5 = false;
			if (rebel_remembrance_day_wedge_antilles_condition_hasCompleted6thMissionNot7th (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_93");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Which one?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The first pilot mission.
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you sure you want me to reset this mission?
			string_id message = new string_id (c_stringFile, "s_99");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The second pilot mission.
	if (response == "s_93")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you sure you want me to reset this mission?
			string_id message = new string_id (c_stringFile, "s_103");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The third pilot mission.
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you sure you want me to reset this mission?
			string_id message = new string_id (c_stringFile, "s_107");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The fourth pilot mission.
	if (response == "s_112")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you sure you want me to reset this mission?
			string_id message = new string_id (c_stringFile, "s_115");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_117");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The fifth pilot mission.
	if (response == "s_122")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you sure you want me to reset this mission?
			string_id message = new string_id (c_stringFile, "s_127");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_129");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The sixth pilot mission.
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you sure you want me to reset this mission?
			string_id message = new string_id (c_stringFile, "s_145");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_149");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you sure you want me to reset this mission?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_100")
	{
		rebel_remembrance_day_wedge_antilles_action_revokeMission2Regrant (player, npc);

		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Done.
			string_id message = new string_id (c_stringFile, "s_175");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you sure you want me to reset this mission?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_104")
	{
		rebel_remembrance_day_wedge_antilles_action_revokeMission3Regrant (player, npc);

		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Okay done. Do you need a waypoint to the facility?
			string_id message = new string_id (c_stringFile, "s_106");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_123");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Okay done. Do you need a waypoint to the facility?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_123")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_wedge_antilles_action_giveWaypoint (player, npc);

			//-- NPC: Here you go.
			string_id message = new string_id (c_stringFile, "s_85");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you sure you want me to reset this mission?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_111")
	{
		rebel_remembrance_day_wedge_antilles_action_revokeMission4Regrant (player, npc);

		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Okay done. Do you need a waypoint to the facility?
			string_id message = new string_id (c_stringFile, "s_113");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Okay done. Do you need a waypoint to the facility?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_124")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_wedge_antilles_action_giveWaypoint (player, npc);

			//-- NPC: Here you go.
			string_id message = new string_id (c_stringFile, "s_85");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you sure you want me to reset this mission?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_117")
	{
		rebel_remembrance_day_wedge_antilles_action_revokeMission5Regrant (player, npc);

		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Okay done. Do you need a waypoint to the facility?
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_125");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Okay done. Do you need a waypoint to the facility?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_125")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_wedge_antilles_action_giveWaypoint (player, npc);

			//-- NPC: Here you go.
			string_id message = new string_id (c_stringFile, "s_85");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you sure you want me to reset this mission?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_129")
	{
		rebel_remembrance_day_wedge_antilles_action_revokeMission6Regrant (player, npc);

		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Okay done. Do you need a waypoint to the facility?
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_135");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Okay done. Do you need a waypoint to the facility?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_135")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_wedge_antilles_action_giveWaypoint (player, npc);

			//-- NPC: Here you go.
			string_id message = new string_id (c_stringFile, "s_85");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you sure you want me to reset this mission?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_149")
	{
		rebel_remembrance_day_wedge_antilles_action_revokeMission7Regrant (player, npc);

		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Okay done. Do you need a waypoint to the facility?
			string_id message = new string_id (c_stringFile, "s_153");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 17);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Okay done. Do you need a waypoint to the facility?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_wedge_antilles_action_giveWaypoint (player, npc);

			//-- NPC: Here you go.
			string_id message = new string_id (c_stringFile, "s_85");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I received word from SpecOps that all 6 pilots have been rescued, %TU, fantastic work!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It was challenging but somehow your plan worked.
	if (response == "s_158")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: I heard you had to defeat a Force Sensitive too. That should make for a heroic story.
			string_id message = new string_id (c_stringFile, "s_160");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Speaking of heroic. Do you think I could get your autograph?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 20);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I heard you had to defeat a Force Sensitive too. That should make for a heroic story.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Speaking of heroic. Do you think I could get your autograph?
	if (response == "s_161")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "huh");

			//-- NPC: Are you serious?
			string_id message = new string_id (c_stringFile, "s_162");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, I even brought a pen for you to use.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you serious?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I even brought a pen for you to use.
	if (response == "s_163")
	{
		doAnimationAction (player, "embarrassed");

		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "handshake_tandem");

			doAnimationAction (player, "handshake_tandem");

			rebel_remembrance_day_wedge_antilles_action_grantAutograph (player, npc);

			//-- NPC: It would be my pleasure, %TU. Here you go!
			string_id message = new string_id (c_stringFile, "s_164");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You're back.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You asked me to come back. What now?
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition_isBelow60thLevel (player, npc))
		{
			//-- NPC: I like you, %TU, but you are a little green behind the ears for the next mission.
			string_id message = new string_id (c_stringFile, "s_52");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I guess I'll come back when I have more experience then.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Even though I lack the experience I still want to try.
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_54");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_58");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 24);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition_isTrader (player, npc))
		{
			//-- NPC: I like you, %TU, but you being a trader makes things a little...complicated. You may not be suited for the next mission.
			string_id message = new string_id (c_stringFile, "s_66");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Oh is combat involved?  Yeah I guess I'll pass.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Even though I am a Trader I am completely capable of doing combat missions.
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_68");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_72");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition_isEntertainer (player, npc))
		{
			//-- NPC: I like you, %TU, but you being an entertainer makes things a little...complicated. You may not be suited for the next mission.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Oh is combat involved?  Yeah I guess I'll pass.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Even though I am an Entertainer I am completely capable of doing combat missions.
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_78");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 30);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here is the deal, %TU. I need you to infiltrate that detainment facility and rescue any Alliance personnel that may be inside.
			string_id message = new string_id (c_stringFile, "s_81");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Do you know how many?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 31);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I like you, %TU, but you are a little green behind the ears for the next mission.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I guess I'll come back when I have more experience then.
	if (response == "s_54")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Sounds good, %TU. See you soon I hope.
			string_id message = new string_id (c_stringFile, "s_56");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Even though I lack the experience I still want to try.
	if (response == "s_58")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you sure? If you fail, you can't hold me responsible.
			string_id message = new string_id (c_stringFile, "s_60");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am sure. Please tell me about the mission.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_62");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you sure? If you fail, you can't hold me responsible.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am sure. Please tell me about the mission.
	if (response == "s_62")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here is the deal, %TU. I need you to infiltrate that detainment facility and rescue any Alliance personnel that may be inside.
			string_id message = new string_id (c_stringFile, "s_64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Do you know how many?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 31);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch27 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here is the deal, %TU. I need you to infiltrate that detainment facility and rescue any Alliance personnel that may be inside.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do you know how many?
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Based on the intelligence you collected there appears to be six Alliance pilots being held at that location.
			string_id message = new string_id (c_stringFile, "s_90");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm ready to give it my best.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_92");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 32);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch28 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I like you, %TU, but you being a trader makes things a little...complicated. You may not be suited for the next mission.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh is combat involved?  Yeah I guess I'll pass.
	if (response == "s_68")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Sounds good, %TU. See you around.
			string_id message = new string_id (c_stringFile, "s_70");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Even though I am a Trader I am completely capable of doing combat missions.
	if (response == "s_72")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you sure? If you fail, you can't hold me responsible.
			string_id message = new string_id (c_stringFile, "s_60");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am sure. Please tell me about the mission.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_62");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I like you, %TU, but you being an entertainer makes things a little...complicated. You may not be suited for the next mission.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh is combat involved?  Yeah I guess I'll pass.
	if (response == "s_76")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Sounds good, %TU. See you around.
			string_id message = new string_id (c_stringFile, "s_70");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Even though I am an Entertainer I am completely capable of doing combat missions.
	if (response == "s_78")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you sure? If you fail, you can't hold me responsible.
			string_id message = new string_id (c_stringFile, "s_60");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am sure. Please tell me about the mission.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_62");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch31 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here is the deal, %TU. I need you to infiltrate that detainment facility and rescue any Alliance personnel that may be inside.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do you know how many?
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Based on the intelligence you collected there appears to be six Alliance pilots being held at that location.
			string_id message = new string_id (c_stringFile, "s_90");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm ready to give it my best.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_92");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 32);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch32 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Based on the intelligence you collected there appears to be six Alliance pilots being held at that location.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm ready to give it my best.
	if (response == "s_92")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Right, here is the plan. You'll need to fight your way in and in the confusion find an enemy uniform. Once you have the enemy uniform, you can give it to the pilot to make an escape.
			string_id message = new string_id (c_stringFile, "s_95");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That is your plan?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 33);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Right, here is the plan. You'll need to fight your way in and in the confusion find an enemy uniform. Once you have the enemy uniform, you can give it to the pilot to make an escape.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That is your plan?
	if (response == "s_97")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Do you have a better one?
			string_id message = new string_id (c_stringFile, "s_102");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes. Send Ewoks in to cause a distraction.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Can we send in Luke to shoot at the small thermal exhaust port first?
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No I suppose not.
			boolean hasResponse2 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_120");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 34);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch34 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Do you have a better one?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. Send Ewoks in to cause a distraction.
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ha ha...funny. This isn't the Ewok Festival of Stupidity. Are you ready for the mission or not?
			string_id message = new string_id (c_stringFile, "s_110");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yeah okay.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can we send in Luke to shoot at the small thermal exhaust port first?
	if (response == "s_120")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "backhand_threaten");

			//-- NPC: There is no thermal...oh, I get it. Are you ready for the mission or not?
			string_id message = new string_id (c_stringFile, "s_126");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yeah okay.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_130");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 36);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No I suppose not.
	if (response == "s_136")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_wedge_antilles_action_grantMissionTwo (player, npc);

			//-- NPC: Alright, here is the mission. May the Force be with you, %TU.
			string_id message = new string_id (c_stringFile, "s_138");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch35 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ha ha...funny. This isn't the Ewok Festival of Stupidity. Are you ready for the mission or not?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yeah okay.
	if (response == "s_116")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_wedge_antilles_action_grantMissionTwo (player, npc);

			//-- NPC: Alright, here is the mission. May the Force be with you, %TU.
			string_id message = new string_id (c_stringFile, "s_138");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch36 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There is no thermal...oh, I get it. Are you ready for the mission or not?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yeah okay.
	if (response == "s_130")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_wedge_antilles_action_grantMissionTwo (player, npc);

			//-- NPC: Alright, here is the mission. May the Force be with you, %TU.
			string_id message = new string_id (c_stringFile, "s_138");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch39 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: ...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Aren't you THE Wedge Antilles?
	if (response == "s_144")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Uh yes...please don't tell me you want my autograph.
			string_id message = new string_id (c_stringFile, "s_147");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Well uh...actually...
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_150");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 40);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch40 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Uh yes...please don't tell me you want my autograph.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well uh...actually...
	if (response == "s_150")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Hold that thought. I just received a priority message from SpecOps.  
			string_id message = new string_id (c_stringFile, "s_152");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: ...
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_155");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 41);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch41 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hold that thought. I just received a priority message from SpecOps.  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: ...
	if (response == "s_155")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: Uh oh. I need someone competent immediately. Hmmm, I wonder who..
			string_id message = new string_id (c_stringFile, "s_166");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: *Clear Throat*
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 42);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch42 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Uh oh. I need someone competent immediately. Hmmm, I wonder who..

	//-- [RESPONSE NOTE] 
	//-- PLAYER: *Clear Throat*
	if (response == "s_168")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			//-- NPC: I suppose you might do. An Imperial Lambda shuttle has just crash landed on Yavin IV. I need you to investigate the location and recover any intelligence. Does this seem like something you can handle?
			string_id message = new string_id (c_stringFile, "s_170");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes sir!
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_172");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 43);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_wedge_antilles_handleBranch43 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I suppose you might do. An Imperial Lambda shuttle has just crash landed on Yavin IV. I need you to investigate the location and recover any intelligence. Does this seem like something you can handle?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes sir!
	if (response == "s_172")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_wedge_antilles_action_grantMissionOne (player, npc);

			//-- NPC: Here are the coordinates.
			string_id message = new string_id (c_stringFile, "s_176");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.rebel_remembrance_day_wedge_antilles");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.rebel_remembrance_day_wedge_antilles");

	return SCRIPT_CONTINUE;
}

trigger OnDetach ()
{
	clearCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (rebel_remembrance_day_wedge_antilles_condition_isImperialPlayer (player, npc))
	{
		doAnimationAction (npc, "weeping");

		//-- NPC: Oh look! An Imperial who has no where to go. Whats-a-matter, did I blow up your home?  Boo hoo!
		string_id message = new string_id (c_stringFile, "s_133");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_remembrance_day_wedge_antilles_condition_isNeutralPlayer (player, npc))
	{
		//-- NPC: Hello citizen.
		string_id message = new string_id (c_stringFile, "s_134");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_remembrance_day_wedge_antilles_condition_hasAnIncompleteCombatMission (player, npc))
	{
		rebel_remembrance_day_wedge_antilles_action_sendSignalToSpeak (player, npc);

		//-- NPC: Uh oh.  What happened at the Detainment Facility? Are you stuck?
		string_id message = new string_id (c_stringFile, "s_79");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I need a waypoint to the facility.
		boolean hasResponse0 = false;
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I need you to reset my mission.
		boolean hasResponse1 = false;
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_83");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_84");

			utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 3);

			npcStartConversation (player, npc, "rebel_remembrance_day_wedge_antilles", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_remembrance_day_wedge_antilles_condition_completed7thQuestHasAutograph (player, npc))
	{
		//-- NPC: Hello again, %TU. I heard you got an award from SpecOps. Congratulations friend.
		string_id message = new string_id (c_stringFile, "s_165");
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_remembrance_day_wedge_antilles_condition_completed7thQuestNoAutograph (player, npc))
	{
		//-- NPC: I received word from SpecOps that all 6 pilots have been rescued, %TU, fantastic work!
		string_id message = new string_id (c_stringFile, "s_157");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: It was challenging but somehow your plan worked.
		boolean hasResponse0 = false;
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_158");

			utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 19);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "rebel_remembrance_day_wedge_antilles", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_remembrance_day_wedge_antilles_condition_hasNotStartedSecondMission (player, npc))
	{
		//-- NPC: You're back.
		string_id message = new string_id (c_stringFile, "s_48");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: You asked me to come back. What now?
		boolean hasResponse0 = false;
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_50");

			utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 23);

			npcStartConversation (player, npc, "rebel_remembrance_day_wedge_antilles", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_remembrance_day_wedge_antilles_condition_hasNotCompletedMission1 (player, npc))
	{
		//-- NPC: What are you still doing here?
		string_id message = new string_id (c_stringFile, "s_173");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
	{
		//-- NPC: ...
		string_id message = new string_id (c_stringFile, "s_142");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Aren't you THE Wedge Antilles?
		boolean hasResponse0 = false;
		if (rebel_remembrance_day_wedge_antilles_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_144");

			utils.setScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId", 39);

			npcStartConversation (player, npc, "rebel_remembrance_day_wedge_antilles", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "rebel_remembrance_day_wedge_antilles")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

	if (branchId == 3 && rebel_remembrance_day_wedge_antilles_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && rebel_remembrance_day_wedge_antilles_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && rebel_remembrance_day_wedge_antilles_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && rebel_remembrance_day_wedge_antilles_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && rebel_remembrance_day_wedge_antilles_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && rebel_remembrance_day_wedge_antilles_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && rebel_remembrance_day_wedge_antilles_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && rebel_remembrance_day_wedge_antilles_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && rebel_remembrance_day_wedge_antilles_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && rebel_remembrance_day_wedge_antilles_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && rebel_remembrance_day_wedge_antilles_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && rebel_remembrance_day_wedge_antilles_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && rebel_remembrance_day_wedge_antilles_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && rebel_remembrance_day_wedge_antilles_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && rebel_remembrance_day_wedge_antilles_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && rebel_remembrance_day_wedge_antilles_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && rebel_remembrance_day_wedge_antilles_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && rebel_remembrance_day_wedge_antilles_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && rebel_remembrance_day_wedge_antilles_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 27 && rebel_remembrance_day_wedge_antilles_handleBranch27 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 28 && rebel_remembrance_day_wedge_antilles_handleBranch28 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && rebel_remembrance_day_wedge_antilles_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 31 && rebel_remembrance_day_wedge_antilles_handleBranch31 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 32 && rebel_remembrance_day_wedge_antilles_handleBranch32 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && rebel_remembrance_day_wedge_antilles_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 34 && rebel_remembrance_day_wedge_antilles_handleBranch34 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 35 && rebel_remembrance_day_wedge_antilles_handleBranch35 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 36 && rebel_remembrance_day_wedge_antilles_handleBranch36 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 39 && rebel_remembrance_day_wedge_antilles_handleBranch39 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 40 && rebel_remembrance_day_wedge_antilles_handleBranch40 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 41 && rebel_remembrance_day_wedge_antilles_handleBranch41 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 42 && rebel_remembrance_day_wedge_antilles_handleBranch42 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 43 && rebel_remembrance_day_wedge_antilles_handleBranch43 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.rebel_remembrance_day_wedge_antilles.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

