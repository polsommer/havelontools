include library.ai_lib;
include library.create;
include library.locations;
include library.factions;

const string NPC_CONVO_TABLE = "datatables/poi/city/convo_npc.iff";


void spawnGuyOne( obj_id baseObject )
{
	spawnConvoNpc( baseObject, 1.1f,0, "handleGuyOneKilled", "guy1" );
}

void spawnGuyTwo( obj_id baseObject )
{
	spawnConvoNpc( baseObject, 1.1f,1.1f, "handleGuyTwoKilled", "guy2" );
}

void spawnGuyThree ( obj_id baseObject )
{
	spawnConvoNpc( baseObject, 0,1.1f, "handleGuyThreeKilled", "guy3" );
}

void spawnGuyFour( obj_id baseObject )
{
	spawnConvoNpc(baseObject, 0,0, "handleGuyFourKilled", "guy4" );
}

void spawnConvoNpc(obj_id baseObject, float xOffset, float zOffset, string deathMsg, string objvarName)
{
	obj_id guy = create.themeParkObject( getRandomGuy(), xOffset, zOffset, deathMsg, 0 );
	setObjVar( baseObject, objvarName, guy );
	
	string myFaction = factions.getFaction(guy);
	if ( (myFaction == null) || (myFaction == "") )
	{
		setCreatureStatic(guy, true);
	}
	else
	{
		if ( (!myFaction.equals("Imperial")) && (!myFaction.equals("Rebel")) )
		{
		setCreatureStatic(guy, true);
		}
		
		else
		{
			setInvulnerable(guy, false);
		}
	}
}

string getRandomGuy ()
{
	string area = getInteriorConvoArea();
	string[] npcList = dataTableGetStringColumnNoDefaults( NPC_CONVO_TABLE, area);
	int npcNum = rand(0, npcList.length -1 );
	string npc = npcList[ npcNum];
	return npc;
}

string getInteriorConvoArea()
{
	string interiorConvoAreaName = "tatooine";
	
	location here = getLocation (getSelf());
	string planet = here.area;
	string city = locations.getCityName(here);
	
	// if getCityName returns null, check for city geoType region without
	// a set city name.
	if ( city == null )
	{
		city = locations.getGuardSpawnerRegionName(here);
	}
	
	// If city string is still null, guardAreaName is the planet.
	//
	// Checking for null before calling dataTableHasColumn because supposedly
	// that function will have trouble with a null string.
	if ( city == null )
	{
		interiorConvoAreaName = planet;
	}	
	else 
	{	
		// if city string isn't null, checking to see if it is a colummn in the datatable
		// If it is, guardAreaName is the city.
		// If it isn't, guardAreaName is the planet.
		if (  dataTableHasColumn(NPC_CONVO_TABLE, city) )
		{
			interiorConvoAreaName = city;
		}
		else
		{
			interiorConvoAreaName = planet;
		}
	}
	
	setObjVar (getSelf(), "interiorConvoArea", interiorConvoAreaName);
	return interiorConvoAreaName;
}
