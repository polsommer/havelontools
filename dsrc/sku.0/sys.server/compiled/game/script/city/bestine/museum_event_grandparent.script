// this is the buildcluster object
// it loooks for parent objects
// if they don't exist, it does nothing
// otherwise it makes a new one.

include library.utils;

const string MASTER_OBJECT_TEMPLATE = "object/tangible/poi/tatooine/bestine/bestine_museum_event_master_object.iff";
const string VARNAME_MUSEUM_STATUS = "strMuseumEventStatus";
const string VARNAME_MUSEUM_WINNER = "strMuseumEventWinner";
const string VARNAME_MUSEUM_NUM = "intMuseumEventNum";
const string VARNAME_MUSEUM_WINNER_ARTWORK_INDEX = "intMuseumWinnerArtworkIndex";
const string OBJVAR_MUSEUM_BUILDING = "bestine.objMuseumBuilding";

const string DATATABLE_NAME = "datatables/city/bestine/bestine_museum_event.iff";

trigger OnInitialize()
{	
	messageTo(self, "bootStrap", null, 2, false);
	return SCRIPT_CONTINUE;
}

messageHandler bootStrap()
{
	deltadictionary dctScriptVars = self.getScriptVars();
	obj_id[] objMasterObjectIds = getAllObjectsWithTemplate(getLocation(self), 10, MASTER_OBJECT_TEMPLATE);
	if((objMasterObjectIds != null) && (objMasterObjectIds.length != 0))
	{
		dctScriptVars.put("objMasterObjectId", objMasterObjectIds[0]);
		updateMuseumEventStatus(self);
		
		// Display featured artwork on the wall if there is one
		string strMuseumEventWinner = dctScriptVars.getString(VARNAME_MUSEUM_WINNER);
		int intMuseumEventWinnerArtworkIndex = dctScriptVars.getInt(VARNAME_MUSEUM_WINNER_ARTWORK_INDEX);
		if ( strMuseumEventWinner != null && !strMuseumEventWinner.equals("none") )
		{
			dictionary artistData = dataTableGetRow(DATATABLE_NAME, strMuseumEventWinner);
			string strArtworkColumn = "artwork_" + intMuseumEventWinnerArtworkIndex;
			string strArtworkTemplate = artistData.getString(strArtworkColumn);
			dctScriptVars.put("strFeaturedArtworkTemplate", strArtworkTemplate);
			
			string locXColumn = "locX_" + intMuseumEventWinnerArtworkIndex;
			string locYColumn = "locY_" + intMuseumEventWinnerArtworkIndex;
			string locZColumn = "locZ_" + intMuseumEventWinnerArtworkIndex;
			float locX = artistData.getFloat(locXColumn);
			float locY = artistData.getFloat(locYColumn);
			float locZ = artistData.getFloat(locZColumn);
				
			obj_id objMuseumLobby = getCellId (self, "lobby");
			location locArtworkLocation = new location (locX, locY, locZ, "tatooine", objMuseumLobby );
			
			obj_id objNewArtwork = createObject(strArtworkTemplate, locArtworkLocation);
			setYaw(objNewArtwork, -91);
			dctScriptVars.put("objFeaturedArtwork", objNewArtwork);
		}
		
	}
	else
	{
		// if we can't find the master object, then we must make one and start the system from the very beginning.
		location locTest = getLocation(self);
		locTest.x = locTest.x +1;
		obj_id objMuseumEventMaster = createObject(MASTER_OBJECT_TEMPLATE, locTest);
		persistObject(objMuseumEventMaster);
		
		dctScriptVars.put("objMasterObjectId", objMuseumEventMaster);
		dctScriptVars.put(VARNAME_MUSEUM_STATUS, "museumEventStarted");
		dctScriptVars.put(VARNAME_MUSEUM_WINNER, "none");
		dctScriptVars.put(VARNAME_MUSEUM_NUM, 1);
		dctScriptVars.put(VARNAME_MUSEUM_WINNER_ARTWORK_INDEX, 0);
		setObjVar(objMuseumEventMaster, OBJVAR_MUSEUM_BUILDING, self);
	}

	return SCRIPT_CONTINUE;
}

void updateMuseumEventStatus(obj_id self)
{
	deltadictionary dctScriptVars = self.getScriptVars();
	obj_id masterObjectId = dctScriptVars.getObjId("objMasterObjectId");
	
	if ( utils.hasScriptVar(self, "strMuseumEventEntry01") )
		utils.removeScriptVar(self, "strMuseumEventEntry01");
	
	if ( utils.hasScriptVar(self, "strMuseumEventEntry02") )
		utils.removeScriptVar(self, "strMuseumEventEntry02");
		
	if ( utils.hasScriptVar(self, "strMuseumEventEntry03") )
		utils.removeScriptVar(self, "strMmuseumEventEntry03");
		
	if ( utils.hasScriptVar(self, "intMuseumEventIndex01") )
			utils.removeScriptVar(self, "intMuseumEventEntry01");
		
	if ( utils.hasScriptVar(self, "intMuseumEventIndex02") )
			utils.removeScriptVar(self, "intMuseumEventEntry02");
			
	if ( utils.hasScriptVar(self, "intMuseumEventIndex03") )
		utils.removeScriptVar(self, "intMuseumEventIndex03");
		
	if ( utils.hasScriptVar(self, "intVotesForEntry01") )
		utils.removeScriptVar(self, "intVotesForEntry01");
			
	if ( utils.hasScriptVar(self, "intVotesForEntry02") )
		utils.removeScriptVar(self, "intVotesForEntry02");
				
	if ( utils.hasScriptVar(self, "intVotesForEntry03") )
		utils.removeScriptVar(self, "intVotesForEntry03");
	
	
	int intMuseumEventNum = 1;
	obj_var_list varList = getObjVarList(masterObjectId, "bestine");
	if ( varList != null )
	{
		int numItem = varList.getNumItems();
		for ( int i = 0; i < numItem; i++ )
		{
			obj_var var = varList.getObjVar(i);
			string varName = var.getName();
			if ( varName.equals("museumEventStarted") )
			{
				intMuseumEventNum = var.getIntData();
				dctScriptVars.put(VARNAME_MUSEUM_STATUS, "museumEventStarted");
				dctScriptVars.put(VARNAME_MUSEUM_NUM, intMuseumEventNum);
			}
			else if ( varName.equals("museumEventEnded")  )
			{
				intMuseumEventNum = var.getIntData();
				dctScriptVars.put(VARNAME_MUSEUM_STATUS, "museumEventEnded");
				dctScriptVars.put(VARNAME_MUSEUM_NUM, intMuseumEventNum);
				
			}
			else if ( varName.equals("museumEventWinner")  )
			{
				string strVarValue = var.getStringData();
				if ( strVarValue == null || strVarValue.equals("") )
				{
					strVarValue = "none";
				}
				dctScriptVars.put(VARNAME_MUSEUM_WINNER, strVarValue);
			}
			
			else if ( varName.equals("museumEventWinnerArtworkIndex")  )
			{
				int intWinnerArtworkIndexValue = var.getIntData();
				dctScriptVars.put(VARNAME_MUSEUM_WINNER_ARTWORK_INDEX, intWinnerArtworkIndexValue);
			}
			
			// name of the artists entered in the event
			else if ( varName.equals("museumEventEntry01")  )
			{
				string strEntry01Value = var.getStringData();
				dctScriptVars.put("strMuseumEventEntry01", strEntry01Value);
			}
			else if ( varName.equals("museumEventEntry02")  )
			{
				string strEntry02Value = var.getStringData();
				dctScriptVars.put("strMuseumEventEntry02", strEntry02Value);
			}
			else if ( varName.equals("museumEventEntry03")  )
			{
				string strEntry03Value = var.getStringData();
				dctScriptVars.put("strMuseumEventEntry03", strEntry03Value);
			}
			
			// artwork index for each artist
			else if ( varName.equals("museumEventIndex01")  )
			{
				int intIndex01Value = var.getIntData();
				dctScriptVars.put("intMuseumEventIndex01", intIndex01Value);
			}
			else if ( varName.equals("museumEventIndex02")  )
			{
				int intIndex02Value = var.getIntData();
				dctScriptVars.put("intMuseumEventIndex02", intIndex02Value);
			}
			else if ( varName.equals("museumEventIndex03")  )
			{
				int intIndex03Value = var.getIntData();
				dctScriptVars.put("intMuseumEventIndex03", intIndex03Value);
			}
			
			// votes for each artist
			else if ( varName.equals("votesForEntry01") )
			{
				int intVotesForEntry01 = var.getIntData();
				dctScriptVars.put("intVotesForEntry01", intVotesForEntry01);
			}
			else if ( varName.equals("votesForEntry02")  )
			{
				int intVotesForEntry02 = var.getIntData();
				dctScriptVars.put("intVotesForEntry02", intVotesForEntry02);
			}
			else if ( varName.equals("votesForEntry03")  )
			{
				int intVotesForEntry03 = var.getIntData();
				dctScriptVars.put("intVotesForEntry03", intVotesForEntry03);
			}
			
			// time until next event starts
			else if ( varName.equals("timeNextEventStarts")  )
			{
				int timeNextEventStarts = var.getIntData();
				dctScriptVars.put("timeNextEventStarts", timeNextEventStarts);
			}
		}
	}
	return;
}

// message from persisted master object when museum event ends or begins.
messageHandler handleMuseumEventStateChange()
{
	updateMuseumEventStatus(self);
	
	// let the curator, Lilas Dinhint, know that the museum event
	// state has changed... either beginning or ending... so that
	// he can determine the winner if the event has ended.
	deltadictionary dctScriptVars = self.getScriptVars();
	obj_id objBestineCurator = dctScriptVars.getObjId("objBestineCurator");
	
	dictionary dctParams = new dictionary();
	dctParams.put(VARNAME_MUSEUM_STATUS, dctScriptVars.getString(VARNAME_MUSEUM_STATUS));
	dctParams.put(VARNAME_MUSEUM_WINNER, dctScriptVars.getString(VARNAME_MUSEUM_WINNER));
	dctParams.put(VARNAME_MUSEUM_NUM, dctScriptVars.getInt(VARNAME_MUSEUM_NUM));
	dctParams.put(VARNAME_MUSEUM_WINNER_ARTWORK_INDEX, dctScriptVars.getInt(VARNAME_MUSEUM_WINNER_ARTWORK_INDEX));
	
	if (utils.hasScriptVar(self, "timeNextEventStarts"))
	{
		dctParams.put("timeNextEventStarts", dctScriptVars.getInt("timeNextEventStarts"));
	}
	
	messageTo(objBestineCurator, "handleMuseumEventStateChangeCuratorAlert", dctParams, 1, false);
	
	return SCRIPT_CONTINUE;
}

// persist museum event winner and alert event npcs
messageHandler handleSetMuseumEventWinner()
{	
	// get name of museum event winner from params sent by the curator
	string strMuseumEventWinner = params.getString(VARNAME_MUSEUM_WINNER);
	if ( strMuseumEventWinner == null || strMuseumEventWinner.equals("") )
		strMuseumEventWinner = "none";
	
	int intMuseumEventWinnerArtworkIndex = params.getInt(VARNAME_MUSEUM_WINNER_ARTWORK_INDEX);
	
	// set script vars with new event data
	deltadictionary dctScriptVars = self.getScriptVars();
	dctScriptVars.put(VARNAME_MUSEUM_WINNER, strMuseumEventWinner);
	dctScriptVars.put(VARNAME_MUSEUM_WINNER_ARTWORK_INDEX, intMuseumEventWinnerArtworkIndex);
	string eventStatus = dctScriptVars.getString(VARNAME_MUSEUM_STATUS);
	
	// set event data on master object
	obj_id masterObjectId = dctScriptVars.getObjId("objMasterObjectId");
	setObjVar(masterObjectId, "bestine.museumEventWinner", strMuseumEventWinner);
	setObjVar(masterObjectId, "bestine.museumEventWinnerArtworkIndex", intMuseumEventWinnerArtworkIndex);
	
	// store artistIndex for winning artist/painting
	if ( eventStatus.equals("museumEventEnded") )
	{
		if ( strMuseumEventWinner != null && !strMuseumEventWinner.equals("none") )
		{
			resizeable int[] previousArtworkIndexes = new Vector();
			if ( hasObjVar(masterObjectId, "bestine.previousArtworkIndexes") )
			{
				previousArtworkIndexes = utils.getResizeableIntBatchObjVar(masterObjectId, "bestine.previousArtworkIndexes");
			}
			string[] strArtists = dataTableGetStringColumnNoDefaults(DATATABLE_NAME, "artistNpc");
			int artistRow = utils.getElementPositionInArray(strArtists, strMuseumEventWinner);
			int artistIndex = (artistRow*100) + intMuseumEventWinnerArtworkIndex;
			previousArtworkIndexes = utils.addElement(previousArtworkIndexes, artistIndex);
			utils.setResizeableBatchObjVar(masterObjectId, "bestine.previousArtworkIndexes", previousArtworkIndexes);
		}
	}
	
			
	// Display winning featured artwork on the wall
	// First remove the previous painting.
	if ( utils.hasScriptVar(self, "objFeaturedArtwork") )
	{
		obj_id objOldArtwork = dctScriptVars.getObjId("objFeaturedArtwork");
		if ( isIdValid(objOldArtwork) )
			destroyObject(objOldArtwork);
	}
	
	if ( strMuseumEventWinner != null && !strMuseumEventWinner.equals("none") )
	{
		dictionary artistData = dataTableGetRow(DATATABLE_NAME, strMuseumEventWinner);
		string strArtworkColumn = "artwork_" + intMuseumEventWinnerArtworkIndex;
		string strArtworkTemplate = artistData.getString(strArtworkColumn);
		dctScriptVars.put("strFeaturedArtworkTemplate", strArtworkTemplate);
		
		string locXColumn = "locX_" + intMuseumEventWinnerArtworkIndex;
		string locYColumn = "locY_" + intMuseumEventWinnerArtworkIndex;
		string locZColumn = "locZ_" + intMuseumEventWinnerArtworkIndex;
		float locX = artistData.getFloat(locXColumn);
		float locY = artistData.getFloat(locYColumn);
		float locZ = artistData.getFloat(locZColumn);
		
		obj_id objMuseumLobby = getCellId (self, "lobby");
		location locArtworkLocation = new location (locX, locY, locZ, "tatooine", objMuseumLobby );
		
		obj_id objNewArtwork = createObject(strArtworkTemplate, locArtworkLocation);
		setYaw(objNewArtwork, -91);
		dctScriptVars.put("objFeaturedArtwork", objNewArtwork);
	}
	
	// Now tell all the npcs what's happening.
	updateMuseumEventStatus(self);
	
	dictionary dctParams = new dictionary();
	dctParams.put(VARNAME_MUSEUM_STATUS, eventStatus);
	dctParams.put(VARNAME_MUSEUM_WINNER, strMuseumEventWinner);
	dctParams.put(VARNAME_MUSEUM_NUM, dctScriptVars.getInt(VARNAME_MUSEUM_NUM));
	
	if ( eventStatus.equals("museumEventStarted") )
	{
		dctParams.put("strMuseumEventEntry01", dctScriptVars.getString("strMuseumEventEntry01"));
		dctParams.put("strMuseumEventEntry02", dctScriptVars.getString("strMuseumEventEntry02"));
		dctParams.put("strMuseumEventEntry03", dctScriptVars.getString("strMuseumEventEntry03"));
	}
	
	// let all registered NPCs know that the museum event's
	// state has changed... either beginning or ending.
	broadcastMessage("handleMuseumEventStatusResponse", dctParams);
	
	return SCRIPT_CONTINUE;
}

// event data for when the curator initializes
messageHandler handleCuratorSetupRequest()
{
	obj_id objRequester = params.getObjId("objRequester");
	
	deltadictionary dctScriptVars = self.getScriptVars();
	dctScriptVars.put("objBestineCurator", objRequester);
	
	dictionary dctParams = new dictionary();
	string eventStatus = dctScriptVars.getString(VARNAME_MUSEUM_STATUS);
	dctParams.put(VARNAME_MUSEUM_STATUS, eventStatus);
	dctParams.put(VARNAME_MUSEUM_WINNER, dctScriptVars.getString(VARNAME_MUSEUM_WINNER));
	dctParams.put(VARNAME_MUSEUM_NUM, dctScriptVars.getInt(VARNAME_MUSEUM_NUM));
	dctParams.put(VARNAME_MUSEUM_WINNER_ARTWORK_INDEX, dctScriptVars.getInt(VARNAME_MUSEUM_WINNER_ARTWORK_INDEX));
	
	// if the event has started, send event data
	if ( eventStatus.equals("museumEventStarted") )
	{
		// number of votes for each artist in the event
		dctParams.put("intVotesForEntry01", dctScriptVars.getInt("intVotesForEntry01"));
		dctParams.put("intVotesForEntry02", dctScriptVars.getInt("intVotesForEntry02"));
		dctParams.put("intVotesForEntry03", dctScriptVars.getInt("intVotesForEntry03"));
		
		// names of the artists in the event
		dctParams.put("strMuseumEventEntry01", dctScriptVars.getString("strMuseumEventEntry01"));
		dctParams.put("strMuseumEventEntry02", dctScriptVars.getString("strMuseumEventEntry02"));
		dctParams.put("strMuseumEventEntry03", dctScriptVars.getString("strMuseumEventEntry03"));
		
		// which of the artist's paintings will be featured
		dctParams.put("intMuseumEventIndex01", dctScriptVars.getInt("intMuseumEventIndex01"));
		dctParams.put("intMuseumEventIndex02", dctScriptVars.getInt("intMuseumEventIndex02"));
		dctParams.put("intMuseumEventIndex03", dctScriptVars.getInt("intMuseumEventIndex03"));
	}
	
	if (utils.hasScriptVar(self, "timeNextEventStarts"))
	{
		dctParams.put("timeNextEventStarts", dctScriptVars.getInt("timeNextEventStarts"));
	}
	
	messageTo(objRequester, "handleCuratorSetupResponse", dctParams, 1, false);
	return SCRIPT_CONTINUE;
}

// persisting museum event data on the master object
messageHandler processCuratorDataStorageRequest()
{
	int intVotesForEntry01 = params.getInt("intVotesForEntry01");
	int intVotesForEntry02 = params.getInt("intVotesForEntry02");
	int intVotesForEntry03 = params.getInt("intVotesForEntry03");
	
	deltadictionary dctScriptVars = self.getScriptVars();
	obj_id masterObjectId = dctScriptVars.getObjId("objMasterObjectId");
	
	setObjVar(masterObjectId, "bestine.votesForEntry01", intVotesForEntry01);
	setObjVar(masterObjectId, "bestine.votesForEntry02", intVotesForEntry02);
	setObjVar(masterObjectId, "bestine.votesForEntry03", intVotesForEntry03);
	
	return SCRIPT_CONTINUE;
}

// message from NPCs who need information about the state of the museum event.
messageHandler handleMuseumEventStatusRequest()
{
	obj_id objRequester = params.getObjId("objRequester");
	
	updateMuseumEventStatus(self);
	
	// get current museum event status
	deltadictionary dctScriptVars = self.getScriptVars();
	
	dictionary dctParams = new dictionary();
	string eventStatus = dctScriptVars.getString(VARNAME_MUSEUM_STATUS);
	dctParams.put(VARNAME_MUSEUM_STATUS, eventStatus);
	dctParams.put(VARNAME_MUSEUM_WINNER, dctScriptVars.getString(VARNAME_MUSEUM_WINNER));
	dctParams.put(VARNAME_MUSEUM_NUM, dctScriptVars.getInt(VARNAME_MUSEUM_NUM));
	
	// names of the artists in the event if event has started
	if ( eventStatus.equals("museumEventStarted") )
	{
		dctParams.put("strMuseumEventEntry01", dctScriptVars.getString("strMuseumEventEntry01"));
		dctParams.put("strMuseumEventEntry02", dctScriptVars.getString("strMuseumEventEntry02"));
		dctParams.put("strMuseumEventEntry03", dctScriptVars.getString("strMuseumEventEntry03"));
	}
	messageTo(objRequester, "handleMuseumEventStatusResponse", dctParams, 1, false);
	
	return SCRIPT_CONTINUE;
}

/*
trigger OnHearSpeech(obj_id speaker, string text)
{ 	
 	if (isGod(speaker))
 	{
 		int stringCheck = text.indexOf("update");
 		if ( stringCheck > -1 )
 		{
 			//deltadictionary dctScriptVars = self.getScriptVars();
			//obj_id objBestineCurator = dctScriptVars.getObjId("objBestineCurator");
			
			//dictionary msgData = new dictionary();
			//msgData.put( "objRequester", objBestineCurator);
 			
			updateMuseumEventStatus(self);
			//messageTo(self, "handleCuratorSetupRequest", msgData, 1, false);
			return SCRIPT_OVERRIDE;
 		}
 	}
 	 return SCRIPT_CONTINUE;
}
*/
