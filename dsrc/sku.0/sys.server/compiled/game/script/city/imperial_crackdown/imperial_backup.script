include ai.ai_combat;
include library.ai_lib;

//------------------------------------------------
// OnAttach
//------------------------------------------------

trigger OnAttach()
{
	messageTo( self, "goingToFight", null, 1, false );
	int x = rand( 300, 600 );
	messageTo( self, "cleanUp", null, x, false );

	return SCRIPT_CONTINUE;
}

//------------------------------------------------
// OnArrivedAtLocation
//------------------------------------------------

trigger OnArrivedAtLocation( string name )
{
	if ( name == "fight" )
	{
		obj_id attacker = getObjIdObjVar( self, "whoToFight" );
		startCombat( self, attacker );
	}

	if ( name == "done" )
	{
		messageTo( self, "leaveCantina", null, 7, false );
	}

	return SCRIPT_CONTINUE;
}

//------------------------------------------------
// goingToFight
//------------------------------------------------

messageHandler goingToFight()
{
	location goFight = getLocationObjVar( self, "whereToFight" );
	goFight.x = goFight.x + (rand (-5, 5));
	ai_lib.aiPathTo( self, goFight );
	addLocationTarget( "fight", goFight, 1 );

	return SCRIPT_CONTINUE;
}

//------------------------------------------------
// cleanUp
//------------------------------------------------

messageHandler cleanUp()
{
	obj_id top = getTopMostContainer( self );
	obj_id foyer = getCellId( top, "foyer1" );
	location here = getLocation( self );
	string planet = here.area;
	location impLoc = new location( 47.02f, .1f, -2.93f, planet, foyer );
	ai_lib.aiPathTo( self, impLoc );
	addLocationTarget( "done", impLoc, 1 );
	messageTo( self, "handleBadLeaving", null, 60, false );

	return SCRIPT_CONTINUE;
}

//------------------------------------------------
// leaveCantina
//------------------------------------------------

messageHandler leaveCantina()
{
	destroyObject( self );

	return SCRIPT_CONTINUE;
}

//------------------------------------------------
// handleBadLeaving
//------------------------------------------------

messageHandler handleBadLeaving ()
{
	messageTo( self, "leaveCantina", null, 7, false );

	return SCRIPT_CONTINUE;
}
