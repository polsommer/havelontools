include library.create;
include library.utils;
include library.npe;
include library.groundquests;
include library.sequencer;
include library.static_item;
include library.xp;

const string_id OPEN_CABINET			= new string_id("npe_hangar_1", "open_cabinet");

trigger OnAttach()
{
	sequencer.registerSequenceObject(self, "cabinet");
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	if (utils.hasScriptVar(self, "gotPistol"))
		return SCRIPT_CONTINUE;
	if (utils.hasScriptVar(self, "cabinetReady"))
		mi.addRootMenu(menu_info_types.ITEM_USE, OPEN_CABINET);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if ( item == menu_info_types.ITEM_USE )
	{
		if (!utils.hasScriptVar(self, "gotPistol") && utils.hasScriptVar(self, "cabinetReady"))
		{
			destroyClientPath(player);
			obj_id playerInventory = utils.getInventoryContainer(player);
			obj_id pistol = static_item.createNewItemFunction("weapon_pistol_02_02", playerInventory);

			obj_id[] lootBoxItems = new obj_id[1];
			lootBoxItems[0] = pistol;

			showLootBox(player, lootBoxItems);

			attachScript(pistol, "npe.npe_tutorial_pistol");
			utils.setScriptVar(self, "gotPistol", true);
			obj_id building = getTopMostContainer(self);
			xp.grantXpByTemplate(player, 10);
			messageTo(building, "continueMainTable", null, 0, false);
		}

	}
	return SCRIPT_CONTINUE;
}
