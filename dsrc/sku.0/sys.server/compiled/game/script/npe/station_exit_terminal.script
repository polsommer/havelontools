include library.create;
include library.utils;
include library.npe;
include library.sui;

const string_id EXIT_STATION					= new string_id("npe", "exit_station");

trigger OnAttach()
{
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{

	mi.addRootMenu(menu_info_types.ITEM_USE, EXIT_STATION);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if ( item == menu_info_types.ITEM_USE )
	{

		if (checkGod(player))
			return SCRIPT_CONTINUE;
		string_id stfPrompt = new string_id("npe", "exit_station_prompt");
		string_id stfTitle = new string_id("npe", "exit_station");
		string prompt = utils.packStringId(stfPrompt);
		string title = utils.packStringId(stfTitle);
		int pid = sui.msgbox(self, player, prompt, sui.OK_CANCEL, title, 0, "handTransfer");
	}
	return SCRIPT_CONTINUE;
}

boolean checkGod(obj_id self)
{
	if (isGod(self))
	{
		sendSystemMessageTestingOnly(self, "Please turn off god mode when moving between npe locations. God mode and instances do not get along");
		return true;
	}
	return false;
}

messageHandler handTransfer()
{
	int btn = sui.getIntButtonPressed(params);
	obj_id player = sui.getPlayerId(params);
	if(btn == sui.BP_OK)
	{
		sendSystemMessageTestingOnly(player, "Going to staging area...");
		npe.movePlayerFromSharedStationToFinishLocation(player);
	}
	return SCRIPT_CONTINUE;
}
