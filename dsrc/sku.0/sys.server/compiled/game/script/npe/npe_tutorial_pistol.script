include library.create;
include library.utils;
include library.npe;
include library.groundquests;
include library.sequencer;
include library.static_item;
include library.xp;

const string_id SID_ITEM_MUST_NOT_BE_EQUIP	= new string_id("base_player", "not_while_equipped");

trigger OnAttach()
{
	return SCRIPT_CONTINUE;
}

trigger OnTransferred(obj_id sourceContainer, obj_id destContainer, obj_id transferer)
{
	if (isPlayer(destContainer) && utils.hasScriptVar(destContainer, "npe.pistolReady"))
	{
		utils.removeScriptVar(destContainer, "npe.pistolReady");
		obj_id building = getTopMostContainer(destContainer);
		xp.grantXpByTemplate(destContainer, 10);
		messageTo(building, "continueMainTable", null, 0, false);
	}
 	return SCRIPT_CONTINUE;
}

trigger OnDestroy()
{
	obj_id container = getContainedBy(self);

	if (!isPlayer(container))
	{
		obj_id player = utils.getContainingPlayer(self);
		if (hasScript(player, "npe.han_solo_experience_player"))
		{
			obj_id pistol = static_item.createNewItemFunction("weapon_pistol_02_02", container);
			attachScript(pistol, "npe.npe_tutorial_pistol");
		}
		return SCRIPT_CONTINUE;
	}
	else
	{
		//you must un-equip any static items before you destroy them
		obj_id player = utils.getContainingPlayer(self);
		sendSystemMessage(player, SID_ITEM_MUST_NOT_BE_EQUIP);
 		return SCRIPT_OVERRIDE;
	}

}