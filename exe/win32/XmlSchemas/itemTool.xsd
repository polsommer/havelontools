<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XML Spy v4.3 U (http://www.xmlspy.com) by 4.0  Installed Multi IDE for 5 users (private) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="Items">
		<xs:annotation>
			<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="BaseItem" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="svoServerTemplateName" type="xs:string" nillable="false">
								<xs:annotation>
									<xs:documentation>(Required) outputs to server object template.  This is the name of the server template that will be generated.  Server objects should be grouped into the correct folders.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svoBaseTemplate" default="object/tangible/base/tangible_base.iff" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>(Required)outputs to server object template.  This is the next object we inherit from.  Any properties the base object has, we also have.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="templateName" type="xs:string" nillable="false">
											<xs:annotation>
												<xs:documentation>(Required) This is the base template name.  it should not include a path.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="version" type="xs:int" nillable="false">
											<xs:annotation>
												<xs:documentation>(Required) This is the version of the base object to use.</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="svoSharedTemplate" type="xs:string">
								<xs:annotation>
									<xs:documentation>(Required) outputs to server object template. This is the server name with _shared prefixed to the .iff.  This also outputs to the shared object file as the name</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svoObjVars" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to server object template.  This adds various objvars to the base object.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence maxOccurs="unbounded">
										<xs:element name="objvar" type="xs:string"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="svoScripts" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to server object template.  This adds various scripts to the base object.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence maxOccurs="unbounded">
										<xs:element name="script" type="xs:string"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="svoVolume" type="xs:int" default='""' nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to server object template.  This is how much room in inventory this object will take.  Most objects only take up 1 space.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svoVisibleFlags" default='""' nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to server object template.  Who can see this object, most objects in the game everyone can see.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="VF_gm" type="xs:boolean"/>
										<xs:element name="VF_player" type="xs:boolean"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="svoDeleteFlags" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to server object template.  This is who can delete the object, most objects in the game anyone can delete.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="DF_gm" type="xs:boolean"/>
										<xs:element name="DF_player" type="xs:boolean"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="svoMoveFlags" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to server object template.  This is who can move the object, most objects in game can be moved by anyone.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="MF_gm" type="xs:boolean"/>
										<xs:element name="MF_player" type="xs:boolean"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="svoInvulnerable" type="xs:boolean" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to server object template.  This denotes if the object is invulnerable.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svoComplexity" type="xs:float" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to server object template.  True purpose is unknown as complexity is defined in the draft schematic.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svoTintIndex" type="xs:int" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to server object template.  Index into client tint palette.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svoUpdateRanges" type="xs:string" nillable="false">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to server object template.  Distances for network updates.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svoContents" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to server object template.  what's in this object, ie if you adding something like an inventory to a lightsaber.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="contentEntry" maxOccurs="unbounded">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="slotName" type="xs:string">
														<xs:annotation>
															<xs:documentation>this is the name of the slot, something like saber_inv for the case of lightsabers.</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="equipObject" type="xs:boolean">
														<xs:annotation>
															<xs:documentation>if the object can be equipped or not.</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="content" type="xs:string">
														<xs:annotation>
															<xs:documentation>this is the path to the server inventory object.  </xs:documentation>
														</xs:annotation>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="svoXPpoints">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="xpEntry" maxOccurs="unbounded">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="type" default="XP_crafting">
														<xs:simpleType>
															<xs:restriction base="xs:string">
																<xs:enumeration value="XP_crafting"/>
																<xs:enumeration value="XP_craftingClothing"/>
																<xs:enumeration value="XP_craftingClothingArmor"/>
																<xs:enumeration value="XP_craftingDroid"/>
																<xs:enumeration value="XP_craftingFood"/>
																<xs:enumeration value="XP_craftingMedicine"/>
																<xs:enumeration value="XP_craftingStructure"/>
																<xs:enumeration value="XP_craftingWeapons"/>
																<xs:enumeration value="XP_craftingWeaponsMelee"/>
																<xs:enumeration value="XP_craftingWeaponsRanged"/>
																<xs:enumeration value="XP_craftingWeaponsMunition"/>
																<xs:enumeration value="XP_craftingScout"/>
																<xs:enumeration value="XP_craftingCreature"/>
																<xs:enumeration value="XP_craftingTissue"/>
																<xs:enumeration value="XP_craftingCamp"/>
																<xs:enumeration value="XP_craftingTrapping"/>
																<xs:enumeration value="XP_craftingSpice"/>
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<xs:element name="level" type="xs:int" default="0"/>
													<xs:element name="value" type="xs:int" default="0"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="shoBaseTemplate" type="xs:string">
								<xs:annotation>
									<xs:documentation>(Required) outputs to shared object template</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoName" type="xs:string">
								<xs:annotation>
									<xs:documentation>(Required) text outputs to .stf file.  This is the text name you see when looking at the object.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoSTFFileName" type="xs:string" default="item_n">
								<xs:annotation>
									<xs:documentation>(Required) outputs to the shared template.  This is the filename of the stf for this object.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoSTFFileNameRef" type="xs:string">
								<xs:annotation>
									<xs:documentation>(Required) outputs to the shared template.  This is the entry in the stf file the text output will be found under.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoDescription" type="xs:string">
								<xs:annotation>
									<xs:documentation>(Required) text outputs to .stf file.  This is the text description you see when looking at the object.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoSTFFileDescription" type="xs:string" default="item_d">
								<xs:annotation>
									<xs:documentation>(Required) outputs to the shared template.  This is the filename of the stf for this object.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoSTFFileDescriptionRef" type="xs:string">
								<xs:annotation>
									<xs:documentation>(Required) outputs to the shared template.  This is the entry in the stf file the text output will be found under.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoAppearanceFilename" type="xs:string" default="appearance/">
								<xs:annotation>
									<xs:documentation>(Required) outputs to the shared template.  This is the art assest of the object, typically a .apt file.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoGameObjectType" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  This is the game object type of the object, many properties of the object are bound into the various game object types, such as if you want an item to have use by default it is item_misc_usable.</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="GOT_none"/>
										<xs:enumeration value="GOT_corpse"/>
										<xs:enumeration value="GOT_group"/>
										<xs:enumeration value="GOT_guild"/>
										<xs:enumeration value="GOT_lair"/>
										<xs:enumeration value="GOT_static"/>
										<xs:enumeration value="GOT_camp"/>
										<xs:enumeration value="GOT_vendor"/>
										<xs:enumeration value="GOT_loadbeacon"/>
										<xs:enumeration value="GOT_armor"/>
										<xs:enumeration value="GOT_armor_body"/>
										<xs:enumeration value="GOT_armor_head"/>
										<xs:enumeration value="GOT_armor_misc"/>
										<xs:enumeration value="GOT_armor_leg"/>
										<xs:enumeration value="GOT_armor_arm"/>
										<xs:enumeration value="GOT_armor_hand"/>
										<xs:enumeration value="GOT_armor_foot"/>
										<xs:enumeration value="GOT_armor_shield"/>
										<xs:enumeration value="GOT_armor_layer"/>
										<xs:enumeration value="GOT_armor_segment"/>
										<xs:enumeration value="GOT_armor_core"/>
										<xs:enumeration value="GOT_armor_psg"/>
										<xs:enumeration value="GOT_building"/>
										<xs:enumeration value="GOT_building_municipal"/>
										<xs:enumeration value="GOT_building_player"/>
										<xs:enumeration value="GOT_building_factional"/>
										<xs:enumeration value="GOT_creature"/>
										<xs:enumeration value="GOT_creature_character"/>
										<xs:enumeration value="GOT_creature_droid"/>
										<xs:enumeration value="GOT_creature_droid_probe"/>
										<xs:enumeration value="GOT_creature_monster"/>
										<xs:enumeration value="GOT_data"/>
										<xs:enumeration value="GOT_data_draft_schematic"/>
										<xs:enumeration value="GOT_data_manufacturing_schematic"/>
										<xs:enumeration value="GOT_data_mission_object"/>
										<xs:enumeration value="GOT_data_token"/>
										<xs:enumeration value="GOT_data_waypoint"/>
										<xs:enumeration value="GOT_data_fictional"/>
										<xs:enumeration value="GOT_data_pet_control_device"/>
										<xs:enumeration value="GOT_data_vehicle_control_device"/>
										<xs:enumeration value="GOT_data_draft_schematic_read_only"/>
										<xs:enumeration value="GOT_data_ship_control_device"/>
										<xs:enumeration value="GOT_data_droid_control_device"/>
										<xs:enumeration value="GOT_data_house_control_device"/>
										<xs:enumeration value="GOT_installation"/>
										<xs:enumeration value="GOT_installation_factory"/>
										<xs:enumeration value="GOT_installation_generator"/>
										<xs:enumeration value="GOT_installation_harvester"/>
										<xs:enumeration value="GOT_installation_turret"/>
										<xs:enumeration value="GOT_installation_minefield"/>
										<xs:enumeration value="GOT_misc"/>
										<xs:enumeration value="GOT_misc_ammunition"/>
										<xs:enumeration value="GOT_misc_chemical"/>
										<xs:enumeration value="GOT_misc_container"/>
										<xs:enumeration value="GOT_misc_crafting_station"/>
										<xs:enumeration value="GOT_misc_electronics"/>
										<xs:enumeration value="GOT_misc_flora"/>
										<xs:enumeration value="GOT_misc_food"/>
										<xs:enumeration value="GOT_misc_furniture"/>
										<xs:enumeration value="GOT_misc_instrument"/>
										<xs:enumeration value="GOT_misc_pharmaceutical"/>
										<xs:enumeration value="GOT_misc_sign"/>
										<xs:enumeration value="GOT_misc_counter"/>
										<xs:enumeration value="GOT_misc_factory_crate"/>
										<xs:enumeration value="GOT_misc_ticket_travel"/>
										<xs:enumeration value="GOT_misc_item"/>
										<xs:enumeration value="GOT_misc_trap"/>
										<xs:enumeration value="GOT_misc_container_wearable"/>
										<xs:enumeration value="GOT_misc_fishing_pole"/>
										<xs:enumeration value="GOT_misc_fishing_bait"/>
										<xs:enumeration value="GOT_misc_drink"/>
										<xs:enumeration value="GOT_misc_firework"/>
										<xs:enumeration value="GOT_misc_item_usable"/>
										<xs:enumeration value="GOT_misc_petmed"/>
										<xs:enumeration value="GOT_misc_firework_show"/>
										<xs:enumeration value="GOT_misc_clothing_attachment"/>
										<xs:enumeration value="GOT_misc_live_sample"/>
										<xs:enumeration value="GOT_misc_armor_attachment"/>
										<xs:enumeration value="GOT_misc_community_crafting_project"/>
										<xs:enumeration value="GOT_misc_force_crystal"/>
										<xs:enumeration value="GOT_misc_droid_programming_chip"/>
										<xs:enumeration value="GOT_misc_asteroid"/>
										<xs:enumeration value="GOT_misc_pob_ship_pilot_chair"/>
										<xs:enumeration value="GOT_misc_operations_chair"/>
										<xs:enumeration value="GOT_misc_turret_access_ladder"/>
										<xs:enumeration value="GOT_misc_container_ship_loot"/>
										<xs:enumeration value="GOT_misc_armor_noequip"/>
										<xs:enumeration value="GOT_terminal"/>
										<xs:enumeration value="GOT_terminal_bank"/>
										<xs:enumeration value="GOT_terminal_bazaar"/>
										<xs:enumeration value="GOT_terminal_cloning"/>
										<xs:enumeration value="GOT_terminal_insurance"/>
										<xs:enumeration value="GOT_terminal_manage"/>
										<xs:enumeration value="GOT_terminal_mission"/>
										<xs:enumeration value="GOT_terminal_permissions"/>
										<xs:enumeration value="GOT_terminal_player_structure"/>
										<xs:enumeration value="GOT_terminal_shipping"/>
										<xs:enumeration value="GOT_terminal_travel"/>
										<xs:enumeration value="GOT_terminal_space"/>
										<xs:enumeration value="GOT_terminal_misc"/>
										<xs:enumeration value="GOT_terminal_space_npe"/>
										<xs:enumeration value="GOT_tool"/>
										<xs:enumeration value="GOT_tool_crafting"/>
										<xs:enumeration value="GOT_tool_survey"/>
										<xs:enumeration value="GOT_tool_repair"/>
										<xs:enumeration value="GOT_tool_camp_kit"/>
										<xs:enumeration value="GOT_tool_ship_component_repair"/>
										<xs:enumeration value="GOT_vehicle"/>
										<xs:enumeration value="GOT_vehicle_hover"/>
										<xs:enumeration value="GOT_weapon"/>
										<xs:enumeration value="GOT_weapon_melee_misc"/>
										<xs:enumeration value="GOT_weapon_ranged_misc"/>
										<xs:enumeration value="GOT_weapon_ranged_thrown"/>
										<xs:enumeration value="GOT_weapon_heavy_misc"/>
										<xs:enumeration value="GOT_weapon_heavy_mine"/>
										<xs:enumeration value="GOT_weapon_heavy_special"/>
										<xs:enumeration value="GOT_weapon_melee_1h"/>
										<xs:enumeration value="GOT_weapon_melee_2h"/>
										<xs:enumeration value="GOT_weapon_melee_polearm"/>
										<xs:enumeration value="GOT_weapon_ranged_pistol"/>
										<xs:enumeration value="GOT_weapon_ranged_carbine"/>
										<xs:enumeration value="GOT_weapon_ranged_rifle"/>
										<xs:enumeration value="GOT_component"/>
										<xs:enumeration value="GOT_component_armor"/>
										<xs:enumeration value="GOT_component_chemistry"/>
										<xs:enumeration value="GOT_component_clothing"/>
										<xs:enumeration value="GOT_component_droid"/>
										<xs:enumeration value="GOT_component_electronics"/>
										<xs:enumeration value="GOT_component_munition"/>
										<xs:enumeration value="GOT_component_structure"/>
										<xs:enumeration value="GOT_component_weapon_melee"/>
										<xs:enumeration value="GOT_component_weapon_ranged"/>
										<xs:enumeration value="GOT_component_tissue"/>
										<xs:enumeration value="GOT_component_genetic"/>
										<xs:enumeration value="GOT_component_saber_crystal"/>
										<xs:enumeration value="GOT_component_community_crafting"/>
										<xs:enumeration value="GOT_component_new_armor"/>
										<xs:enumeration value="GOT_powerup_weapon"/>
										<xs:enumeration value="GOT_powerup_weapon_melee"/>
										<xs:enumeration value="GOT_powerup_weapon_ranged"/>
										<xs:enumeration value="GOT_powerup_weapon_thrown"/>
										<xs:enumeration value="GOT_powerup_weapon_heavy"/>
										<xs:enumeration value="GOT_powerup_weapon_mine"/>
										<xs:enumeration value="GOT_powerup_weapon_heavy_special"/>
										<xs:enumeration value="GOT_powerup_armor"/>
										<xs:enumeration value="GOT_powerup_armor_body"/>
										<xs:enumeration value="GOT_powerup_armor_head"/>
										<xs:enumeration value="GOT_powerup_armor_misc"/>
										<xs:enumeration value="GOT_powerup_armor_leg"/>
										<xs:enumeration value="GOT_powerup_armor_arm"/>
										<xs:enumeration value="GOT_powerup_armor_hand"/>
										<xs:enumeration value="GOT_powerup_armor_foot"/>
										<xs:enumeration value="GOT_powerup_armor_layer"/>
										<xs:enumeration value="GOT_powerup_armor_segment"/>
										<xs:enumeration value="GOT_powerup_armor_core"/>
										<xs:enumeration value="GOT_jewelry"/>
										<xs:enumeration value="GOT_jewelry_ring"/>
										<xs:enumeration value="GOT_jewelry_bracelet"/>
										<xs:enumeration value="GOT_jewelry_necklace"/>
										<xs:enumeration value="GOT_jewelry_earring"/>
										<xs:enumeration value="GOT_resource_container"/>
										<xs:enumeration value="GOT_resource_container_energy_gas"/>
										<xs:enumeration value="GOT_resource_container_energy_liquid"/>
										<xs:enumeration value="GOT_resource_container_energy_radioactive"/>
										<xs:enumeration value="GOT_resource_container_energy_solid"/>
										<xs:enumeration value="GOT_resource_container_inorganic_chemicals"/>
										<xs:enumeration value="GOT_resource_container_inorganic_gas"/>
										<xs:enumeration value="GOT_resource_container_inorganic_minerals"/>
										<xs:enumeration value="GOT_resource_container_inorganic_water"/>
										<xs:enumeration value="GOT_resource_container_organic_food"/>
										<xs:enumeration value="GOT_resource_container_organic_hide"/>
										<xs:enumeration value="GOT_resource_container_organic_structure"/>
										<xs:enumeration value="GOT_resource_container_pseudo"/>
										<xs:enumeration value="GOT_resource_container_space"/>
										<xs:enumeration value="GOT_deed"/>
										<xs:enumeration value="GOT_deed_building"/>
										<xs:enumeration value="GOT_deed_installation"/>
										<xs:enumeration value="GOT_deed_pet"/>
										<xs:enumeration value="GOT_deed_droid"/>
										<xs:enumeration value="GOT_deed_vehicle"/>
										<xs:enumeration value="GOT_clothing"/>
										<xs:enumeration value="GOT_clothing_bandolier"/>
										<xs:enumeration value="GOT_clothing_belt"/>
										<xs:enumeration value="GOT_clothing_bodysuit"/>
										<xs:enumeration value="GOT_clothing_cape"/>
										<xs:enumeration value="GOT_clothing_cloak"/>
										<xs:enumeration value="GOT_clothing_foot"/>
										<xs:enumeration value="GOT_clothing_dress"/>
										<xs:enumeration value="GOT_clothing_hand"/>
										<xs:enumeration value="GOT_clothing_eye"/>
										<xs:enumeration value="GOT_clothing_head"/>
										<xs:enumeration value="GOT_clothing_head"/>
										<xs:enumeration value="GOT_clothing_pants"/>
										<xs:enumeration value="GOT_clothing_robe"/>
										<xs:enumeration value="GOT_clothing_shirt"/>
										<xs:enumeration value="GOT_clothing_vest"/>
										<xs:enumeration value="GOT_clothing_wookiee"/>
										<xs:enumeration value="GOT_clothing_misc"/>
										<xs:enumeration value="GOT_clothing_skirt"/>
										<xs:enumeration value="GOT_ship_component"/>
										<xs:enumeration value="GOT_ship_component_reactor"/>
										<xs:enumeration value="GOT_ship_component_engine"/>
										<xs:enumeration value="GOT_ship_component_shield"/>
										<xs:enumeration value="GOT_ship_component_armor"/>
										<xs:enumeration value="GOT_ship_component_weapon"/>
										<xs:enumeration value="GOT_ship_component_capacitor"/>
										<xs:enumeration value="GOT_ship_component_booster"/>
										<xs:enumeration value="GOT_ship_component_droid_interface"/>
										<xs:enumeration value="GOT_ship_component_hangar"/>
										<xs:enumeration value="GOT_ship_component_targeting_station"/>
										<xs:enumeration value="GOT_ship_component_bridge"/>
										<xs:enumeration value="GOT_ship_component_chassis"/>
										<xs:enumeration value="GOT_ship_component_missilepack"/>
										<xs:enumeration value="GOT_ship_component_countermeasurepack"/>
										<xs:enumeration value="GOT_ship_component_missilelauncher"/>
										<xs:enumeration value="GOT_ship_component_countermeasurelauncher"/>
										<xs:enumeration value="GOT_ship_component_cargo_hold"/>
										<xs:enumeration value="GOT_ship_component_modification"/>
										<xs:enumeration value="GOT_ship"/>
										<xs:enumeration value="GOT_ship_fighter"/>
										<xs:enumeration value="GOT_ship_capital"/>
										<xs:enumeration value="GOT_ship_station"/>
										<xs:enumeration value="GOT_ship_transport"/>
										<xs:enumeration value="GOT_ship_mining_asteroid_static"/>
										<xs:enumeration value="GOT_ship_mining_asteroid_dynamic"/>
										<xs:enumeration value="GOT_cybernetic"/>
										<xs:enumeration value="GOT_cybernetic_arm"/>
										<xs:enumeration value="GOT_cybernetic_legs"/>
										<xs:enumeration value="GOT_cybernetic_torso"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="shoSnapToTerrain" type="xs:boolean" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  This denotes if the object will try to align itself to the terrain, defined for most objects in the base object template.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoContainerType" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  If this is a container, what kind.</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="CT_none"/>
										<xs:enumeration value="CT_slotted"/>
										<xs:enumeration value="CT_volume"/>
										<xs:enumeration value="CT_volumeIntangible"/>
										<xs:enumeration value="CT_volumeGeneric"/>
										<xs:enumeration value="CT_ridable"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="shoContainerVolumeLimit" type="xs:int" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  If this object has a volume container, this say how much it can hold.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoTintPalette" type="xs:string" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  What tints are available to the object.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoSlotDescriptorFilename" type="xs:string" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  What slots are available for this object.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoArrangementDescriptorFilename" type="xs:string" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  What slots this object can be put into.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoPortalLayoutFilename" type="xs:string" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  No one seems to know what this does, even the definition file.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoClientDataFile" type="xs:string" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  Client-specific data, if you would like to attach a particle or sound to an object you build it into a .cef and reference it here.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoScale" type="xs:float" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  Modification to object's size.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoSendToClient" type="xs:boolean" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  Specifies whether or not the object using this template should is sent to the client.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoScaleThresholdBeforeExtentTest" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  Specifies the scale at which the object will use box extents for collision.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoClearFloraRadius" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  Distance to clear collidable flora around this object.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoSurfaceType" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  What our surface is made out of.</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="ST_other"/>
										<xs:enumeration value="ST_metal"/>
										<xs:enumeration value="ST_stone"/>
										<xs:enumeration value="ST_wood"/>
										<xs:enumeration value="ST_acid"/>
										<xs:enumeration value="ST_ice"/>
										<xs:enumeration value="ST_molten"/>
										<xs:enumeration value="ST_obsidian"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="shoNoBuildRadius" type="xs:float" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  Distance to not allow structure placement around this object.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoOnlyVisibleInTools" type="xs:boolean" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  No idea what tools this references.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoLocationReservationRadius" type="xs:float" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  No idea what this does.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shoForceNoCollision" type="xs:boolean" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to the shared template.  Not sure what this does, implies no collision for this object.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svsBaseTemplate" type="xs:string" default="object/draft_schematic/base/base_draft_schematic.iff">
								<xs:annotation>
									<xs:documentation>(Required) outputs to server draft schematic.  This is the base Draft Schematic Object this inherits from.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svsCategory" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to server draft schematic. What type of schematic this is, usually defined in base schematic.</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="CT_genericItem"/>
										<xs:enumeration value="CT_chemical"/>
										<xs:enumeration value="CT_armor"/>
										<xs:enumeration value="CT_weapon"/>
										<xs:enumeration value="CT_clothing"/>
										<xs:enumeration value="CT_furniture"/>
										<xs:enumeration value="CT_food"/>
										<xs:enumeration value="CT_vehicle"/>
										<xs:enumeration value="CT_droid"/>
										<xs:enumeration value="CT_plantBreeding"/>
										<xs:enumeration value="CT_animalBreeding"/>
										<xs:enumeration value="CT_installation"/>
										<xs:enumeration value="CT_lightsaber"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="svsItemsPerContainer" type="xs:int" default="1">
								<xs:annotation>
									<xs:documentation>(Required) outputs to server draft schematic. This is how many objects you want factory crates to hold. Setting this value to 0 is how you make someone hand craft an object, or how you make it so limited use schematics only ever produce 1 object. </xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svsCraftedObjectTemplate" type="xs:string">
								<xs:annotation>
									<xs:documentation>(Required) outputs to server draft schematic. This is the server object you want to create, should be able to default it to the object template listed above.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svsCrateObjectTemplate" type="xs:string" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to server draft schematic. This is the appearance of the crate if you can make crates of this object.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svsSkillCommands" type="xs:string" default="unskilled">
								<xs:annotation>
									<xs:documentation>(Required) outputs to server draft schematic.  This seems to be unskilled for every schematic.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svsManufactureScripts" type="xs:string">
								<xs:annotation>
									<xs:documentation>(Required) outputs to server draft schematic. If this script is bad you will get an "internal error" when you try to craft the object.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svsComplexity" type="xs:int">
								<xs:annotation>
									<xs:documentation>(Required) outputs to server draft schematic.  Adjustment to complexity by using this slot.  This seems to be the real complexity used despite being defined in other files.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svsVolume" type="xs:int">
								<xs:annotation>
									<xs:documentation>(Required) outputs to server draft schematic.  This is how much space this schematic takes up.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svsObjVars" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to server draft schematic.  This adds various objvars to the schematic.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence minOccurs="0" maxOccurs="unbounded">
										<xs:element name="draftSchematicObjVar" type="xs:string"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="svsSharedTemplateName" type="xs:string">
								<xs:annotation>
									<xs:documentation>(Required) outputs to server draft scematic.  This is pointer to the shared version of the draft schematic.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svsManufactureTime" type="xs:float" default="8.0" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to server draft schematic. Usually only used in base crafting template. time to manufacture an item (in secs) per complexity point</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svsPrototypeTime" type="xs:float" default="2.0" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to server draft schematic. Usually only used in base crafting template. time to manufacture a prototype (in secs) per complexity point</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="svsIngredientSlots" nillable="true" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>(Optional) outputs a block of data to the server draft schematic.  This is the basic block for the ingredients to craft an object.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="slotNameStf" type="xs:string" default="craft_item_ingredients_n">
											<xs:annotation>
												<xs:documentation>outputs to both the Server and Shared draft Schematic templates. This is the name of the STF file to point the NameString at.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="slotNameString" type="xs:string">
											<xs:annotation>
												<xs:documentation>outputs to both the Server and Shared draft Schematic templates. This is the name in the STF file of the slot.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="optional" type="xs:boolean">
											<xs:annotation>
												<xs:documentation>is this ingredient optional or not?</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ingredientType">
											<xs:annotation>
												<xs:documentation>is the ingredient a resource or an object template?</xs:documentation>
											</xs:annotation>
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:enumeration value="IT_resourceClass"/>
													<xs:enumeration value="IT_template"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<xs:element name="ingredient" type="xs:string">
											<xs:annotation>
												<xs:documentation>resource name or object template path.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="count" type="xs:int">
											<xs:annotation>
												<xs:documentation>the amount of the resource or object templates required.</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="svsXpPoints">
								<xs:annotation>
									<xs:documentation>(Required) outputs a block of data to the server draft schematic.  This field is largely unused in most schematics.</xs:documentation>
								</xs:annotation>
								<xs:complexType/>
							</xs:element>
							<xs:element name="shsBaseSchematic">
								<xs:annotation>
									<xs:documentation>(Required) outputs to shared draft schematic. This is the base shared schematic we inherit from.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shsAttributes" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>(Required) outputs a block of data to the shared draft schematic.  This is where the valid min and max experimental ranges are put it</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="name" type="xs:string" default="crafting">
											<xs:annotation>
												<xs:documentation>"crafting" seems to be the default for this in almost all files.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="nameType">
											<xs:annotation>
												<xs:documentation>These are the lines of experimentation.</xs:documentation>
											</xs:annotation>
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:enumeration value="decayRate"/>
													<xs:enumeration value="complexity"/>
													<xs:enumeration value="xp"/>
													<xs:enumeration value="sockets"/>
													<xs:enumeration value="condition"/>
													<xs:enumeration value="charges"/>
													<xs:enumeration value="general_protection"/>
													<xs:enumeration value="accuracy"/>
													<xs:enumeration value="armor_toughness"/>
													<xs:enumeration value="armorEncumbrance"/>
													<xs:enumeration value="armor_integrity"/>
													<xs:enumeration value="armor_effectiveness"/>
													<xs:enumeration value="armor_rating"/>
													<xs:enumeration value="armor_special_type"/>
													<xs:enumeration value="armor_special_effectiveness"/>
													<xs:enumeration value="attackSpeed"/>
													<xs:enumeration value="mechanism_quality"/>
													<xs:enumeration value="power_level"/>
													<xs:enumeration value="storage_module"/>
													<xs:enumeration value="data_module"/>
													<xs:enumeration value="personality_module"/>
													<xs:enumeration value="medical_module"/>
													<xs:enumeration value="crafting_module"/>
													<xs:enumeration value="repair_module"/>
													<xs:enumeration value="armor_module"/>
													<xs:enumeration value="armorEffectiveness"/>
													<xs:enumeration value="playback_module"/>
													<xs:enumeration value="struct_module"/>
													<xs:enumeration value="harvest_power"/>
													<xs:enumeration value="trap_bonus"/>
													<xs:enumeration value="merchant_barker"/>
													<xs:enumeration value="bomb_level"/>
													<xs:enumeration value="stimpack_capacity"/>
													<xs:enumeration value="stimpack_speed"/>
													<xs:enumeration value="auto_repair_power"/>
													<xs:enumeration value="minDamage"/>
													<xs:enumeration value="maxDamage"/>
													<xs:enumeration value="woundChance"/>
													<xs:enumeration value="hitPoints"/>
													<xs:enumeration value="maxRange"/>
													<xs:enumeration value="attackCost"/>
													<xs:enumeration value="damageType"/>
													<xs:enumeration value="speed"/>
													<xs:enumeration value="fuel_consumption"/>
													<xs:enumeration value="fuel_capacity"/>
													<xs:enumeration value="power"/>
													<xs:enumeration value="quantity"/>
													<xs:enumeration value="quality"/>
													<xs:enumeration value="lifespan"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<xs:element name="experimentName" default='""'>
											<xs:annotation>
												<xs:documentation>this is either empty or "crafting" again.</xs:documentation>
											</xs:annotation>
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:enumeration value='""'/>
													<xs:enumeration value="crafting"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<xs:element name="experimentType" default='""'>
											<xs:annotation>
												<xs:documentation>can chain different experimentable groups together here so multiple stats are altered based on experimenting on different lines. </xs:documentation>
											</xs:annotation>
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:enumeration value='""'/>
													<xs:enumeration value="exp_accel"/>
													<xs:enumeration value="exp_ammo"/>
													<xs:enumeration value="exp_armor"/>
													<xs:enumeration value="exp_armor_effectiveness"/>
													<xs:enumeration value="exp_armorhpmax"/>
													<xs:enumeration value="exp_booster_accel"/>
													<xs:enumeration value="exp_booster_acceleration"/>
													<xs:enumeration value="exp_booster_consumption"/>
													<xs:enumeration value="exp_booster_energy"/>
													<xs:enumeration value="exp_booster_recharge"/>
													<xs:enumeration value="exp_booster_speed"/>
													<xs:enumeration value="exp_cap_max_energy"/>
													<xs:enumeration value="exp_charges"/>
													<xs:enumeration value="exp_count"/>
													<xs:enumeration value="exp_damage_max"/>
													<xs:enumeration value="exp_damage_min"/>
													<xs:enumeration value="exp_decel"/>
													<xs:enumeration value="exp_droid_command_speed"/>
													<xs:enumeration value="exp_droid_speed"/>
													<xs:enumeration value="exp_durability"/>
													<xs:enumeration value="exp_effective_armor"/>
													<xs:enumeration value="exp_effective_shields"/>
													<xs:enumeration value="exp_effectiveness"/>
													<xs:enumeration value="exp_energy_gen_rate"/>
													<xs:enumeration value="exp_energy_maintenance"/>
													<xs:enumeration value="exp_energy_per_shot"/>
													<xs:enumeration value="exp_engine_accel"/>
													<xs:enumeration value="exp_engine_decel"/>
													<xs:enumeration value="exp_engine_speed"/>
													<xs:enumeration value="exp_filling"/>
													<xs:enumeration value="exp_flavor"/>
													<xs:enumeration value="exp_fltrefirerate"/>
													<xs:enumeration value="exp_hitpointsmax"/>
													<xs:enumeration value="exp_hp"/>
													<xs:enumeration value="exp_hp_max"/>
													<xs:enumeration value="exp_hpmax"/>
													<xs:enumeration value="exp_maintenance"/>
													<xs:enumeration value="exp_mass"/>
													<xs:enumeration value="exp_massmax"/>
													<xs:enumeration value="exp_maxcapacity"/>
													<xs:enumeration value="exp_maximum_chaff_effectiveness"/>
													<xs:enumeration value="exp_min_chaff_effectiveness"/>
													<xs:enumeration value="exp_nutrition"/>
													<xs:enumeration value="exp_pitch"/>
													<xs:enumeration value="exp_quality"/>
													<xs:enumeration value="exp_quantity"/>
													<xs:enumeration value="exp_recharge"/>
													<xs:enumeration value="exp_refire"/>
													<xs:enumeration value="exp_refire_rate"/>
													<xs:enumeration value="exp_repaircharges"/>
													<xs:enumeration value="exp_resistance"/>
													<xs:enumeration value="exp_roll"/>
													<xs:enumeration value="exp_shield_effectiveness"/>
													<xs:enumeration value="exp_shield_max_back_hp"/>
													<xs:enumeration value="exp_shield_max_front_hp"/>
													<xs:enumeration value="exp_shield_recharge"/>
													<xs:enumeration value="exp_speed"/>
													<xs:enumeration value="exp_storage_duration"/>
													<xs:enumeration value="exp_yaw"/>
													<xs:enumeration value="expabsorption"/>
													<xs:enumeration value="expaccuracy"/>
													<xs:enumeration value="expaggressionprofile"/>
													<xs:enumeration value="expcharges"/>
													<xs:enumeration value="expchemicalpotency"/>
													<xs:enumeration value="expcraftsmanship"/>
													<xs:enumeration value="expcustomizedfusesystem"/>
													<xs:enumeration value="expdamage"/>
													<xs:enumeration value="expdurability"/>
													<xs:enumeration value="expduration"/>
													<xs:enumeration value="expeaseofuse"/>
													<xs:enumeration value="expeffeciency"/>
													<xs:enumeration value="expeffectiveness"/>
													<xs:enumeration value="expelementalvalue"/>
													<xs:enumeration value="expenhancedvolatility"/>
													<xs:enumeration value="expfreezecore"/>
													<xs:enumeration value="expintelligence"/>
													<xs:enumeration value="expmentalprofile"/>
													<xs:enumeration value="expphysiqueprofile"/>
													<xs:enumeration value="expprotoncore"/>
													<xs:enumeration value="expprowessprofile"/>
													<xs:enumeration value="exppsychologicalprofile"/>
													<xs:enumeration value="expquality"/>
													<xs:enumeration value="exprange"/>
													<xs:enumeration value="expresistance"/>
													<xs:enumeration value="expspeed"/>
													<xs:enumeration value="expstorage"/>
													<xs:enumeration value="expthermalcore"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
										<xs:element name="valueMin" type="xs:int">
											<xs:annotation>
												<xs:documentation>what is the min for this attribute?</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="valueMax" type="xs:int">
											<xs:annotation>
												<xs:documentation>what is the max for this attribute?</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="shsCraftedSharedTemplate" type="xs:string">
								<xs:annotation>
									<xs:documentation>(Required) outputs to shared draft schematic. This is the shared version of the object we are crafting, should just take this field from the shared object template above.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shsSnapToTerrain" type="xs:boolean">
								<xs:annotation>
									<xs:documentation>(Required) outputs to shared draft schematic.  This should almost always be set to false.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shsContainerType" default="CT_none">
								<xs:annotation>
									<xs:documentation>(Required) outputs to shared draft schematic.  If this is a container, what kind.  Draft Schematics should not be containers.</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="CT_none"/>
										<xs:enumeration value="CT_slotted"/>
										<xs:enumeration value="CT_volume"/>
										<xs:enumeration value="CT_volumeIntangible"/>
										<xs:enumeration value="CT_volumeGeneric"/>
										<xs:enumeration value="CT_ridable"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="shsTintPalette" type="xs:string" default='""'>
								<xs:annotation>
									<xs:documentation>(Required) outputs to shared draft schematic.  Not sure why we would ever tint a shematic.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shsSlotDescriptorFilename" type="xs:string" default='""'>
								<xs:annotation>
									<xs:documentation>(Required) outputs to shared draft schematic.  We should not need this in the draft schematic template.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shsArrangementDescriptorFilename" type="xs:string" default="abstract/slot/arrangement/arrangement_datapad.iff">
								<xs:annotation>
									<xs:documentation>(Required) outputs to shared draft schematic.  This seems to be the same for most draft schematics.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shsPortalLayoutFilename" type="xs:string" default='""'>
								<xs:annotation>
									<xs:documentation>(Required) outputs to shared draft schematic.  We should not need this in the draft schematic template.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shsClientDataFile" type="xs:string" default='""'>
								<xs:annotation>
									<xs:documentation>(Required) outputs to shared draft schematic.  We should not need this in the draft schematic template.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="shsGroupDatatable" nillable="true">
								<xs:annotation>
									<xs:documentation>(Optional) outputs to shared schematic_group.tab.  This tells where the schematic is granted. </xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="GroupId" type="xs:string"/>
										<xs:element name="SchematicName" type="xs:string"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>
